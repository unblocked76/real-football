"use strict";var _p=window;var java=_p.java=_p.java||{};var io=_p.java.io=_p.java.io||{};var DataInputStream=_p.java.io.DataInputStream=gloft.Class.extend({m_InputStream:null,bytearr:[],chararr:[],ctor:function(a){this.m_InputStream=a},skip:function(a){return this.m_InputStream.skip(a)},readFully:function(c,e,a){var e=e||0;var a=a||c.length;if(a<0){throw new Error()}var f=0;while(f<a){var d=this.m_InputStream.read(c,e+f,a-f);if(d<0){throw new Error()}f+=d}},readShort:function(){var b=this.m_InputStream.read();var a=this.m_InputStream.read();if((b|a)<0){throw new error()}return gloft.casttoshort((b<<8)+(a<<0))},readInt:function(){var d=this.m_InputStream.read();var c=this.m_InputStream.read();var b=this.m_InputStream.read();var a=this.m_InputStream.read();if((d|c|b|a)<0){throw new Error()}return gloft.casttoint((d<<24)+(c<<16)+(b<<8)+(a<<0))},readUnsignedShort:function(){var b=this.m_InputStream.read();var a=this.m_InputStream.read();if((b|a)<0){throw new Error()}return gloft.casttoint((b<<8)+(a<<0))},readUTF:function(){return DataInputStream.readUTF(this)},close:function(){this.m_InputStream.close();this.m_InputStream=null},});DataInputStream.readUTF=function(i){var j=i.readUnsignedShort();var d=[];var k=[];if(i instanceof DataInputStream){var a=i}var h,f,e;var g=0;var b=0;i.readFully(d,0,j);while(g<j){h=gloft.casttoint(d[g]&255);if(h>127){break}g++;k[b++]=gloft.casttochar(h)}while(g<j){h=gloft.casttoint(d[g]&255);switch(h>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:g++;k[b++]=gloft.casttochar(h);break;case 12:case 13:g+=2;if(g>j){throw new Error("malformed input: partial character at end")}f=gloft.casttoint(d[g-1]);if((f&192)!=128){throw new Error("malformed input around byte "+g)}k[b++]=gloft.casttochar(((h&31)<<6)|(f&63));break;case 14:g+=3;if(g>j){throw new Error("malformed input: partial character at end")}f=gloft.casttoint(d[g-2]);e=gloft.casttoint(d[g-1]);if(((f&192)!=128)||((e&192)!=128)){throw new Error("malformed input around byte "+(g-1))}k[b++]=gloft.casttochar(((h&15)<<12)|((f&63)<<6)|((e&63)<<0));break;default:throw new Error("malformed input around byte "+g)}}return k.join("")};