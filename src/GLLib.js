"use strict";var GLLib=javax.microedition.lcdui.Canvas.extend({m_frameCoheranceTimer:gloft.casttolong(null),Game_update:function(){gloft.error("The abstract method.")},Game_Run:function(){},ctor:function(b,a){javax.microedition.lcdui.Canvas.prototype.ctor.call(this);GLLib.Dbg("GLLib.constructor");this.CheckAndDumpConfig();GLLib.AssertConfig();GLLib.s_gllib_instance=this;GLLib.s_game_state=-1;GLLib.s_game_isInPaint=true;GLLib.s_application=b;GLLib.s_display=a;this.SetupDisplay();GLLib.SetupDefaultKey();GLLib.s_game_frameDTTimer=java.lang.System.currentTimeMillis();this.m_frameCoheranceTimer=GLLib.s_game_frameDTTimer},Init:function(){GLLib.Dbg("GLLib.init");if(GLLib.s_game_state>=0){return}GLLib.s_screenWidth=640;GLLib.s_screenHeight=360;if(false){GLLib.s_nbKey=62}if(true){GLLib.s_keyState=gloft.ArrayCreation([GLLib.s_nbKey],gloft.casttobyte(null));GLLib.s_keyStateRT=gloft.ArrayCreation([GLLib.s_nbKey],gloft.casttobyte(null))}if(true){GLLib.Pointer_Init()}if(false||false){if(false){var b=((this).getWidth()>(this).getHeight())?(this).getWidth():(this).getHeight();GLLib.m_imgBackBuffer=javax.microedition.lcdui.Image.createImage(b,b)}else{if(false){GLLib.m_imgBackBuffer=javax.microedition.lcdui.Image.createImage(GLLib.s_screenWidth,GLLib.s_screenHeight)}else{GLLib.m_imgBackBuffer=javax.microedition.lcdui.Image.createImage((this).getWidth(),(this).getHeight())}}GLLib.m_gBackBuffer=GLLib.m_imgBackBuffer.getGraphics()}var a=java.lang.System.currentTimeMillis();if(GLLib.s_math_random==null){GLLib.s_math_random=new java.util.Random(a)}else{GLLib.s_math_random.setSeed(a)}GLLib.s_game_state=0;if(false&&GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!        GLLibConfig Assert Failed: Exiting!");GLLib.Dbg("GLLib.quit");GLLib.s_game_state=-1}if(true){if(GLLib.s_display!=null){GLLib.s_display.callSerially(this)}else{GLLib.Dbg("Init: useCallSerially is TRUE but the Display is NULL during Init()! Please start the callback manually!")}}else{new java.lang.Thread(this).start()}},GetSoftwareDoubleBuffer:function(){if(false||false){return GLLib.m_imgBackBuffer}return null},GetSoftwareDoubleBufferGraphics:function(){if(false||false){return GLLib.m_gBackBuffer}return null},UnInit:function(){GLLib.Dbg("GLLib.deInit");if(true){GLLib.s_keyState=null;GLLib.s_keyStateRT=null}if(false||false){GLLib.m_imgBackBuffer=null;GLLib.m_gBackBuffer=null}GLLib.MIME_type=null;if(true){java.lang.System.gc()}},Pause:function(){GLLib.Dbg("GLLib.Pause Call");if(!GLLib.s_game_isPaused){GLLib.s_game_isPaused=true;GLLib.Dbg("GLLib.Pausing");GLLibPlayer.Snd_PauseNotify()}},Resume:function(){GLLib.Dbg("GLLib.Resume Call");if(GLLib.s_game_isPaused){GLLib.Dbg("GLLib.Resuming");this.m_frameCoheranceTimer=(GLLib.s_game_frameDTTimer=(GLLib.s_game_timeWhenFrameStart=java.lang.System.currentTimeMillis()));GLLib.s_game_isPaused=false;this.SetupDisplay();GLLib.s_game_interruptNotify=true;if(true&&!GLLib.s_game_isInPaint){this.repaint()}GLLib.ResetKey()}if(false&&!true&&GLLib.s_game_state>=0){try{this.notifyAll()}catch(a){GLLib.Dbg("!!FATAL ERROR!! in cGame.Resume()."+a);a.printStackTrace()}}},hideNotify:function(){this.Pause()},showNotify:function(){this.Resume()},sizeChanged:function(b,a){if(!false&&!false){GLLib.s_screenWidth=b;GLLib.s_screenHeight=a}},SetupDisplay:function(){if(!false){this.setFullScreenMode(true)}if(GLLib.s_display!=null&&GLLib.s_display.getCurrent()!=this){GLLib.s_display.setCurrent(this)}},run:function(){if(!true){GLLib.Dbg("GLLib.run")}try{if(!true){this.SetupDisplay()}GLLib.s_game_isInPaint=false;while(GLLib.s_game_state>=0){if(true==true){GLLib.Time_Profiler_UpdateKey()}if(false){GLLib.Dbg_Console_UpdateKey()}if(!GLLib.s_game_isPaused){this.repaint();if(true){this.serviceRepaints()}if(true==true){if(!GLLib.s_tProf_isDrawReport){if(GLLib.s_tProf_isDefaultProfilingEnabled){GLLib.Time_Profiler_StartSlot("UPDATE")}this.Game_Run();if(GLLib.s_tProf_isDefaultProfilingEnabled){GLLib.Time_Profiler_EndSlot("UPDATE")}}}else{this.Game_Run()}var b=java.lang.System.currentTimeMillis();this.m_frameCoheranceTimer=java.lang.Math.min(this.m_frameCoheranceTimer,b);if(true&&GLLib.m_customSleepTime>=0){if(GLLib.m_customSleepTime==0){java.lang.Thread.yield()}else{java.lang.Thread.sleep(GLLib.m_customSleepTime)}}else{if(true){java.lang.Thread.sleep(java.lang.Math.max(1,GLLib.m_FPSLimiter-(b-this.m_frameCoheranceTimer)))}else{while(b-this.m_frameCoheranceTimer<GLLib.m_FPSLimiter){java.lang.Thread.yield();b=java.lang.System.currentTimeMillis();this.m_frameCoheranceTimer=java.lang.Math.min(this.m_frameCoheranceTimer,b)}}}this.m_frameCoheranceTimer=java.lang.System.currentTimeMillis()}else{if(false&&!true){if(GLLib.s_game_isPaused){this.wait()}}else{this.m_frameCoheranceTimer=java.lang.Math.min(this.m_frameCoheranceTimer,java.lang.System.currentTimeMillis());if(true){java.lang.Thread.sleep(1)}else{java.lang.Thread.yield()}}}if(true==true){GLLib.Time_Profiler_EndFrame()}if(true){GLLib.s_display.callSerially(this);return}}}catch(a){GLLib.Dbg("!!FATAL ERROR!! in cGame.run()."+a);a.printStackTrace();GLLib.s_game_state=-1}GLLib.Dbg("GLLib.Quitting main loop");this.UnInit();if(!false){GLLib.s_application.notifyDestroyed()}},paint:function(a){if(GLLib.s_bPlatformRequestPending&&false){GLLib.doPlatformRequest()}this.Game_Paint(a);GLLib.s_game_interruptNotify=false},Game_Paint:function(q){if(true==true&&GLLib.s_tProf_isDefaultProfilingEnabled){GLLib.Time_Profiler_StartSlot("RENDER")}GLLib.s_screenGraphics=q;if(true){var c=java.lang.System.currentTimeMillis()-GLLib.s_game_lastFrameTime;GLLib.s_game_lastFrameTime=java.lang.System.currentTimeMillis();if(c>3000&&GLLib.s_game_lastFrameTime!=0){this.Pause();this.Resume()}}if(GLLib.s_game_isPaused||GLLib.s_game_isInPaint){return}GLLib.s_game_isInPaint=true;this.UpdateKeypad();if(true){GLLib.Pointer_Reset();GLLib.Pointer_Update()}if(false&&GLLib.WasKeyPressed(6)){ASprite.s_debugSkipPaintModule=!ASprite.s_debugSkipPaintModule}GLLib.s_game_timeWhenFrameStart=java.lang.System.currentTimeMillis();if(true){GLLib.s_game_frameDT=gloft.casttoint((GLLib.s_game_timeWhenFrameStart-GLLib.s_game_frameDTTimer));if(GLLib.s_game_frameDT<0){GLLib.s_game_frameDT=0}if(GLLib.s_game_frameDT>1000){GLLib.s_game_frameDT=1000}GLLib.s_game_frameDTTimer=GLLib.s_game_timeWhenFrameStart;GLLib.s_game_totalExecutionTime+=GLLib.s_game_frameDT;GLLib.s_game_FPSAverage=gloft.casttoint(100000*GLLib.s_game_currentFrameNB/(GLLib.s_game_totalExecutionTime+1))}++GLLib.s_game_currentFrameNB;try{if((false||false)&&GLLib.m_bBackBufferEnabled){GLLib.g=(GLLib.s_lastPaintGraphics=GLLib.m_gBackBuffer);this.Game_update();if(false){ASprite.ScaleAndBlitBuffer(q,GLLib.m_imgBackBuffer)}else{if(false){GLLib.g=GLLib.s_screenGraphics;var a=GLLib.s_screenHeight;var p=GLLib.s_screenWidth;if(true){var m=2;var l=4;if(m<=0||p%m!=0){GLLib.Assert(false,"PAINTING ROTATED BUFFER DIVISIONS:  landscape_useRotateBuffer_divisionCols is zero or negative or doesn't divide the screen width evenly.")}if(l<=0||a%l!=0){GLLib.Assert(false,"PAINTING ROTATED BUFFER DIVISIONS:  landscape_useRotateBuffer_divisionRows is zero or negative or doesn't divide the screen height evenly.")}var k=gloft.casttoint(p/m);var h=gloft.casttoint(a/l);var f=0;var d=0;for(var g=0;g<m;++g){for(var e=0;e<l;++e){if(false){GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIII(GLLib.m_imgBackBuffer,f,d,k,h,6,d,p-(k+f),20)}else{GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIII(GLLib.m_imgBackBuffer,f,d,k,h,5,a-(d+h),f,20)}d+=h}f+=k;d=0}}else{if(false){GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIII(GLLib.m_imgBackBuffer,0,0,p,a,6,0,0,20)}else{GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIII(GLLib.m_imgBackBuffer,0,0,p,a,5,0,0,20)}}}else{q.drawImage(GLLib.m_imgBackBuffer,0,0,20)}}}else{if(GLLib.pfx_usingScreenBuffer&&(GLLib.s_PFX_enableScreenBufferThisFrame!=0||GLLib.s_PFX_enableScreenBuffer!=0)){GLLib.g=(GLLib.s_lastPaintGraphics=GLLib.s_PFX_screenBufferG)}else{GLLib.s_lastPaintGraphics=q;GLLib.g=q}this.Game_update();if(GLLib.pfx_usingScreenBuffer&&GLLib.s_PFX_initializd){var r=false;if(false){if(GLLib.s_PFX_params[1][4]!=0){r=true}GLLib.s_PFX_params[1][4]=0}if(GLLib.s_PFX_enableScreenBufferThisFrame!=0||GLLib.s_PFX_enableScreenBuffer!=0){if(!r){GLLib.s_lastPaintGraphics=q;GLLib.g=q;if(false){GLLib.DrawImage(q,GLLib.s_PFX_screenBuffer,0,0,20,false)}else{GLLib.DrawImage(q,GLLib.s_PFX_screenBuffer,0,0,20,true)}}GLLib.s_PFX_enableScreenBufferThisFrame=0}}}}catch(o){GLLib.Dbg("!!FATAL ERROR!! in Game_paint()."+o);o.printStackTrace();GLLib.s_game_state=-1}if(20000>0&&0>0){if(java.lang.Runtime.getRuntime().totalMemory()>0&&java.lang.Runtime.getRuntime().freeMemory()<20000){java.lang.System.gc()}}else{if(0>0&&java.lang.Runtime.getRuntime().totalMemory()>0){java.lang.System.gc()}else{if(20000>0&&java.lang.Runtime.getRuntime().freeMemory()<20000){java.lang.System.gc()}}}GLLib.s_game_isInPaint=false;GLLib.s_screenGraphics=null;if(true==true){if(GLLib.s_tProf_isDefaultProfilingEnabled){GLLib.Time_Profiler_EndSlot("RENDER")}GLLib.Time_Profiler_OutputInfo()}if(false){GLLib.Dbg_Console_OutputToScreen()}},CheckAndDumpConfig:function(){java.lang.System.out.println("");java.lang.System.out.println("");java.lang.System.out.println("GLLib configuration (after the merge with your GLLibConfiguration.java file):");java.lang.System.out.println("");java.lang.System.out.println("This GLLib was compiled for   : MIDP2");java.lang.System.out.println("");if(640!=0){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("screenWidth                                            = "+640);if(360!=0){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("screenHeight                                           = "+360);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSystemGc                                            = "+true);if(20000!=0){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("lowMemoryLimit                                         = "+20000);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("highMemoryLimit                                        = "+0);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useFrameDT                                             = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("platformRequestOnExit                                  = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useLongSleepAfterPlatformRequest                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("platformRequestOnPaint                                 = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("platformRequestOnNewThread                             = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("destroyAppAfterPlatformRequest                         = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("disableNotifyDestroyed                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("exitOnFailedAssert                                     = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useRepaintAtResume                                     = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useDrawLineWithFillTriangle                            = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSafeFillRect                                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useDrawLineClippingBug                                 = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSafeDrawRegion                                      = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSoftwareDoubleBuffer                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSoftwareDoubleBufferScaling                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSoftwareDoubleBufferLarge                           = "+false);if(14!=25){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("FPSLimiter                                             = "+14);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSleepInsteadOfYield                                 = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sleepDurationWhenSuspended                         = "+1);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("allowCustomSleepTime                                   = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useCallSerially                                        = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    threadWaitOnInterrupt                              = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useServiceRepaints                                     = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useFakeInterruptHandling                               = "+true);if(3000!=3000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    FakeInterruptThreshold                             = "+3000);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useDrawPartialRGB                                      = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useDrawRGBTranslationFix                               = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("MIDP2forceNonFullScreen                                = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useNokiaS60SetClipBugfix                               = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useDrawRGBOffsetFix                                    = "+true);if(64!=16){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("alphaRectBufferSize                                    = "+64);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("alphaRectUseImage                                      = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("alphaRectSlotsAmount                                   = "+1);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useFillTriangleSoft                                    = "+false);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useGetDisplayColorMagentaFix                           = "+-1);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("divideLargeImageDrawing                                = "+true);if(400!=1000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("divideLargeImageDrawing_maxWidth                       = "+400);if(240!=1000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("divideLargeImageDrawing_maxHeight                      = "+240);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("softkeyOKOnLeft                                        = "+true);if(-6!=-6){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeLeftSoftkey                                     = "+-6);if(-7!=-7){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeRightSoftkey                                    = "+-7);if(-5!=-5){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeFire                                            = "+-5);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeUp                                              = "+-1);if(-2!=-2){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeDown                                            = "+-2);if(-3!=-3){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeLeft                                            = "+-3);if(-4!=-4){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeRight                                           = "+-4);if(-8!=-8){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("keycodeMenuOpen                                        = "+-8);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useKeyAccumulation                                     = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useSoftKeyAccumulation                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    useQwertyKeyboard                                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useAbsoluteValueOfKeyCode                              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("blackberryTrackballSensitivity                         = "+0);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useBBFirmware420                                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useBugFixMultipleKeyPressed                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useNativeKeyBehavior                                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useVolumeKeys                                          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    keycodeVolumeUp                                    = "+0);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    keycodeVolumeDown                                  = "+0);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("simulateNavigation                                     = "+false);if(2!=2){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("simulatedHoldDuration                                  = "+2);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("useFlashLightInsteadOfVibration                        = "+false);if(8!=8){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("math_fixedPointBase                                    = "+8);if(8!=8){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("math_angleFixedPointBase                               = "+8);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("math_AtanUseCacheTable                                 = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("text_useStringCache                                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("text_useStringCachePool                                = "+false);if(50!=50){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    text_stringCachePoolSize                           = "+50);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("text_useInternalUTF8Converter                          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("text_useMultipleTextPacks                              = "+false);if(32!=32){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    text_maxPacks                                      = "+32);if(10!=10){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    text_maxStringsLog2                                = "+10);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("text_useTextFormatByLanguageRules                      = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_enable                                           = "+true);if(1!=2){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_numberOfChannels                             = "+1);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_enableThread                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("        sound_useSynchronization                       = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useJSR135                                    = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useCachedPlayers                             = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("        sound_useRealizedPlayers                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("        sound_usePrefetchedPlayers                     = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useSetMediaTimeBeforePlay                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useFakeMediaDuration                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useFreeChannelOnStop                         = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useStopSoundsOnInterrupt                     = "+true);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useSetLevel                                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useFader                                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_faderMinTimeBetweenUpdates                   = "+0);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_useFaderLoopingBugFix                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_allowMultiplePlayersPerSlot                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_allowURLCreation                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sound_forcePromptOnURLLoad                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_debugVerbose                                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_usePlayerListener                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_useADPCMtoPCMConversion                          = "+false);if(7!=7){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_maxQueueLength                                   = "+7);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sound_enableProfiling                                  = "+false);if(256!=256){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_skipbufferSize                                    = "+256);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_keepLoaded                                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_dbgDataAccess                                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_useBlackBerryGZipDecompression                    = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_supportLZMADecompression                          = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_useSDCard                                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_use_CORE_ResourceManager                          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    pack_CORE_ReadFromStreamBug                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    pack_CORE_UseStreamReset                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_use_DLC                                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pack_use_INIEX_ResourceManager                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("rms_usePackRead                                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("rms_useSharing                                         = "+false);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("rms_maxRecordSize                                      = "+-1);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("rms_disableScratchPad                                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("rms_useXXTEAEncryption                                 = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useTileShift                                   = "+false);if(6!=4){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_maxLayerCount                                  = "+6);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useIndexAsShort                                = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_usePixelEffects                                = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useClip                                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useBugFixImageOddSize                          = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useLayerLastUpdatedArea                        = "+true);if(6!=6){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    tileset_maxUpdatedAreas                            = "+6);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useRenderRedirectToBuffer                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useMultiSprites                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useMultiBlockTileset                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useDrawRegionForBackBufferBlit                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useEmptyTilemapLayer                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useTilesetMask                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useLayerPadding                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    tileset_debugUseLayerPadding                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_use2BitsPerFlipData                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tileset_useRuntimeRleCompressedMapData                 = "+false);if(14!=25){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_animFPS                                         = "+14);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_noFrameSkip                                     = "+true);if(100!=16){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("MAX_SPRITE_PALETTES                                    = "+100);if(3!=3){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("MAX_FLIP_COUNT                                         = "+3);if(35000!=256){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("TMP_BUFFER_SIZE                                        = "+35000);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("TMP_ALT_BUFFER_SIZE                                    = "+-1);if(256!=256){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_tmpFrameBufferSize                              = "+256);if(256!=256){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("PNG_BUFFER_SIZE                                        = "+256);if(8!=8){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("FIXED_PRECISION                                        = "+8);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useNokiaUI                                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDynamicPng                                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_usePrecomputedCRC                           = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("        sprite_useBSpriteFlags                         = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useBSpriteExtraFlags                            = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCreateRGB                                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useGifHeader                                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useLoadImageWithoutTransf                       = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useTransfRot                                    = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useTransfFlip                                   = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useTransMappings                                = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePrecomputedFrameRect                         = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDynamicTransformBuffer                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useBugFixImageOddSize                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDrawRegionClipping                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useNokia7650DrawPixelBug                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_drawPixelClippingBug                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_fillRoundRectBug                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_drawRegionFlippedBug                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_drawRegionRotationBug                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDrawStringSleep                              = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    SLEEP_DRAWSTRINGB                                  = "+1);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCreateRGBTransparencyBug                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_drawRGBTransparencyBug                          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_getRGBTransparencyBug                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useA870CreateRGBTransparencyFix                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useSingleDirectGraphics                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useSingleImageForAllModules                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_fpsRegion                                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_useCacheFlipXY                              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowRAWSprites                                 = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_ModuleMapping_useModuleImages                   = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCacheRGBArrays                               = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useManualCacheRGBArrays                         = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_RGBArraysUseDrawRGB                             = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    useDrawRGBClipNotOnScreenBugFix                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_useTruncatedRGBBuffer                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useSkipFastVisibilityTest                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePaintFrameVisibilityTest                     = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useModuleMapping                                = "+true);if(16!=16){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    MAX_MODULE_MAPPINGS                                = "+16);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useFrameMapping                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useSingleArrayForFMAF                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useExternImage                                  = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useModuleDataOffAsShort                         = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCachePool                                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useARGBCachePool                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useSingleFModuleCache                           = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePixelFormat8888                              = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePixelFormat0888                              = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePixelFormat4444                              = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePixelFormat1555                              = "+true);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePixelFormat0565                              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePixelFormat0332                              = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI2                               = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI4                               = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI16                              = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI64RLE                           = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI127RLE                          = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI256RLE                          = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatI256                             = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA8_I32                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA32_I8                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA256_I64                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA256_I128                        = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA256_I256                        = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA256_I64RLE                      = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA256_I127RLE                     = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useEncodeFormatA256_I256RLE                     = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useNonInterlaced                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useModuleXY                                     = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useModuleXYShort                                = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useModuleWHShort                                = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useIndexExFmodules                              = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowShortIndexForFModules                      = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_forceShortIndexForFModules                      = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowShortNumOfFModules                         = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_forceShortNumOfFModules                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useFMOffShort                                   = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowFMOffShort                                 = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_alwaysBsNfm1Byte                                = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useFMPalette                                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useFMBlendMode                                  = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useHyperFM                                      = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_alwaysBsNoFmStart                               = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useAfOffShort                                   = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_alwaysBsNoAfStart                               = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useIndexExAframes                               = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowShortIndexForAFrames                       = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_forceShortIndexForAFrames                       = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowShortNumOfAFrames                          = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_forceShortNumOfAFrames                          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useOperationRecord                              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useOperationRect                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useOperationMark                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useModuleUsageFromSprite                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_fontUseOneFramePerLetter                        = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_fontBackslashChangePalette                      = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_fontDisableUnderlineBoldEffect                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_fontDisableBackslashChangePaletteEffect         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useResize                                       = "+false);if(16!=16){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useGenPalette                                   = "+16);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useMultipleModuleTypes                          = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_useModuleColorAsByte                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_useOriginalDrawRect                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_Rect                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_FillRect                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_AlphaFillRect             = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_Arc                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_FillArc                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_Marker                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_Triangle                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_FillTriangle              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_Line                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_disableModuleType_FillRectGradient          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_convertMarkersToImageTypes                      = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useFrameRects                                   = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    sprite_alwaysBsSkipFrameRc                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useFrameCollRC                                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDeactivateSystemGc                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCreateImageOnDrawPFX                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_debugLoading                                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_debugErrors                                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_debugUsedMemory                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_debugModuleUsage                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_debugColision                                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_debugTogglePaintModule                          = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_newTextRendering                                = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowRotatedFont                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowCharYOffset                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useIntCharMap                                   = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_bufferTextPageFormatting                        = "+true);if(1952!=100){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("MAX_WRAP_TEXT_INFO                                     = "+1952);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCanBreakLine                                 = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDynamicPaletteBlendingCache                  = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useBitmapFont                                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useBitmapFontCachePool                          = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useBitmapFontFreeWrap                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useBitmapFontFixedWidth                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useSystemFont                                   = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCacheEffectReflection                        = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowCache                                      = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCachedFrames                                 = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useCacheFramesWithCustomBlit                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_usePaletteIndexCache                            = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowPixelArrayGraphics                         = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowModuleMarkerMasking                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_allowModuleMarkerCallback                       = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_animStillDrawWhenOver                           = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_animDurationZeroAsInfinite                      = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print("E");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_removeOnePixelModule                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useDoubleArrayForModuleData                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_drawImageOffscreenBug                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_supportTransparentIndexData                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_useAsphaltFunctionality                         = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("sprite_skipModuleCacheOnDrawPFX                        = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_XPLAYER_VERSION                                = "+1);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_DEBUG                                   = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_TIMEOUT                                 = "+false);if(30000!=30000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CONN_TIMEOUT                                   = "+30000);if(false){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_HTTP_NO_CANCEL                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_USE_HTTP_POST                                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CARRIER_USSPRINT                               = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CARRIER_USNEXTEL                               = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CARRIER_USCINGULAR_ORANGE                      = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CARRIER_USCINGULAR_BLUE                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CARRIER_USVIRGIN                               = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_M7_SUPPORT                              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CARRIER_MXTELCEL                               = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_USE_BUG_FIX_MESSAGE_SIZE                       = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_MULTIPLAYER                             = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_DUAL_TCP                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_PLAYER_SPECIFIC_DATA                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_FIND_PLAYER                             = "+false);if(7000!=7000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_KEEP_ALIVE_TIME                                = "+7000);if("UTF-8"!="UTF-8"){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_DEFAULT_ENCODING                               = UTF-8");if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_DOWNLOAD                                = "+false);if(15!=15){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_MAX_USERNAME_PASSWORD_LEN                      = "+15);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_FULLSCREEN_CHANGE                              = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_KEEP_ALIVE                              = "+true);if(90000!=90000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_KEEP_ALIVE_INTERVAL                            = "+90000);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_ENABLE_READ_COMMUNICATION_SUPPORT              = "+false);if(7000!=7000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_LOBBY_KEEP_ALIVE_INTERVAL                      = "+7000);if(10!=10){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_CONFIG_OUT_OF_DATE                             = "+10);if("server.cfg"!="server.cfg"){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_SERVER_CONFIG_SAVE_FILE                        = server.cfg");if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print("w");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("xplayer_USE_NEW_VERSION                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("federation_ENABLE_DEBUG                                = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("tcp_ENABLE_DEBUG                                       = "+false);if(2!=2){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("federation_Reconnect_Tries_Amount                      = "+2);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("federation_ALWAYS_RECONNECT_WHEN_ERROR                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("federation_Reconnect_Delay_Time                        = "+0);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_ScratchPad_EOF                                    = "+-1);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_ScratchPad_SaveGameFile                           = "+-1);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_ScratchPad_CreditsFile                            = "+-1);if(-1!=-1){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_Network_NoError                                   = "+-1);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_Network_ErrorNoNetwork                            = "+0);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_Network_ErrorNoNetworkAccess                      = "+1);if(4!=4){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("doja_Network_ErrorNoCredits                            = "+4);if(400!=400){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pathfinding_MaxNode                                    = "+400);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pathfinding_Debug                                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pathfinding_UseTunnelingMoveCostFunc                   = "+false);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useScreenBuffer                                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useBlendToCustomBuffer                             = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useFullScreenEffectBlur                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useFullScreenEffectBlend                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useFullScreenEffectAdditive                        = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useFullScreenEffectSubtractive                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useFullScreenEffectMultiplicative                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useEffectGlow                                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    pfx_glowUseOneBuffer                               = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectAdditive                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectMultiplicative                      = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectOverlay                             = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectColorDodge                          = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectGrayscale                           = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectShine                               = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectBlend                               = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectScale                               = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectStencil                             = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectReflection                          = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectPerspective                         = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectRotate                              = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("pfx_useSpriteEffectScaleAndGrayscale                   = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("time_prof_enabled                                      = "+true);if(200!=200){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("profiling_slotsAmount                                  = "+200);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("screenconsole_enabled                                  = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    screenconsole_addAllLogs                           = "+false);if(500!=500){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    screenconsole_logHistorySize                       = "+500);if(5!=5){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    screenconsole_numberOfVisibleLogs                  = "+5);if(65280!=65280){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    screenconsole_fontColor                            = "+65280);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    screenconsole_fontBackgroundColor                  = "+0);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    screenconsole_recordLogCurrentTime                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    filelog_Enabled                                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("    filelog_addAllLogs                                 = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("landscape_useRotateBuffer                              = "+false);if(4!=4){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("landscape_useRotateBuffer_divisionRows                 = "+4);if(2!=2){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("landscape_useRotateBuffer_divisionCols                 = "+2);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("landscape_useRotateBuffer_rotate270                    = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("landscape_useRotatedModules                            = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("use_touchScreen                                        = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("touchScreen_numPointers                                = "+1);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_disableSMSCenterDetection                          = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_useUTF8Encoding                                    = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_useFakeSMSSent                                     = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_useFakeSMSForUnlock                                = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_enableSMSHeader                                    = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_includeDownloadCode                                = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_disableOnInvalidJadFile                            = "+true);if(false!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_disableRegionAndCarrierSelection                   = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_singleProfileOnly                                  = "+true);if(30000!=30000){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_timerSMS                                           = "+30000);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_behaveAsUnlock                                     = "+false);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_useURLEncoding                                     = "+true);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_ANDROID                                            = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_platformRequestNewThread                           = "+false);if(false){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_BLACKBERRY                                         = "+false);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_enable4TierSystem                                  = "+true);if(true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_enableDebug                                        = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("IAP_disableOnDemoBuilds                                = "+true);if(true!=true){java.lang.System.out.print("*");java.lang.System.out.print(" ");java.lang.System.out.print(" ")}else{java.lang.System.out.print("   ")}java.lang.System.out.println("deviceId_useBluetoothMac                               = "+true);java.lang.System.out.println("Legend :");java.lang.System.out.println("* - Different from default");java.lang.System.out.println("w - Different from default, be carefull with this modification");java.lang.System.out.println("E - Different from default, Invalid value for your plateform");java.lang.System.out.println("");java.lang.System.out.println("");java.lang.System.out.println("")},keyPressed:function(c){if(false){if(GLLib.m_last_key_pressed!=c&&GLLib.m_last_key_pressed!=-9999){this.keyReleased(GLLib.m_last_key_pressed)}GLLib.m_last_key_pressed=c}if(true){GLLib.s_keyLastKeyPressUntranslatedCode=c;var e=this.Game_TranslateKeyCode(c);if(GLLib.s_keyStateRT==null){return}if(GLLib.s_keyStateRT[e]>0){return}if(GLLib.s_keyStateRT[e]<0){GLLib.s_keyStateRT[e]=0}if(GLLib.s_keyStateRT[e]<126){var d=GLLib.s_keyStateRT;var a=e;++d[a]}}else{GLLib.s_keyLastKeyPressUntranslatedCode=c;var f=1<<this.Game_TranslateKeyCode(c);GLLib.m_current_keys_pressed|=f;GLLib.m_current_keys_state|=f}},keyReleased:function(f){if(false&&f==GLLib.m_last_key_pressed){GLLib.m_last_key_pressed=-9999}if(true){var e=this.Game_TranslateKeyCode(f);if(GLLib.s_keyStateRT==null){return}if(GLLib.s_keyStateRT[e]>0){var d=GLLib.s_keyStateRT;var a=e;d[a]*=-1}}else{var c=1<<this.Game_TranslateKeyCode(f);GLLib.m_current_keys_released|=c;GLLib.m_current_keys_state&=~c}},UpdateKeypad:function(){if(true){GLLib.s_game_keyEventIndex=-1;GLLib.s_game_keyJustPressed=-1;for(var c=0;c<GLLib.s_nbKey;++c){GLLib.s_keyState[c]=GLLib.s_keyStateRT[c];if(GLLib.s_keyStateRT[c]!=0){GLLib.s_game_keyEventIndex=c;if(GLLib.s_keyStateRT[c]<0){GLLib.s_keyStateRT[c]=0}else{if(GLLib.s_keyStateRT[c]<126){if(GLLib.s_keyStateRT[c]==1){GLLib.s_game_keyJustPressed=c;GLLib.s_game_keyPressedTime=GLLib.s_game_timeWhenFrameStart}var d=GLLib.s_keyStateRT;var e=c;++d[e];if(!false&&c>=18){var b=GLLib.s_keyStateRT;var a=c;b[a]*=-1}}}}}}else{GLLib.m_keys_pressed=GLLib.m_current_keys_pressed;GLLib.m_keys_released=GLLib.m_current_keys_released;GLLib.m_keys_state=GLLib.m_current_keys_state;GLLib.m_current_keys_pressed=0;GLLib.m_current_keys_released=0;GLLib.s_game_keyPressedTime=GLLib.s_game_timeWhenFrameStart}if(GLLib.s_keysDisabledTimer>0){if(true&&GLLib.s_keysDisabledTimer!=java.lang.Integer.MAX_VALUE){GLLib.s_keysDisabledTimer-=GLLib.s_game_frameDT}GLLib.ResetKey()}},Game_TranslateKeyCode:function(d){if(false&&d<0){d*=-1}var c=new java.lang.Integer(d);if(GLLib.standardKeyTable==null){return 0}var b=GLLib.standardKeyTable.get(c);if(b!=null){return gloft.casttobyte(b)}var a=GLLib.gameActionKeyTable.get(c);if(a!=null){return gloft.casttobyte(a)}return 0},GetResourceAsStream:function(a){return window.getResourceAsStream(a)},Text_GetPhoneDefaultLangage:function(){try{var c=java.lang.System.getProperty("microedition.locale");if(c==null){return 0}var b=c.toUpperCase();if(b.indexOf("EN")>=0){return 0}if(b.indexOf("DE")>=0){return 1}if(b.indexOf("FR")>=0){return 2}if(b.indexOf("IT")>=0){return 3}if(b.indexOf("ES")>=0){return 4}if(b.indexOf("BR")>=0){return 5}if(b.indexOf("PT")>=0){return 6}if(b.indexOf("JA")>=0){return 7}if(b.indexOf("JP")>=0){return 7}if(b.indexOf("ZH")>=0){return 8}if(b.indexOf("CN")>=0){return 8}if(b.indexOf("KO")>=0){return 9}if(b.indexOf("KP")>=0){return 9}if(b.indexOf("KR")>=0){return 9}if(b.indexOf("RU")>=0){return 10}if(b.indexOf("PL")>=0){return 12}if(b.indexOf("TR")>=0){return 11}if(b.indexOf("CZ")>=0){return 13}if(b.indexOf("NL")>=0){return 14}if(b.indexOf("TH")>=0){return 15}if(b.indexOf("VI")>=0){return 16}if(b.indexOf("VN")>=0){return 16}if(b.indexOf("AR")>=0){return 17}}catch(a){a.printStackTrace()}return 0},Text_GetLanguageAsString:function(a){switch(a){case 0:return"EN";case 1:return"DE";case 2:return"FR";case 3:return"IT";case 4:return"ES";case 5:return"BR";case 6:return"PT";case 7:return"JP";case 8:return"CN";case 9:return"KR";case 10:return"RU";case 12:return"PL";case 11:return"TR";case 13:return"CZ";case 14:return"NL";case 15:return"TH";case 16:return"VI";case 17:return"AR";default:return null}},addCommand:function(a){if(true&&1>1&&a.getLabel()=="GLSetPointer"){GLLib.Pointer_SetCurrentPointer(a.getCommandType())}else{javax.microedition.lcdui.Canvas.prototype.addCommand.call(this,a)}},pointerReleased_dup_II:function(b,a){this.pointerReleased_dup_III(GLLib.s_currentPointer,b,a)},pointerReleased_dup_III:function(c,b,a){if(true){if(c>=1){GLLib.Assert(false,"pointerReleased: pointer ID "+c+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){if(c==0){GLLib.s_pointerX=b;GLLib.s_pointerY=a}GLLib.s_pointerX_multi[c]=b;GLLib.s_pointerY_multi[c]=a;if(false||false){GLLib.Pointer_AdjustToRotatedCoordinates_dup_I(c)}GLLib.s_isPointerReleasedSystem_multi[c]=true;if(c==0){GLLib.s_isPointerReleasedSystem=true}}else{GLLib.s_pointerX=b;GLLib.s_pointerY=a;if(false||false){GLLib.Pointer_AdjustToRotatedCoordinates_dup_()}GLLib.s_isPointerReleasedSystem=true}}},pointerPressed_dup_II:function(b,a){this.pointerPressed_dup_III(GLLib.s_currentPointer,b,a)},pointerPressed_dup_III:function(c,b,a){if(true){if(c>=1){GLLib.Assert(false,"pointerPressed: pointer ID "+c+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){if(c==0){GLLib.s_pointerX=b;GLLib.s_pointerY=a}GLLib.s_pointerX_multi[c]=b;GLLib.s_pointerY_multi[c]=a;if(false||false){GLLib.Pointer_AdjustToRotatedCoordinates_dup_I(c)}GLLib.s_isPointerPressedSystem_multi[c]=true;if(c==0){GLLib.s_isPointerPressedSystem=true}}else{GLLib.s_pointerX=b;GLLib.s_pointerY=a;if(false||false){GLLib.Pointer_AdjustToRotatedCoordinates_dup_()}GLLib.s_isPointerPressedSystem=true}}},pointerDragged_dup_II:function(b,a){this.pointerDragged_dup_III(GLLib.s_currentPointer,b,a)},pointerDragged_dup_III:function(c,b,a){if(true){if(c>=1){GLLib.Assert(false,"pointerDragged: pointer ID "+c+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){if(c==0){GLLib.s_pointerX=b;GLLib.s_pointerY=a}GLLib.s_pointerX_multi[c]=b;GLLib.s_pointerY_multi[c]=a;if(false||false){GLLib.Pointer_AdjustToRotatedCoordinates_dup_I(c)}GLLib.s_isPointerDraggedSystem_multi[c]=true;if(c==0){GLLib.s_isPointerDraggedSystem=true}}else{GLLib.s_pointerX=b;GLLib.s_pointerY=a;if(false||false){GLLib.Pointer_AdjustToRotatedCoordinates_dup_()}GLLib.s_isPointerDraggedSystem=true}}},IAP_CheckAvailable:function(){if(false){return com.gameloft.android2d.iap.IAPLib.CheckAvailable()}return PaySMS.checkAvailable()},IAP_Init:function(a){if(!false){PaySMS.init(a)}},IAP_SendRequest_dup_I:function(a){this.IAP_SendRequest_dup_IjavalangString(a,"Cash")},IAP_SendRequest_dup_IjavalangString:function(b,a){if(false){com.gameloft.android2d.iap.IAPLib.SendRequest(b,a)}else{PaySMS.sendRequest(b,a)}},IAP_RedeemCode:function(){if(false){com.gameloft.android2d.iap.IAPLib.redeemCode()}else{PaySMS.redeemCode()}},IAP_Update:function(){if(false){return com.gameloft.android2d.iap.IAPLib.Update()}return PaySMS.update()},IAP_GetAvailableRegions:function(){if(false){return null}return PaySMS.getRegions()},IAP_GetAvailableCarriers:function(){if(false){return null}return PaySMS.getCarriers()},IAP_SetRegion:function(a){return !false&&PaySMS.setRegion(a)},IAP_SetCarrier:function(a){return !false&&PaySMS.setCarrier(a)},IAP_VerifyRequest:function(a){if(false){return com.gameloft.android2d.iap.IAPLib.verifyRequest(a)}return PaySMS.verifyRequest(a)},IAP_CheckMessageSent:function(){if(false){return com.gameloft.android2d.iap.IAPLib.checkMessageSent()}return PaySMS.checkMessageSent()},IAP_GetPackageIDPurchased:function(){if(false){return com.gameloft.android2d.iap.IAPLib.GetPackageIDPurchased()}return PaySMS.getPackageId()},IAP_GetItemTypePurchased:function(){if(false){return com.gameloft.android2d.iap.IAPLib.GetPackageTypePurchased()}return PaySMS.getItemType()},IAP_GetError:function(){if(false){return com.gameloft.android2d.iap.IAPLib.getError()}return PaySMS.getError()},IAP_GetPrice_dup_I:function(a){return this.IAP_GetPrice_dup_IjavalangString(a,"Cash")},IAP_GetPrice_dup_IjavalangString:function(b,a){if(false){return com.gameloft.android2d.iap.IAPLib.GetPrice(b,a)}return PaySMS.getPrice_dup_IjavalangString(b,a)},IAP_GetSupportNumber_dup_I:function(a){return this.IAP_GetSupportNumber_dup_IjavalangString(a,"Cash")},IAP_GetSupportNumber_dup_IjavalangString:function(b,a){if(false){return com.gameloft.android2d.iap.IAPLib.getSupportNumber(b,a)}return PaySMS.getSupportNumber_dup_IjavalangString(b,a)},IAP_GetBillingType_dup_I:function(a){return this.IAP_GetBillingType_dup_IjavalangString(a,"Cash")},IAP_GetBillingType_dup_IjavalangString:function(b,a){if(false){return com.gameloft.android2d.iap.IAPLib.GetBillingType(b,a)}return PaySMS.GetBillingType_dup_IjavalangString(b,a)},IAP_GetTermsAndConditions_dup_I:function(a){return this.IAP_GetTermsAndConditions_dup_IjavalangString(a,"Cash")},IAP_GetTermsAndConditions_dup_IjavalangString:function(b,a){if(false){return com.gameloft.android2d.iap.IAPLib.GetTermsAndConditions(b,a)}return PaySMS.GetTermsAndConditions_dup_IjavalangString(b,a)},IAP_Reset:function(){if(false){com.gameloft.android2d.iap.IAPLib.reset()}else{PaySMS.reset()}},IAP_GetFeed:function(){if(false){com.gameloft.android2d.iap.IAPLib.GetFeed()}},IAP_ItemUnlockedSilent:function(){return false&&com.gameloft.android2d.iap.IAPLib.itemUnlockedSilent()},IAP_SetLanguage:function(a){if(false){com.gameloft.android2d.iap.IAPLib.setLanguage(a)}},IAP_GetLanguage:function(){if(false){return com.gameloft.android2d.iap.IAPLib.getLanguage()}return null},});GLLib.g=null;GLLib.s_lastPaintGraphics=null;GLLib.s_screenGraphics=null;GLLib.k_DEBUG=true;GLLib.s_game_isPaused=gloft.casttoboolean(null);GLLib.s_game_state=gloft.casttoint(null);GLLib.s_game_timeWhenFrameStart=gloft.casttolong(null);GLLib.s_game_lastFrameTime=gloft.casttolong(null);GLLib.s_game_interruptNotify=gloft.casttoboolean(null);GLLib.s_screenWidth=gloft.casttoint(null);GLLib.s_screenHeight=gloft.casttoint(null);GLLib.s_display=null;GLLib.s_game_isInPaint=gloft.casttoboolean(null);GLLib.s_application=null;GLLib.m_FPSLimiter=gloft.casttoint(null);GLLib.m_customSleepTime=gloft.casttoint(null);GLLib.m_imgBackBuffer=null;GLLib.m_gBackBuffer=null;GLLib.m_bBackBufferEnabled=gloft.casttoboolean(null);GLLib.s_game_frameDT=gloft.casttoint(null);GLLib.s_game_frameDTTimer=gloft.casttolong(null);GLLib.s_game_totalExecutionTime=gloft.casttoint(null);GLLib.s_game_FPSAverage=gloft.casttoint(null);GLLib.s_game_currentFrameNB=gloft.casttoint(null);GLLib.s_gllib_instance=null;GLLib.s_bPlatformRequestPending=gloft.casttoboolean(null);GLLib.s_urlPlatformRequest=null;GLLib.s_keyState=null;GLLib.s_keyStateRT=null;GLLib.s_keyLastKeyPressUntranslatedCode=gloft.casttoint(null);GLLib.s_keyLastKeyStates=gloft.casttoint(null);GLLib.s_game_keyEventIndex=gloft.casttoint(null);GLLib.s_game_keyJustPressed=gloft.casttoint(null);GLLib.s_game_keyPressedTime=gloft.casttolong(null);GLLib.m_keys_pressed=gloft.casttoint(null);GLLib.m_keys_released=gloft.casttoint(null);GLLib.m_keys_state=gloft.casttoint(null);GLLib.m_current_keys_state=gloft.casttoint(null);GLLib.m_current_keys_pressed=gloft.casttoint(null);GLLib.m_current_keys_released=gloft.casttoint(null);GLLib.m_last_key_pressed=gloft.casttoint(null);GLLib.s_keysDisabledTimer=gloft.casttoint(null);GLLib.standardKeyTable=null;GLLib.gameActionKeyTable=null;GLLib.s_nbKey=gloft.casttoint(null);GLLib.s_dbg_console_logSlotsSize=gloft.casttoint(null);GLLib.s_dbg_console_nbVisibleSlots=gloft.casttoint(null);GLLib.s_dbg_console_fontColor=gloft.casttoint(null);GLLib.s_dbg_console_fontBackgroundColor=gloft.casttoint(null);GLLib.s_dbg_console_recordLogCurrentTime=gloft.casttoboolean(null);GLLib.s_dbg_console_forceFocusNextAvailableSlot=gloft.casttoboolean(null);GLLib.s_dbg_console_isScreenConsoleEnabled=gloft.casttoboolean(null);GLLib.s_dbg_console_logs=null;GLLib.s_dbg_console_logs_time=null;GLLib.s_dbg_console_nextAvailableLogSlot=gloft.casttoint(null);GLLib.s_dbg_console_firstVisibleLogSlot=gloft.casttoint(null);GLLib.s_dbg_console_keyHeldTime=gloft.casttolong(null);GLLib.s_dbg_console_keyHeldTimer=gloft.casttolong(null);GLLib.k_dbg_console_ACTION_NONE=-1;GLLib.k_dbg_console_ACTION_ENABLE=0;GLLib.k_dbg_console_ACTION_SCROLL_UP=1;GLLib.k_dbg_console_ACTION_SCROLL_DOWN=2;GLLib.k_dbg_console_ACTION_CLEAN=3;GLLib.k_dbg_console_ACTION_MAX=4;GLLib.s_dbg_console_currentAction=gloft.casttoint(null);GLLib.s_dbg_console_touchActionAreas=null;GLLib.k_dbg_console_TOUCH_AREA_SIZE=50;GLLib.m_filelogBuffer=null;GLLib.m_filelogPointer=gloft.casttoint(null);GLLib.k_filelogBufferSize=300;GLLib.s_math_F_1=gloft.casttoint(null);GLLib.s_math_F_05=gloft.casttoint(null);GLLib.s_math_random=null;GLLib.s_Math_distPointLineX=gloft.casttoint(null);GLLib.s_Math_distPointLineY=gloft.casttoint(null);GLLib.s_Math_intersectX=gloft.casttoint(null);GLLib.s_Math_intersectY=gloft.casttoint(null);GLLib.MATH_SEGMENTINTERSECT_DONT_INTERSECT=0;GLLib.MATH_SEGMENTINTERSECT_COLLINEAR=-1;GLLib.MATH_SEGMENTINTERSECT_DO_INTERSECT=1;GLLib.Math_quickSortIndices_nbItemPerValue=gloft.casttoint(null);GLLib.Math_quickSortIndices_itemNb=gloft.casttoint(null);GLLib.Math_quickSortIndices_result=null;GLLib.Math_quickSortIndices_data=null;GLLib.s_math_bezierX=gloft.casttoint(null);GLLib.s_math_bezierY=gloft.casttoint(null);GLLib.s_math_bezierZ=gloft.casttoint(null);GLLib.s_math_cosTable=null;GLLib.s_math_sqrtTable=null;GLLib.s_math_aTanTable=null;GLLib.Math_AngleMUL=gloft.casttoint(null);GLLib.Math_Angle90=gloft.casttoint(null);GLLib.Math_Angle180=gloft.casttoint(null);GLLib.Math_Angle270=gloft.casttoint(null);GLLib.Math_Angle360=gloft.casttoint(null);GLLib.k_rect_x0=0;GLLib.k_rect_y0=1;GLLib.k_rect_x1=2;GLLib.k_rect_y1=3;GLLib.Math_FixedPoint_PI=gloft.casttoint(null);GLLib.Math_FixedPoint_E=gloft.casttoint(null);GLLib.ratioRadiansToDegrees=gloft.casttoint(null);GLLib.ratioDegreesToAngleFixedPoint=gloft.casttoint(null);GLLib.MATH_INTERSECT_NO_INTERSECT=0;GLLib.MATH_INTERSECT_ONE_POINT=2;GLLib.MATH_INTERSECT_TWO_POINTS=4;GLLib.s_Math_intersectPoints=null;GLLib.ARRAY_BYTE=0;GLLib.ARRAY_SHORT=1;GLLib.ARRAY_INT=2;GLLib.m_stream=null;GLLib.m_streamMark=gloft.casttoboolean(null);GLLib.m_streamId=null;GLLib.m_streamSubPack=gloft.casttoint(null);GLLib.m_streamSize=gloft.casttoint(null);GLLib.m_resOffset=null;GLLib.m_res=null;GLLib.m_basepath=null;GLLib.m_resource=null;GLLib.m_resName=null;GLLib.m_resLength=null;GLLib.s_packNames=null;GLLib.s_pack_currentIndex=gloft.casttoint(null);GLLib.s_pack_filename=null;GLLib.s_pack_is=null;GLLib.s_pack_dataSource=gloft.casttoint(null);GLLib.s_pack_memBufSrc=null;GLLib.s_pack_memBufSrcOff=gloft.casttoint(null);GLLib.s_pack_curOffset=gloft.casttoint(null);GLLib.s_pack_nbData=gloft.casttoshort(null);GLLib.s_pack_offset=null;GLLib.s_pack_subPack_nbOf=gloft.casttoshort(null);GLLib.s_pack_subPack_fat=null;GLLib.s_pack_subPack_filename=null;GLLib.s_pack_subPack_curSubPack=gloft.casttoint(null);GLLib.s_pack_lastDataReadMimeType=gloft.casttoint(null);GLLib.s_pack_lastDataIsCompress=gloft.casttoboolean(null);GLLib.s_Pack_SkipBuffer=null;GLLib.MIME_type=null;GLLib.s_pack_BinaryCache=null;GLLib.s_pack_HashIndex=null;GLLib.s_pack_HashSize=null;GLLib.kPackSourceFileSystem=1;GLLib.kPackSourceRMS=2;GLLib.kPackSourceMemoryBuffer=3;GLLib.DLC_STATE_CHECK_TOC=0;GLLib.DLC_STATE_DOWNLOAD=1;GLLib.DLC_STATE_FINISHED=2;GLLib.DLC_STATE_NO_INTERNET=3;GLLib.DLC_STATE_NO_TOC=4;GLLib.DLC_STATE_NO_DLC=5;GLLib.s_dlc_state=gloft.casttoint(null);GLLib.s_lastAsset=null;GLLib.dlcTag="dlc";GLLib.s_dlc_pack_subpack_ids=null;GLLib.s_dlc_pack_offset_ids=null;GLLib.s_dlc_pack_resName_ids=null;GLLib.s_dlc_resName_ids=null;GLLib.s_dlc_pack_data_length_ids=null;GLLib.s_dlc_pack_count=null;GLLib.s_dlc_version_count=gloft.casttoint(null);GLLib.s_dlc_path=null;GLLib.s_isTocRead=gloft.casttoboolean(null);GLLib.s_dlc_packs=null;GLLib.s_dlc_pack_hashs=null;GLLib.s_dlc_pack_ids=null;GLLib.m_Buffer=null;GLLib.m_inSize=gloft.casttoint(null);GLLib.m_Range=gloft.casttolong(null);GLLib.m_Code=gloft.casttolong(null);GLLib.m_ExtraBytes=gloft.casttoint(null);GLLib.m_outStream=null;GLLib.inputIndex=gloft.casttoint(null);GLLib.m_lzmaInternalData=null;GLLib.kNumBitModelTotalBits=11;GLLib.kBitModelTotal=2048;GLLib.tkNumMoveBits=5;GLLib.LZMA_BASE_SIZE=1846;GLLib.LZMA_LIT_SIZE=768;GLLib.LZMA_RESULT_OK=0;GLLib.LZMA_RESULT_DATA_ERROR=1;GLLib.LZMA_RESULT_NOT_ENOUGH_MEM=2;GLLib.kNumStates=12;GLLib.kNumPosBitsMax=4;GLLib.kNumLenToPosStates=4;GLLib.kNumPosSlotBits=6;GLLib.kStartPosModelIndex=4;GLLib.kEndPosModelIndex=14;GLLib.kNumFullDistances=128;GLLib.kNumAlignBits=4;GLLib.kAlignTableSize=16;GLLib.IsMatch=0;GLLib.IsRep=192;GLLib.IsRepG0=204;GLLib.IsRepG1=216;GLLib.IsRepG2=228;GLLib.IsRep0Long=240;GLLib.PosSlot=432;GLLib.SpecPos=688;GLLib.Align=802;GLLib.LenCoder=818;GLLib.kNumPosStatesMax=16;GLLib.kLenNumLowBits=3;GLLib.kLenNumLowSymbols=8;GLLib.kLenNumMidBits=3;GLLib.kLenNumMidSymbols=8;GLLib.kLenNumHighBits=8;GLLib.kLenNumHighSymbols=256;GLLib.kMatchMinLen=2;GLLib.LenChoice=0;GLLib.LenChoice2=1;GLLib.LenLow=2;GLLib.LenMid=130;GLLib.LenHigh=258;GLLib.kNumLenProbs=514;GLLib.RepLenCoder=1332;GLLib.Literal=1846;GLLib.kNumMoveBits=5;GLLib.kNumTopBits=24;GLLib.kTopValue=16777216;GLLib.kLZMAHeaderSize=13;GLLib.HCENTER=1;GLLib.VCENTER=2;GLLib.LEFT=4;GLLib.RIGHT=8;GLLib.TOP=16;GLLib.BOTTOM=32;GLLib.SOLID=0;GLLib.DOTTED=1;GLLib.TRANS_NONE=0;GLLib.TRANS_ROT90=5;GLLib.TRANS_ROT180=3;GLLib.TRANS_ROT270=6;GLLib.TRANS_MIRROR=2;GLLib.TRANS_MIRROR_ROT90=7;GLLib.TRANS_MIRROR_ROT180=1;GLLib.TRANS_MIRROR_ROT270=4;GLLib.m_nextTimeVibrationAllowed=gloft.casttolong(null);GLLib.Stream_readOffset=gloft.casttoint(null);GLLib.text_nbString=gloft.casttoint(null);GLLib.text_encoding=null;GLLib.text_array=null;GLLib.text_arrayOffset=null;GLLib.text_stringCacheArray=null;GLLib.s_text_strPool_strings=null;GLLib.s_text_strPool_stringIds=null;GLLib.s_text_strPool_stringPoolPos=null;GLLib.s_text_strPool_pointer=gloft.casttoint(null);GLLib.text_multiple_array_map=null;GLLib.text_multiple_arrays=null;GLLib.text_multiple_nbStrings=null;GLLib.text_multiple_arrayOffsets=null;GLLib.text_multiple_stringCacheArrays=null;GLLib.StrEN="EN";GLLib.StrDE="DE";GLLib.StrFR="FR";GLLib.StrIT="IT";GLLib.StrES="ES";GLLib.StrBR="BR";GLLib.StrPT="PT";GLLib.StrJP="JP";GLLib.StrCN="CN";GLLib.StrKR="KR";GLLib.StrRU="RU";GLLib.StrTR="TR";GLLib.StrPL="PL";GLLib.StrCZ="CZ";GLLib.StrNL="NL";GLLib.StrTH="TH";GLLib.StrVI="VI";GLLib.StrAR="AR";GLLib.s_rs=null;GLLib.s_rms_buffer=null;GLLib.s_rms_vendor=null;GLLib.s_rms_midletName=null;GLLib.PROFILER_MAX_EVENTS=gloft.casttoint(null);GLLib.s_profiler_eventNames=null;GLLib.s_profiler_eventBegins=null;GLLib.s_profiler_eventEnds=null;GLLib.s_profiler_eventDepths=null;GLLib.s_profiler_eventStack=null;GLLib.s_profiler_eventCount=gloft.casttoint(null);GLLib.s_profiler_eventStackIndex=gloft.casttoint(null);GLLib.s_profiler_recording=gloft.casttoboolean(null);GLLib.s_profiler_emulator=gloft.casttoboolean(null);GLLib.s_tProf_isProfilerEnabled=gloft.casttoboolean(null);GLLib.s_tProf_maxSlots=gloft.casttoint(null);GLLib.s_tProf_profilerPool=null;GLLib.s_tProf_profilerNames=null;GLLib.s_tProf_activeSlots=gloft.casttoint(null);GLLib.s_tProf_yDisplay=gloft.casttoint(null);GLLib.s_tProf_lineHeight=gloft.casttoint(null);GLLib.s_tProf_liveTextColor=gloft.casttoint(null);GLLib.s_tProf_isScrollDown=gloft.casttoboolean(null);GLLib.s_tProf_updateScroll=gloft.casttoboolean(null);GLLib.s_tProf_scrollStartTime=gloft.casttolong(null);GLLib.s_tProf_scrollTimer=gloft.casttolong(null);GLLib.s_tProf_isIndicatorEnabled=gloft.casttoboolean(null);GLLib.s_tProf_isDefaultProfilingEnabled=gloft.casttoboolean(null);GLLib.s_tProf_keyHeldTimer=gloft.casttolong(null);GLLib.s_tProf_keyHeldTime=gloft.casttolong(null);GLLib.s_tProf_isDrawReport=gloft.casttoboolean(null);GLLib.TIME_PROF_NAME=0;GLLib.TIME_PROF_TOTAL_TIME=1;GLLib.TIME_PROF_COUNT=2;GLLib.TIME_PROF_CUR_FRAME_COUNT=3;GLLib.TIME_PROF_LAST_FRAME_COUNT=4;GLLib.TIME_PROF_START_TIME=5;GLLib.TIME_PROF_CUR_FRAME_TIME=6;GLLib.TIME_PROF_MIN_TIME=7;GLLib.TIME_PROF_MAX_TIME=8;GLLib.TIME_PROF_AVG_TIME=9;GLLib.TIME_PROF_LAST_TIME=10;GLLib.TIME_PROF_NUM_FRAME_COUNT=11;GLLib.TIME_PROF_MIN_EXEC_TIME=12;GLLib.TIME_PROF_MAX_EXEC_TIME=13;GLLib.TIME_PROF_FRAMEAVG_TIME=14;GLLib.TIME_PROF_TOTAL_ATTRIBUTES=15;GLLib.s_alphaRectCurrentSlot=gloft.casttoint(null);GLLib.s_alphaRectCurrentARGB=null;GLLib.s_alphaRectARGBData=null;GLLib.s_alphaRectImage=null;GLLib.pfx_usingScreenBuffer=gloft.casttoboolean(null);GLLib.pfx_useSpriteEffects=gloft.casttoboolean(null);GLLib.s_PFX_initializd=gloft.casttoboolean(null);GLLib.s_PFX_type=gloft.casttoint(null);GLLib.s_PFX_params=null;GLLib.s_PFX_hasAlpha=gloft.casttoboolean(null);GLLib.s_PFX_sizeX=gloft.casttoint(null);GLLib.s_PFX_sizeY=gloft.casttoint(null);GLLib.s_PFX_newSizeX=gloft.casttoint(null);GLLib.s_PFX_newSizeY=gloft.casttoint(null);GLLib.s_PFX_screenBuffer=null;GLLib.s_PFX_screenBufferG=null;GLLib.s_PFX_customBuffer=null;GLLib.s_PFX_enableScreenBuffer=gloft.casttoint(null);GLLib.s_PFX_enableScreenBufferThisFrame=gloft.casttoint(null);GLLib.s_PFX_screenIsBuffered=gloft.casttoboolean(null);GLLib.s_PFX_windowX=gloft.casttoint(null);GLLib.s_PFX_windowY=gloft.casttoint(null);GLLib.s_PFX_windowWidth=gloft.casttoint(null);GLLib.s_PFX_windowHeight=gloft.casttoint(null);GLLib.s_PFX_timer=gloft.casttoint(null);GLLib.s_pointerState=gloft.casttoint(null);GLLib.s_pointerX=gloft.casttoint(null);GLLib.s_pointerY=gloft.casttoint(null);GLLib.s_prevPointerX=gloft.casttoint(null);GLLib.s_prevPointerY=gloft.casttoint(null);GLLib.s_tmpPrevPointerX=gloft.casttoint(null);GLLib.s_tmpPrevPointerY=gloft.casttoint(null);GLLib.s_isPointerPressedSystem=gloft.casttoboolean(null);GLLib.s_isPointerReleasedSystem=gloft.casttoboolean(null);GLLib.s_isPointerDraggedSystem=gloft.casttoboolean(null);GLLib.POINTER_STATE_IDLE=0;GLLib.POINTER_STATE_PRESSED=1;GLLib.POINTER_STATE_RELEASED=2;GLLib.POINTER_STATE_DRAG=3;GLLib.POINTER_STATE_DOWN=4;GLLib.s_currentPointer=gloft.casttoint(null);GLLib.s_pointerX_multi=null;GLLib.s_pointerY_multi=null;GLLib.s_prevPointerX_multi=null;GLLib.s_prevPointerY_multi=null;GLLib.s_pointerState_multi=null;GLLib.s_tmpPrevPointerX_multi=null;GLLib.s_tmpPrevPointerY_multi=null;GLLib.s_isPointerPressedSystem_multi=null;GLLib.s_isPointerReleasedSystem_multi=null;GLLib.s_isPointerDraggedSystem_multi=null;GLLib.IAP_REQUEST_NONE=0;GLLib.IAP_REQUEST_WAITING=1;GLLib.IAP_REQUEST_SENT=2;GLLib.IAP_REQUEST_FAILED=3;GLLib.IAP_REQUEST_NEED_REGION=4;GLLib.IAP_REQUEST_NEED_CARRIER=5;GLLib.IAP_REQUEST_READY=6;GLLib.IAP_ITEM_PURCHASED=7;GLLib.IAP_REDEEM_REQUEST_FAILED=8;GLLib.IAP_WAITING_FOR_FEED=9;GLLib.IAP_FEED_READY=10;GLLib.IAP_FEED_UNAVAILABLE=11;GLLib.IAP_SILENT_READY=12;GLLib.IAP_ITEM_0=1;GLLib.IAP_ITEM_1=2;GLLib.IAP_ITEM_2=3;GLLib.IAP_ITEM_3=4;GLLib.IAP_ITEM_COIN="Coin";GLLib.IAP_ITEM_CASH="Cash";GLLib.HTTP_BILLING="http_2d";GLLib.SMS_BILLING="sms_2d";GLLib.CCARD_BILLING="ccard_2d";GLLib.IAP_ERROR_CONNECTION=-1;GLLib.IAP_ERROR_ITEM_NOT_AVAILABLE=-2;GLLib.IAP_MANUAL_SELECTION_DISABLED=-3;GLLib.IAP_SMS_TIMED_OUT=-4;GLLib.IAP_INVALID_REQUEST=-5;GLLib.IAP_ERROR_FEED_UNAVAILABLE=-6;GLLib.IAP_ERROR_NO_ITEMS=-7;GLLib.IAP_ERROR_FAILED_INIT=-8;GLLib.IAP_ERROR_SECURITY=-9;GLLib.IAP_ERROR_DEMO_STATE=-10;GLLib.s_configErrorOccured=gloft.casttoboolean(null);GLLib.BIDI_CHARTYPE=null;GLLib.BIDI_LMASK=63;GLLib.BIDI_OMASK=192;GLLib.BIDI_OISL=128;GLLib.BIDI_OISR=64;GLLib.BIDI_BNCHAR=14;GLLib.k_charTypeIndexFirst=gloft.casttoint(null);GLLib.k_charTypeIndexLast=gloft.casttoint(null);GLLib.k_charTypeIndexType=gloft.casttoint(null);GLLib.s_bidi_charType=null;GLLib.AR_SL=0;GLLib.AR_SR=1;GLLib.AR_SD=2;GLLib.AR_SU=3;GLLib.AR_SC=4;GLLib.AR_TR=5;GLLib.s_ar_shapeType=null;GLLib.SHAPE_FIRST=1569;GLLib.SHAPE_LAST=gloft.casttoint(null);GLLib.ModuleMarkerCallback_Start=function(g,h,f,e,d,c,a){};GLLib.ModuleMarkerCallback_End=function(f,g,e,d,c,a){};GLLib.SetupDefaultKey=function(){GLLib.Game_KeyClearKeyCode();GLLib.standardKeyTable.put(new java.lang.Integer(48),new java.lang.Integer(6));GLLib.standardKeyTable.put(new java.lang.Integer(49),new java.lang.Integer(7));GLLib.standardKeyTable.put(new java.lang.Integer(50),new java.lang.Integer(1));GLLib.standardKeyTable.put(new java.lang.Integer(51),new java.lang.Integer(9));GLLib.standardKeyTable.put(new java.lang.Integer(52),new java.lang.Integer(3));GLLib.standardKeyTable.put(new java.lang.Integer(53),new java.lang.Integer(5));GLLib.standardKeyTable.put(new java.lang.Integer(54),new java.lang.Integer(4));GLLib.standardKeyTable.put(new java.lang.Integer(55),new java.lang.Integer(13));GLLib.standardKeyTable.put(new java.lang.Integer(56),new java.lang.Integer(2));GLLib.standardKeyTable.put(new java.lang.Integer(57),new java.lang.Integer(15));GLLib.standardKeyTable.put(new java.lang.Integer(35),new java.lang.Integer(17));GLLib.standardKeyTable.put(new java.lang.Integer(42),new java.lang.Integer(16));if(true){GLLib.standardKeyTable.put(new java.lang.Integer(-6),new java.lang.Integer(18));GLLib.standardKeyTable.put(new java.lang.Integer(-7),new java.lang.Integer(19))}else{GLLib.standardKeyTable.put(new java.lang.Integer(-6),new java.lang.Integer(19));GLLib.standardKeyTable.put(new java.lang.Integer(-7),new java.lang.Integer(18))}GLLib.standardKeyTable.put(new java.lang.Integer(-8),new java.lang.Integer(24));if(false){GLLib.standardKeyTable.put(new java.lang.Integer(0),new java.lang.Integer(22));GLLib.standardKeyTable.put(new java.lang.Integer(0),new java.lang.Integer(23))}GLLib.gameActionKeyTable.put(new java.lang.Integer(-5),new java.lang.Integer(5));GLLib.gameActionKeyTable.put(new java.lang.Integer(-1),new java.lang.Integer(1));GLLib.gameActionKeyTable.put(new java.lang.Integer(-2),new java.lang.Integer(2));GLLib.gameActionKeyTable.put(new java.lang.Integer(-3),new java.lang.Integer(3));GLLib.gameActionKeyTable.put(new java.lang.Integer(-4),new java.lang.Integer(4))};GLLib.OpenBrowser=function(a){GLLib.s_bPlatformRequestPending=true;GLLib.s_urlPlatformRequest=a;if(true){new java.lang.Thread(new PlatformRequestWorker()).start()}else{if(!false){GLLib.doPlatformRequest()}}};GLLib.doPlatformRequest=function(){GLLib.s_bPlatformRequestPending=false;if(GLLib.s_urlPlatformRequest!=null){try{GLLib.s_application.platformRequest(GLLib.s_urlPlatformRequest)}catch(a){a.printStackTrace()}}if(false){try{java.lang.Thread.sleep(2000)}catch(a){a.printStackTrace()}}if(true){GLLib.Dbg("GLLib.quit");GLLib.s_game_state=-1;GLLib.s_application.notifyDestroyed()}};GLLib.Game_KeyClearKeyCode=function(){GLLib.gameActionKeyTable=new java.util.Hashtable();GLLib.standardKeyTable=new java.util.Hashtable()};GLLib.Game_KeySetKeyCode=function(a,f,d){var c=new java.lang.Integer(f);var e=null;if(a){e=GLLib.gameActionKeyTable}else{e=GLLib.standardKeyTable}if(e.get(c)!=null){e.remove(c)}e.put(c,new java.lang.Integer(d))};GLLib.ResetKey=function(){if(true){if(GLLib.s_keyState!=null&&GLLib.s_keyStateRT!=null){for(var a=0;a<GLLib.s_nbKey;++a){GLLib.s_keyState[a]=0;GLLib.s_keyStateRT[a]=0}}}else{GLLib.m_keys_pressed=0;GLLib.m_keys_released=0;GLLib.m_keys_state=0;GLLib.m_current_keys_state=0;GLLib.m_current_keys_pressed=0;GLLib.m_current_keys_released=0}};GLLib.ResetAKey=function(a){if(true){GLLib.s_keyState[a]=0;GLLib.s_keyStateRT[a]=0}else{if((GLLib.m_keys_state&1<<a)!=0){GLLib.m_keys_pressed=0;GLLib.m_keys_released=0;GLLib.m_keys_state=0;GLLib.m_current_keys_state=0;GLLib.m_current_keys_pressed=0;GLLib.m_current_keys_released=0}}};GLLib.IsAnyKeyDown=function(){if(true){var a=GLLib.s_nbKey;while(--a>=0){if(GLLib.s_keyState[a]>0){return a}}return -1}var b=GLLib.s_nbKey;while(--b>=0){if((GLLib.m_keys_state&1<<b)!=0){return b}}return -1};GLLib.IsKeyDown=function(a){if(true){return GLLib.s_keyState[a]>0}return(GLLib.m_keys_state&1<<a)!=0};GLLib.IsKeyUp=function(a){if(true){return GLLib.s_keyState[a]<=0}return(GLLib.m_keys_state&1<<a)==0};GLLib.WasAnyKeyPressed=function(){if(true){var a=GLLib.s_nbKey;while(--a>=0){if(GLLib.s_keyState[a]==1){return a}}return -1}if(GLLib.m_keys_pressed==0){return -1}var b=GLLib.s_nbKey;while(--b>=0){if((GLLib.m_keys_pressed&1<<b)!=0){return b}}return -1};GLLib.WasAnyKeyReleased=function(){if(true){var a=GLLib.s_nbKey;while(--a>=0){if(GLLib.s_keyState[a]<0){return a}}return -1}if(GLLib.m_keys_released==0){return -1}var b=GLLib.s_nbKey;while(--b>=0){if((GLLib.m_keys_released&1<<b)!=0){return b}}return -1};GLLib.WasKeyPressed=function(a){if(true){return GLLib.s_keyState[a]==1}return(GLLib.m_keys_pressed&1<<a)!=0};GLLib.WasKeyReleased=function(a){if(true){return GLLib.s_keyState[a]<0}return(GLLib.m_keys_released&1<<a)!=0};GLLib.Dbg=function(a){java.lang.System.out.println(a);if(false&&false){GLLib.Dbg_Console_Add(a)}if(false&&false){GLLib.Filelog_Add(a)}};GLLib.Filelog_Add=function(a){if(false){if(GLLib.m_filelogBuffer==null){GLLib.m_filelogBuffer=gloft.ArrayCreation([300],null)}if(GLLib.m_filelogPointer==GLLib.m_filelogBuffer.length){GLLib.Filelog_Flush()}GLLib.m_filelogBuffer[GLLib.m_filelogPointer++]=a.toString()}};GLLib.Filelog_Flush=function(){if(false){try{if(java.lang.System.getProperty("microedition.io.file.FileConnection.version")!=null){var e=java.lang.System.getProperty("fileconn.dir.photos");if(!(javax.microedition.io.Connector.open(e)).exists()){GLLib.Dbg_Console_Add("Filelog. Write to file: couldn't open photo dir")}else{var g=new java.util.Date(java.lang.System.currentTimeMillis());var a=java.util.Calendar.getInstance();a.setTime(g);var d=javax.microedition.io.Connector.open(e+"/log_"+(""+a.get(1)+"."+a.get(2)+"."+a.get(5)+"_"+a.get(11)+"."+a.get(12)+"."+a.get(13))+".txt",3);if(!d.exists()){d.create()}var f=d.openDataOutputStream();for(var c=0;c<GLLib.m_filelogPointer;++c){f.write((GLLib.m_filelogBuffer[c]+"\n").getBytes())}f.close();(d).close()}}}catch(b){if(false){GLLib.Dbg_Console_Add("Filelog. Write to file failed");GLLib.Dbg_Console_Add(b.toString());GLLib.Dbg_Console_Show()}}GLLib.m_filelogPointer=0}};GLLib.Dbg_Console_Init=function(){if(false){java.lang.System.out.println("WARNING: SCREEN CONSOLE SUPPORTED!");GLLib.s_dbg_console_logs=gloft.ArrayCreation([GLLib.s_dbg_console_logSlotsSize],null);if(GLLib.s_dbg_console_recordLogCurrentTime){GLLib.s_dbg_console_logs_time=gloft.ArrayCreation([GLLib.s_dbg_console_logSlotsSize],gloft.casttolong(null))}GLLib.s_dbg_console_firstVisibleLogSlot=0;GLLib.s_dbg_console_nextAvailableLogSlot=0;if(true){(GLLib.s_dbg_console_touchActionAreas=gloft.ArrayCreation([4,4],gloft.casttoint(null)))[0]=[0,0,50,50];GLLib.s_dbg_console_touchActionAreas[1]=[640-50,0,50,50];GLLib.s_dbg_console_touchActionAreas[2]=[640-50,360-50,50,50];GLLib.s_dbg_console_touchActionAreas[3]=[0,360-50,50,50]}}};GLLib.Dbg_Console_Add=function(a){if(false){if(GLLib.s_dbg_console_logs==null){GLLib.Dbg_Console_Init()}if(GLLib.s_dbg_console_nextAvailableLogSlot==GLLib.s_dbg_console_logSlotsSize){GLLib.Dbg_Console_Init()}if(GLLib.s_dbg_console_recordLogCurrentTime){GLLib.s_dbg_console_logs_time[GLLib.s_dbg_console_nextAvailableLogSlot]=java.lang.System.currentTimeMillis()}GLLib.s_dbg_console_logs[GLLib.s_dbg_console_nextAvailableLogSlot++]=a.toString();if(GLLib.s_dbg_console_forceFocusNextAvailableSlot&&GLLib.s_dbg_console_nextAvailableLogSlot-GLLib.s_dbg_console_firstVisibleLogSlot>GLLib.s_dbg_console_nbVisibleSlots){++GLLib.s_dbg_console_firstVisibleLogSlot}}};GLLib.Dbg_Console_Reset=function(){if(false){GLLib.Dbg_Console_Init()}};GLLib.Dbg_Console_UpdateKey=function(){if(false){if(true&&GLLib.s_dbg_console_touchActionAreas==null){GLLib.Dbg_Console_Init()}var a=GLLib.WasAnyKeyPressed();if(true&&GLLib.Pointer_IsPressed(0)&&GLLib.Pointer_IsInRect_dup_aI(GLLib.s_dbg_console_touchActionAreas[0])){a=17}if(a==17){GLLib.s_dbg_console_keyHeldTime=java.lang.System.currentTimeMillis();if(!GLLib.s_dbg_console_isScreenConsoleEnabled){GLLib.s_dbg_console_keyHeldTimer=0}}var b=GLLib.IsAnyKeyDown();if(true&&GLLib.Pointer_IsHeldDown(0)&&GLLib.Pointer_IsInRect_dup_aI(GLLib.s_dbg_console_touchActionAreas[0])){b=17}if(b==17){var c=java.lang.System.currentTimeMillis();GLLib.s_dbg_console_keyHeldTimer+=c-GLLib.s_dbg_console_keyHeldTime;GLLib.s_dbg_console_keyHeldTime=c;if(GLLib.s_dbg_console_keyHeldTimer>2000){GLLib.s_dbg_console_isScreenConsoleEnabled=!GLLib.s_dbg_console_isScreenConsoleEnabled;GLLib.s_dbg_console_keyHeldTimer=0}}else{GLLib.s_dbg_console_keyHeldTimer=0}GLLib.s_dbg_console_currentAction=-1;if(b==1||b==8||(true&&(GLLib.Pointer_IsPressed(0)||GLLib.Pointer_IsHeldDown(0))&&GLLib.Pointer_IsInRect_dup_aI(GLLib.s_dbg_console_touchActionAreas[1]))){GLLib.s_dbg_console_currentAction=1}else{if(b==2||b==14||(true&&(GLLib.Pointer_IsPressed(0)||GLLib.Pointer_IsHeldDown(0))&&GLLib.Pointer_IsInRect_dup_aI(GLLib.s_dbg_console_touchActionAreas[2]))){GLLib.s_dbg_console_currentAction=2}else{if(b==3||b==10||(true&&GLLib.Pointer_IsPressed(0)&&GLLib.Pointer_IsInRect_dup_aI(GLLib.s_dbg_console_touchActionAreas[3]))){GLLib.s_dbg_console_currentAction=3}}}if(GLLib.s_dbg_console_isScreenConsoleEnabled){if(GLLib.s_dbg_console_currentAction==1){if(GLLib.s_dbg_console_firstVisibleLogSlot>0){--GLLib.s_dbg_console_firstVisibleLogSlot}}else{if(GLLib.s_dbg_console_currentAction==2){if(GLLib.s_dbg_console_firstVisibleLogSlot+GLLib.s_dbg_console_nbVisibleSlots<GLLib.s_dbg_console_nextAvailableLogSlot){++GLLib.s_dbg_console_firstVisibleLogSlot}}else{if(GLLib.s_dbg_console_currentAction==3){GLLib.Dbg_Console_Reset()}}}}}};GLLib.Dbg_Console_OutputToScreen=function(){if(false){if(!GLLib.s_dbg_console_isScreenConsoleEnabled){if(GLLib.g!=null){var u="WARNING: SCREEN CONSOLE SUPPORTED!";GLLib.g.setColor(GLLib.s_dbg_console_fontBackgroundColor);GLLib.g.fillRect(0,0,GLLib.g.getFont().stringWidth(u),GLLib.g.getFont().getHeight());GLLib.g.setColor(GLLib.s_dbg_console_fontColor);GLLib.DrawString(u,0,0,20)}return}var c=GLLib.s_dbg_console_firstVisibleLogSlot;var a=c+GLLib.s_dbg_console_nbVisibleSlots;if(GLLib.s_dbg_console_nextAvailableLogSlot<c+GLLib.s_dbg_console_nbVisibleSlots){a=GLLib.s_dbg_console_nextAvailableLogSlot}if(GLLib.s_dbg_console_nextAvailableLogSlot==0){GLLib.Dbg_Console_Add("All debug log slots are emtpy!")}if(GLLib.g!=null){var b=0;for(var l=c;l<a;++l){var t="";var q="["+l+"]='"+GLLib.s_dbg_console_logs[l]+"'";if(GLLib.s_dbg_console_recordLogCurrentTime&&l>0){q=q+",dt="+(GLLib.s_dbg_console_logs_time[l]-GLLib.s_dbg_console_logs_time[l-1])+"ms"}var r=q.toCharArray();var p=0;for(var f=0;f<r.length;++f){var h=GLLib.g.getFont().charWidth(r[f]);if(p+h>640){GLLib.g.setColor(GLLib.s_dbg_console_fontBackgroundColor);GLLib.g.fillRect(0,b,p,GLLib.g.getFont().getHeight());GLLib.g.setColor(GLLib.s_dbg_console_fontColor);GLLib.DrawString(t,0,b,20);p=0;t="";b+=GLLib.g.getFont().getHeight()}t+=r[f];p+=h}GLLib.g.setColor(GLLib.s_dbg_console_fontBackgroundColor);GLLib.g.fillRect(0,b,p,GLLib.g.getFont().getHeight());GLLib.g.setColor(GLLib.s_dbg_console_fontColor);GLLib.DrawString(t,0,b,20);b+=GLLib.g.getFont().getHeight()}if(true){for(var d=0;d<GLLib.s_dbg_console_touchActionAreas.length;++d){var o=GLLib.s_dbg_console_touchActionAreas[d][0];var m=GLLib.s_dbg_console_touchActionAreas[d][1];var g=GLLib.s_dbg_console_touchActionAreas[d][2];var e=GLLib.s_dbg_console_touchActionAreas[d][3];GLLib.g.setColor(GLLib.s_dbg_console_fontColor);GLLib.DrawRect(GLLib.g,o,m,g,e)}}}}};GLLib.Dbg_Console_Show=function(){GLLib.s_dbg_console_isScreenConsoleEnabled=true};GLLib.Dbg_Console_Hide=function(){GLLib.s_dbg_console_isScreenConsoleEnabled=false};GLLib.Dbg_Console_Toggle=function(){GLLib.s_dbg_console_isScreenConsoleEnabled=!GLLib.s_dbg_console_isScreenConsoleEnabled};GLLib.Dbg_Console_IsOnScreen=function(){return GLLib.s_dbg_console_isScreenConsoleEnabled};GLLib.Assert=function(a,c){if(!a){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");GLLib.Dbg("ERROR . "+c);GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");if(false){GLLib.Dbg("GLLib.quit");GLLib.s_game_state=-1}}};GLLib.Warning=function(a){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");GLLib.Dbg("WARNING . "+a);GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")};GLLib.Print=function(a){java.lang.System.out.print(a)};GLLib.Math_Init=function(b,c,a){if(b==null){GLLib.Assert(false,"Math_Init.packName is null")}GLLib.Pack_Open(b);if(c>=0){GLLib.s_math_cosTable=GLLib.Pack_ReadArray(c)}else{GLLib.s_math_cosTable=null}if(a>=0){GLLib.s_math_sqrtTable=GLLib.Pack_ReadArray(a)}else{GLLib.s_math_sqrtTable=null}GLLib.Pack_Close()};GLLib.Math_Quit=function(){GLLib.s_math_cosTable=null;GLLib.s_math_sqrtTable=null;GLLib.s_math_random=null;GLLib.s_math_aTanTable=null};GLLib.Math_FixedPointAdjust=function(a){if(8>8){return a<<8-8}if(8<8){return a>>8-8}return a};GLLib.Math_Norm=function(f,e,c){var b=f*f+e*e;var a=1;for(var d=0;d<c;++d){a=a+gloft.casttoint(b/a)>>1}return a};GLLib.Math_Rand=function(c,a){if(GLLib.s_math_random==null){GLLib.Assert(false,"Math_Rand.GLLib mut be initialised prior to using this function")}if(c>a){GLLib.Assert(false,"Math_Rand.a must be <= b")}if(a!=c){var b=GLLib.s_math_random.nextInt();if(b<0){b*=-1}return c+b%(a-c)}return a};GLLib.Math_Cos=function(a){if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Cos.s_math_cosTable is null, call Math_Init first")}if(a<0){a*=-1}a&=GLLib.Math_Angle360-1;if(a<=GLLib.Math_Angle90){return GLLib.s_math_cosTable[a]}if(a<GLLib.Math_Angle180){a=GLLib.Math_Angle180-a;return -GLLib.s_math_cosTable[a]}if(a<=GLLib.Math_Angle270){a-=GLLib.Math_Angle180;return -GLLib.s_math_cosTable[a]}a=GLLib.Math_Angle360-a;return GLLib.s_math_cosTable[a]};GLLib.Math_Tan=function(b){if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Tan.s_math_cosTable is null, call Math_Init first")}var a=GLLib.Math_Cos(b);if(a==0){return java.lang.Integer.MAX_VALUE}if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}return gloft.casttoint((GLLib.Math_Cos(GLLib.Math_Angle90-b)<<8)/a)};GLLib.Math_AtanSlow_dup_III=function(d,c,b){while(d+1<c){var a=d+c>>1;if(b>GLLib.Math_Tan(a)){d=a}else{c=a}}if(b>=GLLib.Math_Tan(c)){return c}return d};GLLib.Math_AtanSlow_dup_II=function(b,a){if(b>0){if(a>0){return GLLib.Math_AtanSlow_dup_III(0,GLLib.Math_Angle90,gloft.casttoint(a*GLLib.s_math_F_1/b))}if(a==0){return 0}return GLLib.Math_AtanSlow_dup_III(GLLib.Math_Angle270,GLLib.Math_Angle360,gloft.casttoint(a*GLLib.s_math_F_1/b))}else{if(b==0){if(a>0){return GLLib.Math_Angle90}if(a==0){return 0}return GLLib.Math_Angle270}else{if(a>0){return GLLib.Math_AtanSlow_dup_III(GLLib.Math_Angle90,GLLib.Math_Angle180,gloft.casttoint(a*GLLib.s_math_F_1/b))}if(a==0){return GLLib.Math_Angle180}return GLLib.Math_AtanSlow_dup_III(GLLib.Math_Angle180,GLLib.Math_Angle270,gloft.casttoint(a*GLLib.s_math_F_1/b))}}};GLLib.Math_Atan=function(c,b){if(!true){return GLLib.Math_AtanSlow_dup_II(c,b)}if(GLLib.s_math_aTanTable==null){GLLib.s_math_aTanTable=gloft.ArrayCreation([GLLib.s_math_F_1+1],gloft.casttoint(null));for(var a=0;a<GLLib.s_math_F_1+1;++a){GLLib.s_math_aTanTable[a]=GLLib.Math_AtanSlow_dup_II(GLLib.s_math_F_1,a)}}if(c==0){if(b>0){return GLLib.Math_Angle90}if(b==0){return 0}return GLLib.Math_Angle270}else{if(c>0){if(b>=0){if(c>=b){return GLLib.s_math_aTanTable[gloft.casttoint(b*GLLib.s_math_F_1/c)]}return GLLib.Math_Angle90-GLLib.s_math_aTanTable[gloft.casttoint(c*GLLib.s_math_F_1/b)]}else{b*=-1;if(c>=b){return GLLib.Math_Angle360-GLLib.s_math_aTanTable[gloft.casttoint(b*GLLib.s_math_F_1/c)]}return GLLib.Math_Angle270+GLLib.s_math_aTanTable[gloft.casttoint(c*GLLib.s_math_F_1/b)]}}else{c*=-1;if(b>=0){if(c>=b){return GLLib.Math_Angle180-GLLib.s_math_aTanTable[gloft.casttoint(b*GLLib.s_math_F_1/c)]}return GLLib.Math_Angle90+GLLib.s_math_aTanTable[gloft.casttoint(c*GLLib.s_math_F_1/b)]}else{b*=-1;if(c>=b){return GLLib.Math_Angle180+GLLib.s_math_aTanTable[gloft.casttoint(b*GLLib.s_math_F_1/c)]}return GLLib.Math_Angle270-GLLib.s_math_aTanTable[gloft.casttoint(c*GLLib.s_math_F_1/b)]}}}};GLLib.Math_Sqrt_dup_I=function(a){GLLib.Assert(GLLib.s_math_sqrtTable!=null,"!!ERROR!! Math_sqrt.s_math_sqrtTable is null, call Math_Init first");if(a>=65536){if(a>=16777216){if(a>=268435456){if(a>=1073741824){return GLLib.s_math_sqrtTable[a>>24]<<8}return GLLib.s_math_sqrtTable[a>>22]<<7}else{if(a>=67108864){return GLLib.s_math_sqrtTable[a>>20]<<6}return GLLib.s_math_sqrtTable[a>>18]<<5}}else{if(a>=1048576){if(a>=4194304){return GLLib.s_math_sqrtTable[a>>16]<<4}return GLLib.s_math_sqrtTable[a>>14]<<3}else{if(a>=262144){return GLLib.s_math_sqrtTable[a>>12]<<2}return GLLib.s_math_sqrtTable[a>>10]<<1}}}else{if(a>=256){if(a>=4096){if(a>=16384){return GLLib.s_math_sqrtTable[a>>8]}return GLLib.s_math_sqrtTable[a>>6]>>1}else{if(a>=1024){return GLLib.s_math_sqrtTable[a>>4]>>2}return GLLib.s_math_sqrtTable[a>>2]>>3}}else{if(a>=0){return GLLib.s_math_sqrtTable[a]>>4}return 0}}};GLLib.Math_Sqrt_dup_J=function(e){var d=0;var c=32768;var b=15;do{var a=(d<<1)+c<<gloft.casttoint((b--));if(e>=a){d+=c;e-=a}}while((c>>=1)>0);return gloft.casttoint(d)};GLLib.Math_Sqrt_FixedPoint=function(f,e){var d=f;var c=1073741824>>16-8;var b=0;while(c>=256&&e-->0){var a=b+c;if(d>=a){d-=a;b=a+c}d<<=1;c>>=1}return b>>8};GLLib.Math_RectIntersect_dup_IIIIIIII=function(h,e,d,c,b,a,g,f){if(h>d){GLLib.Assert(false,"Math_RectIntersect. Ax0 is bigger than Ax1")}if(e>c){GLLib.Assert(false,"Math_RectIntersect. Ay0 is bigger than Ay1")}if(b>g){GLLib.Assert(false,"Math_RectIntersect. Bx0 is bigger than Bx1")}if(a>f){GLLib.Assert(false,"Math_RectIntersect. By0 is bigger than By1")}return d>=b&&h<=g&&c>=a&&e<=f};GLLib.Math_RectIntersect_dup_aIaI=function(b,a){if(b[0]>b[2]){GLLib.Assert(false,"Math_RectIntersect. rectA[0] is bigger than rectA[2]")}if(b[1]>b[3]){GLLib.Assert(false,"Math_RectIntersect. rectA[1] is bigger than rectA[3]")}if(a[0]>a[2]){GLLib.Assert(false,"Math_RectIntersect. rectB[0] is bigger than rectB[2]")}if(a[1]>a[3]){GLLib.Assert(false,"Math_RectIntersect. rectB[1] is bigger than rectB[3]")}return b[2]>=a[0]&&b[0]<=a[2]&&b[3]>=a[1]&&b[1]<=a[3]};GLLib.Math_RectIntersect_dup_aIIIII=function(e,d,c,b,a){if(e[0]>e[2]){GLLib.Assert(false,"Math_RectIntersect. rectA[0] is bigger than rectA[2]")}if(e[1]>e[3]){GLLib.Assert(false,"Math_RectIntersect. rectA[1] is bigger than rectA[3]")}if(d>b){GLLib.Assert(false,"Math_RectIntersect. Bx0 is bigger than Bx1")}if(c>a){GLLib.Assert(false,"Math_RectIntersect. By0 is bigger than By1")}return e[2]>=d&&e[0]<=b&&e[3]>=c&&e[1]<=a};GLLib.Math_JoinRects=function(e,d,c,b,a){if(e[0]>d){e[0]=d}if(e[1]>c){e[1]=c}if(e[2]<b){e[2]=b}if(e[3]<a){e[3]=a}};GLLib.Math_SegmentIntersect=function(t,k,i,h,f,d,c,b){var a=i-t;var s=f-c;var r=gloft.casttoint(null);var q=gloft.casttoint(null);if(a<0){r=i;q=t}else{q=i;r=t}if(s>0){if(q<c||f<r){return 0}}else{if(q<f||c<r){return 0}}var p=h-k;var o=d-b;var m=gloft.casttoint(null);var l=gloft.casttoint(null);if(p<0){m=h;l=k}else{l=h;m=k}if(o>0){if(l<b||d<m){return 0}}else{if(l<d||b<m){return 0}}var j=t-f;var g=k-d;var e=o*j-s*g;var x=p*s-a*o;if(x>0){if(e<0||e>x){return 0}}else{if(e>0||e<x){return 0}}var w=a*g-p*j;if(x>0){if(w<0||w>x){return 0}}else{if(w>0||w<x){return 0}}if(x==0){return -1}var v=e*a;GLLib.s_Math_intersectX=gloft.casttoint((t+gloft.casttoint((v+(((v^x)>=0)?(x>>1):(-x>>1)))/x)));var u=e*p;GLLib.s_Math_intersectY=gloft.casttoint((k+gloft.casttoint((u+(((u^x)>=0)?(x>>1):(-x>>1)))/x)));return 1};GLLib.Math_DistPointLine=function(u,l,j,h,f,d){var t=GLLib.Math_Atan(j-u,h-l);var c=f-u;var b=d-l;var a=c;var s=b;var r=a;var w=GLLib.Math_Sqrt_dup_I(r*r+s*s);var x=java.lang.Math.abs(t-GLLib.Math_Atan(c,b));var q=w;var p=x;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var o=q*GLLib.Math_Cos(GLLib.Math_Angle90-p);var m=w*GLLib.Math_Cos(x);var k=(u<<8)+GLLib.Math_FixedPoint_Multiply(m,GLLib.Math_Cos(t));if(k>2147483647){GLLib.Assert(false,"Math_FixedPoint_Add(): Multiplication Integer Overflow")}GLLib.s_Math_distPointLineX=gloft.casttoint(k);var i=l<<8;var g=m;var e=t;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var v=i+GLLib.Math_FixedPoint_Multiply(g,GLLib.Math_Cos(GLLib.Math_Angle90-e));if(v>2147483647){GLLib.Assert(false,"Math_FixedPoint_Add(): Multiplication Integer Overflow")}GLLib.s_Math_distPointLineY=gloft.casttoint(v);return o};GLLib.Math_QuickSort=function(g,e,f){var d=e;var c=f;var b=g[e];while(e<f){while(g[f]>=b&&e<f){--f}if(e!=f){g[e]=g[f];++e}while(g[e]<=b&&e<f){++e}if(e!=f){g[f]=g[e];--f}}g[e]=b;var a=e;e=d;f=c;if(e<a){GLLib.Math_QuickSort(g,e,a-1)}if(f>a){GLLib.Math_QuickSort(g,a+1,f)}};GLLib.Math_QuickSortIndices_dup_aIII=function(c,a,d){GLLib.Math_quickSortIndices_nbItemPerValue=a;GLLib.Math_quickSortIndices_itemNb=d;GLLib.Math_quickSortIndices_data=c;var e=gloft.casttoint(GLLib.Math_quickSortIndices_data.length/GLLib.Math_quickSortIndices_nbItemPerValue);if(GLLib.Math_quickSortIndices_result!=null&&GLLib.Math_quickSortIndices_result.length!=e){GLLib.Math_quickSortIndices_result=null;if(true){java.lang.System.gc()}}if(GLLib.Math_quickSortIndices_result==null){GLLib.Math_quickSortIndices_result=gloft.ArrayCreation([e],gloft.casttoint(null))}for(var b=0;b<e;++b){GLLib.Math_quickSortIndices_result[b]=b}GLLib.Math_QuickSortIndices_dup_II(0,e-1);return GLLib.Math_quickSortIndices_result};GLLib.Math_QuickSortIndices_dup_II=function(f,g){var e=f;var d=g;var c=GLLib.Math_quickSortIndices_result[f];var b=GLLib.Math_quickSortIndices_data[c*GLLib.Math_quickSortIndices_nbItemPerValue+GLLib.Math_quickSortIndices_itemNb];while(f<g){while(GLLib.Math_quickSortIndices_data[GLLib.Math_quickSortIndices_result[g]*GLLib.Math_quickSortIndices_nbItemPerValue+GLLib.Math_quickSortIndices_itemNb]>=b&&f<g){--g}if(f!=g){GLLib.Math_quickSortIndices_result[f]=GLLib.Math_quickSortIndices_result[g];++f}while(GLLib.Math_quickSortIndices_data[GLLib.Math_quickSortIndices_result[f]*GLLib.Math_quickSortIndices_nbItemPerValue+GLLib.Math_quickSortIndices_itemNb]<=b&&f<g){++f}if(f!=g){GLLib.Math_quickSortIndices_result[g]=GLLib.Math_quickSortIndices_result[f];--g}}GLLib.Math_quickSortIndices_result[f]=c;var a=f;f=e;g=d;if(f<a){GLLib.Math_QuickSortIndices_dup_II(f,a-1)}if(g>a){GLLib.Math_QuickSortIndices_dup_II(a+1,g)}};GLLib.Math_Bezier2D=function(a,i,h,g,f,e,d){var c=d*d;var b=GLLib.s_math_F_1-d;var k=b*b;var j=b*d;GLLib.s_math_bezierX=gloft.casttoint((a*k+2*h*j+f*c)/(1<<8*2));GLLib.s_math_bezierY=gloft.casttoint((i*k+2*g*j+e*c)/(1<<8*2))};GLLib.Math_Bezier3D=function(a,i,h,g,f,e,d,c,b,o){var m=o*o;var l=GLLib.s_math_F_1-o;var k=l*l;var j=l*o;GLLib.s_math_bezierX=gloft.casttoint((a*k+2*g*j+d*m)/(1<<8*2));GLLib.s_math_bezierY=gloft.casttoint((i*k+2*f*j+c*m)/(1<<8*2));GLLib.s_math_bezierZ=gloft.casttoint((h*k+2*e*j+b*m)/(1<<8*2))};GLLib.Math_FixedPoint_Multiply=function(c,b){var a=c*b+(GLLib.s_math_F_1>>1)>>8;if(a>2147483647){GLLib.Assert(false,"Math_FixedPoint_Multiply(): Multiplication Integer Overflow")}return gloft.casttoint(a)};GLLib.Math_FixedPoint_Divide=function(b,a){if(a==0){GLLib.Assert(false,"Math_FixedPoint_Divide(): Division by Zero")}return gloft.casttoint((gloft.casttoint((b<<8<<1)/a)+1))>>1};GLLib.Math_FixedPoint_Sqrt_dup_I=function(f){if(f==0||f==GLLib.s_math_F_1){return f}var e=((8&1)!=0)?1:0;var d=f;var c=1<<30-e;var b=0;while(c>=256){var a=b+c;if(d>=a){d-=a;b=a+c}d<<=1;c>>=1}return gloft.casttoint((b>>16-(8>>1)-e))};GLLib.Math_FixedPoint_Sqrt_dup_J=function(f){if(f==0||f==GLLib.s_math_F_1){return gloft.casttoint(f)}if(f<2147483647){return GLLib.Math_FixedPoint_Sqrt_dup_I(gloft.casttoint(f))}var e=30-8;var d=1073741824;var c=0;var b=f;do{var a=c+c+d<<e;if(b>=a){c+=d;b-=a}d>>=1}while(e-->=0);return c};GLLib.Math_FixedPoint_NormPow=function(c,b){var a=c*c+b*b+GLLib.s_math_F_05>>8;if(a>2147483647){GLLib.Assert(false,"Math_FixedPoint_NormPow(): Multiplication Integer Overflow")}return gloft.casttoint(a)};GLLib.Math_FixedPoint_Norm=function(b,a){return GLLib.Math_FixedPoint_Sqrt_dup_J(b*b+a*a+GLLib.s_math_F_05>>8)};GLLib.Math_FixedPoint_PointLineDistance=function(c,k,j,i,h,g){var f=c-j;var e=k-i;var b=gloft.casttoint(null);var l=gloft.casttoint(null);if(f==0){b=c;l=g}else{if(e==0){b=h;l=k}else{var a=GLLib.Math_FixedPoint_Divide(e,f);var d=-GLLib.Math_FixedPoint_Multiply(a,c)+k;var m=-GLLib.Math_FixedPoint_Divide(f,e);b=GLLib.Math_FixedPoint_Divide(d-(-GLLib.Math_FixedPoint_Multiply(m,h)+g),m-a);l=GLLib.Math_FixedPoint_Multiply(a,b)+d}}GLLib.s_Math_distPointLineX=b;GLLib.s_Math_distPointLineY=l;return GLLib.Math_FixedPoint_Norm(b-h,l-g)};GLLib.Math_FixedPoint_LineCircleIntersect=function(w,k,j,h,f,d,c){var b=w-f;var a=k-d;var u=j-f;var s=h-d;var r=u-b;var q=s-a;var D=gloft.casttoint(null);var m=gloft.casttoint(null);var t=gloft.casttoint(null);var l=gloft.casttoint(null);if(q==0){if(s<-c||s>c){return 0}var v=GLLib.Math_FixedPoint_Multiply(c,c);var p=s;D=GLLib.Math_FixedPoint_Sqrt_dup_I(v-GLLib.Math_FixedPoint_Multiply(p,p));m=-D;t=s;l=s}else{if(r==0){if(u<-c||u>c){return 0}D=u;m=u;var o=GLLib.Math_FixedPoint_Multiply(c,c);var i=u;t=GLLib.Math_FixedPoint_Sqrt_dup_I(o-GLLib.Math_FixedPoint_Multiply(i,i));l=-t}else{var g=b*s-u*a>>8;var e=r*r+q*q>>8;var C=GLLib.Math_FixedPoint_Multiply(c,c)*e-g*g>>8;if(C<0||e==0){return 0}if(C==0){D=(m=gloft.casttoint((gloft.casttoint(g*q/e))));t=(l=gloft.casttoint((gloft.casttoint(g*r/e))))}else{var B=GLLib.Math_FixedPoint_Sqrt_dup_J(C);var A=g*q;var z=((q<0)?-1:1)*r*B;D=gloft.casttoint((gloft.casttoint((A+z)/e)));m=gloft.casttoint((gloft.casttoint((A-z)/e)));var y=-g*r;var x=java.lang.Math.abs(q)*B;t=gloft.casttoint((gloft.casttoint((y+x)/e)));l=gloft.casttoint((gloft.casttoint((y-x)/e)))}}}GLLib.s_Math_intersectPoints[0][0]=D+f;GLLib.s_Math_intersectPoints[0][1]=t+d;GLLib.s_Math_intersectPoints[1][0]=m+f;GLLib.s_Math_intersectPoints[1][1]=l+d;return(D==m&&t==l)?2:4};GLLib.Math_FixedPoint_LineRectangleIntersect=function(c,k,j,i,h,g,f,e){var d=h+f;var p=g+e;var b=gloft.casttoint(null);var o=gloft.casttoint(null);var a=gloft.casttoint(null);var m=gloft.casttoint(null);if(c-j==0){if(j<h||j>d){return 0}b=j;o=g;a=j;m=p}else{var q=GLLib.Math_FixedPoint_Divide(k-i,c-j);if(q==0){if(i<g||i>p){return 0}b=h;o=i;a=d;m=i}else{var l=-GLLib.Math_FixedPoint_Multiply(q,j)+i;b=h;o=GLLib.Math_FixedPoint_Multiply(q,b)+l;if(o<g||o>p){o=((o<g)?g:p);b=GLLib.Math_FixedPoint_Divide(l-o,-q);if(b<h||b>d){return 0}}a=d;m=GLLib.Math_FixedPoint_Multiply(q,a)+l;if(m<g||m>p){m=((m<g)?g:p);a=GLLib.Math_FixedPoint_Divide(l-m,-q);if(a<h||a>d){return 0}}}}GLLib.s_Math_intersectPoints[0][0]=b;GLLib.s_Math_intersectPoints[0][1]=o;GLLib.s_Math_intersectPoints[1][0]=a;GLLib.s_Math_intersectPoints[1][1]=m;return(b==a&&o==m)?2:4};GLLib.ConvertFixedPointToString=function(e,c){if(c==0){return""+(e>>8)}var d=(e<0)?"-":"";e=((e<0)?(-e):e);for(var b=-1;b<c;++b){var a=e>>8;d+=a;if(b==-1){d+="."}e-=a*GLLib.s_math_F_1;e*=10}return d};GLLib.Pack_Open_INI=function(a){if(a==null){GLLib.Assert(false,"Pack_Open.filename is null")}if(false&&!a.startsWith("/")){GLLib.Dbg("Filename does not start with /. Please use Pack_OpenFromRms for rms files!");GLLib.Pack_OpenFromRms(a);return}if(false){GLLib.Dbg("Pack_Open("+a+")")}GLLib.s_pack_dataSource=1;GLLib.Pack_OpenEx(a,null,0)};GLLib.Pack_OpenFromRms_INI=function(a){if(false){if(a==null){GLLib.Assert(false,"Pack_Open.filename is null")}if(false){GLLib.Dbg("Pack_OpenFromRms("+a+")")}GLLib.s_pack_dataSource=2;GLLib.Pack_OpenEx(a,null,0)}else{GLLib.Dbg("Pack_OpenFromRms: rms_usePackRead is FALSE!")}};GLLib.Pack_OpenFromMemoryBuffer_INI=function(b,a){if(b==null){GLLib.Assert(false,"Pack_OpenFromMemoryBuffer_INI.buffer is null")}GLLib.s_pack_dataSource=3;GLLib.Pack_OpenEx(null,b,a)};GLLib.Pack_ReadData_INI=function(d){if(d<0){GLLib.Assert(false,"Pack_ReadData.idx is invalid")}if(d>=GLLib.s_pack_nbData){GLLib.Assert(false,"Pack_ReadData.idx is invalid")}if(false){GLLib.Dbg("Pack_ReadData("+d+")")}var c=GLLib.Pack_PositionAtData(d);var a=null;if(true&&GLLib.s_pack_lastDataIsCompress){try{GLLib.LZMA_Inflate_dup_javaioInputStreamI(GLLib.s_pack_is,c);GLLib.s_pack_curOffset+=c;a=GLLib.m_outStream;GLLib.m_outStream=null}catch(b){GLLib.Assert(false,"LZMA decompression failed : "+b.toString())}}else{a=gloft.ArrayCreation([c],gloft.casttobyte(null));GLLib.Pack_ReadFully(a,0,a.length)}if(false){GLLib.Dbg("     Pack_ReadData("+d+")  DONE")}return a};GLLib.Pack_ReadArray_INI=function(c){if(c<0){GLLib.Assert(false,"Pack_ReadArray.idx is invalid")}if(c>=GLLib.s_pack_nbData){GLLib.Assert(false,"Pack_ReadArray.idx is invalid")}if(false){GLLib.Dbg("Pack_ReadArray("+c+")")}var a=GLLib.Pack_PositionAtData(c);if(false){GLLib.Dbg("size of data is "+a)}GLLib.Stream_readOffset=0;var b=null;if(true&&GLLib.s_pack_lastDataIsCompress){b=GLLib.Mem_ReadArray(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(c)))}else{b=GLLib.Mem_ReadArray(GLLib.s_pack_is);GLLib.s_pack_curOffset+=GLLib.Stream_readOffset}return b};GLLib.Pack_ResetInputStream_INI=function(){if(GLLib.s_pack_is!=null){try{GLLib.s_pack_is.close()}catch(a){a.printStackTrace()}GLLib.s_pack_is=null}GLLib.s_pack_curOffset=0};GLLib.Pack_GetDataOffset_dup_=function(){var b=gloft.casttoshort(null);if(GLLib.s_pack_subPack_curSubPack==GLLib.s_pack_subPack_nbOf-1){b=gloft.casttoshort((GLLib.s_pack_nbData-GLLib.s_pack_subPack_fat[GLLib.s_pack_subPack_curSubPack]))}else{b=gloft.casttoshort((GLLib.s_pack_subPack_fat[GLLib.s_pack_subPack_curSubPack+1]-GLLib.s_pack_subPack_fat[GLLib.s_pack_subPack_curSubPack]))}if(false){GLLib.Dbg("   nb of data in this subpack : "+b)}GLLib.s_pack_offset=gloft.ArrayCreation([b+1],gloft.casttoint(null));for(var a=0;a<b+1;++a){GLLib.s_pack_offset[a]=GLLib.Pack_Read32();if(false){GLLib.Dbg("   data "+a+" is @ offset : "+GLLib.s_pack_offset[a])}}};GLLib.Pack_Reset_CORE=function(){GLLib.m_streamMark=false;GLLib.m_streamSubPack=0;GLLib.m_streamSize=0;GLLib.m_resName=null;GLLib.m_resLength=null};GLLib.Pack_Init_CORE=function(a,b){GLLib.m_basepath=a;GLLib.m_resource=b};GLLib.Pack_Open_CORE=function(a){if(GLLib.m_stream!=null&&a!=null&&a.compareTo(GLLib.m_streamId)==0){return}GLLib.s_pack_dataSource=1;if(false){GLLib.Dbg("[CORE].Pack_Open_CORE "+a)}GLLib.Pack_GetSubPack_CORE_dup_javalangStringI(a,0)};GLLib.Pack_OpenFromRms_CORE=function(a){if(false){if(a==null){GLLib.Assert(false,"Pack_Open.packId is null")}if(false){GLLib.Dbg("Pack_OpenFromRms_CORE("+a+")")}GLLib.s_pack_dataSource=2;GLLib.Pack_GetSubPack_CORE_dup_javalangStringI(a,0)}else{GLLib.Dbg("Pack_OpenFromRms_CORE: rms_usePackRead is FALSE!")}};GLLib.Pack_OpenFromMemoryBuffer_CORE=function(b,a){if(b==null){GLLib.Assert(false,"Pack_OpenFromMemoryBuffer_CORE.buffer is null")}GLLib.s_pack_dataSource=3;GLLib.Pack_GetSubPack_CORE_dup_javalangStringIaBI(null,0,b,a)};GLLib.Pack_GetSubPack_CORE_dup_javalangStringI=function(a,b){return GLLib.Pack_GetSubPack_CORE_dup_javalangStringIaBI(a,b,null,0)};GLLib.Pack_GetSubPack_CORE_dup_javalangStringIaBI=function(j,f,d,b){GLLib.s_pack_filename=j;GLLib.s_pack_memBufSrc=d;GLLib.s_pack_memBufSrcOff=b;if(GLLib.m_stream!=null){if(j!=null&&j.compareTo(GLLib.m_streamId)==0){if(GLLib.m_streamSubPack==f){return GLLib.m_stream}GLLib.Pack_CloseStream_CORE()}else{GLLib.Pack_Close_CORE()}}if(GLLib.m_stream==null){try{if(f>0){j=j+"."+f}var h=GLLib.Pack_GetInputStream(j);GLLib.m_streamSubPack=f;GLLib.m_streamMark=h.markSupported();if(f==0){GLLib.m_streamId=j;GLLib.m_streamSize=h.available();var a=(h.read()&255)+((h.read()&255)<<8);GLLib.s_pack_nbData=gloft.casttoshort(a);var e=h.available()-(a<<2);GLLib.m_resOffset=gloft.ArrayCreation([a],gloft.casttoint(null));for(var c=0;c<a;++c){GLLib.m_resOffset[c]=(h.read()&255)+((h.read()&255)<<8)+((h.read()&255)<<16)+((h.read()&255)<<24)}GLLib.s_pack_curOffset=GLLib.m_resOffset[0]}else{GLLib.s_pack_curOffset=0}GLLib.m_stream=h}catch(g){g.printStackTrace()}}return GLLib.m_stream};GLLib.Pack_CloseStream_CORE=function(){try{if(GLLib.m_stream!=null){try{GLLib.m_stream.close()}catch(a){a.printStackTrace()}GLLib.m_stream=null;GLLib.s_pack_is=null}}catch(b){b.printStackTrace()}};GLLib.Pack_CloseStream=function(){try{if(GLLib.s_pack_is!=null){try{GLLib.s_pack_is.close()}catch(a){a.printStackTrace()}GLLib.s_pack_is=null}}catch(b){b.printStackTrace()}};GLLib.Pack_Close_CORE=function(){if(false){GLLib.Dbg("[CORE].Pack_Close_CORE "+GLLib.m_streamId)}GLLib.Pack_CloseStream_CORE();GLLib.m_streamId=null;GLLib.m_resOffset=null;GLLib.m_res=null};GLLib.Pack_GetCount_CORE=function(){if(GLLib.m_resource!=null){return GLLib.m_resource.length}return 0};GLLib.Pack_PositionAtData_CORE=function(g){if(GLLib.m_streamId==null){GLLib.Assert(false,"Pack_PositionAtData_CORE: m_streamId is null!")}var f=GLLib.m_resOffset[g];var e=GLLib.m_resOffset[g+1]-f-1;var c=0;try{while(f>GLLib.m_streamSize){f-=GLLib.m_streamSize;++c}if(false){GLLib.Dbg("[CORE].get "+GLLib.m_streamId+"."+c+","+g)}var b=GLLib.Pack_GetSubPack_CORE_dup_javalangStringI(GLLib.m_streamId,c);var a=b.available();if(false){GLLib.Dbg("[CORE].get streamPos="+GLLib.s_pack_curOffset+", available="+a+", offset="+f+", size "+e)}if(GLLib.s_pack_curOffset>f){if(false){GLLib.Dbg("Pack Close BAD READING ORDER")}if(false==true&&GLLib.m_streamMark){b.reset();GLLib.s_pack_curOffset=0}else{GLLib.Pack_CloseStream_CORE();b=GLLib.Pack_GetSubPack_CORE_dup_javalangStringI(GLLib.m_streamId,c)}}b.skip(f-GLLib.s_pack_curOffset);GLLib.s_pack_lastDataReadMimeType=(gloft.casttobyte(b.read())&255);if(true&&GLLib.s_pack_lastDataReadMimeType>=127){GLLib.s_pack_lastDataReadMimeType-=127;GLLib.s_pack_lastDataIsCompress=true}GLLib.s_pack_lastDataIsCompress=false;GLLib.s_pack_curOffset=f+1}catch(d){d.printStackTrace()}return e};GLLib.Pack_ReadData_CORE_dup_I=function(a){if(GLLib.m_streamId==null){GLLib.Assert(false,"Pack_ReadData_CORE: m_streamId is null!")}return GLLib.Pack_ReadData_CORE_dup_javalangStringIZ(GLLib.m_streamId,a,false)};GLLib.Pack_ReadData_CORE_dup_IIZ=function(f,e,a){var c=null;try{if(GLLib.m_basepath!=null&&GLLib.m_resource!=null){c=GLLib.Pack_ReadData_CORE_dup_javalangStringIZ(GLLib.m_basepath+GLLib.m_resource[f],e,a)}}catch(d){d.printStackTrace()}return c};GLLib.Pack_ReadData_CORE_dup_javalangStringIZ=function(l,a,h){var g=null;GLLib.Pack_Open_CORE(l);try{var d=GLLib.Pack_PositionAtData_CORE(a);var c=GLLib.m_stream;if(false){GLLib.Dbg("[CORE].get mime="+GLLib.s_pack_lastDataReadMimeType)}var f=c.available();var e=0;g=gloft.ArrayCreation([d],gloft.casttobyte(null));while(d>0){var j=GLLib.Pack_ReadFromStream_CORE(c,g,e,java.lang.Math.min(d,f));e+=j;GLLib.s_pack_curOffset+=j;d-=j;if(d==0){break}if(j==-1){if(false){GLLib.Dbg("[CORE].get read ERROR !!!");break}break}else{c=GLLib.Pack_GetSubPack_CORE_dup_javalangStringI(l,GLLib.m_streamSubPack+1);f=c.available()}}if(false){GLLib.Dbg("[CORE].get sizeLeft="+d+" dataLen="+g.length)}}catch(k){k.printStackTrace()}if(h){GLLib.Pack_CloseStream_CORE()}return g};GLLib.Pack_ReadFromStream_CORE=function(b,g,f,e){try{if(false){for(var a=f+e,d=f;d<a;++d){g[d]=gloft.casttobyte(b.read());if(g[d]==-1){return d-f}}return e}return b.read(g,f,e)}catch(c){return -1}};GLLib.Pack_GetStrings_CORE=function(f){try{var a=0;var h=GLLib.Mem_GetInt(f,++a);a+=4;var e=a+4*h;var k=gloft.ArrayCreation([h],null);var b=0;var g=0;while(b<h){var d=g;g=GLLib.Mem_GetInt(f,a);var c=g-d;k[b]=new java.lang.String(f,e,c,"UTF-8");++b;a+=4;e+=c}return k}catch(j){j.printStackTrace();return null}};GLLib.Pack_GetDataOffset_dup_I=function(a){return GLLib.s_pack_offset[a]};GLLib.Pack_Close_INIEX=function(){if(false){GLLib.Dbg("[CORE].Pack_Close_INIEX "+GLLib.s_pack_filename)}GLLib.Pack_CloseStream();GLLib.s_pack_filename=null;GLLib.s_pack_offset=null;GLLib.m_resLength=null;GLLib.Pack_Dlc_Close()};GLLib.Pack_Open_INIEX_dup_javalangString=function(a){GLLib.Pack_Open_INIEX_dup_javalangStringZ(a,false)};GLLib.Pack_Open_INIEX_dup_javalangStringZ=function(c,a){if(GLLib.s_pack_is!=null&&c!=null&&c.compareTo(GLLib.s_pack_filename)==0){return}GLLib.s_pack_dataSource=1;if(false){GLLib.Dbg("[CORE].Pack_Open_INIEX "+c)}GLLib.s_pack_currentIndex=GLLib.Pack_GetPackIndex(c);GLLib.Pack_GetSubPack_INIEX_dup_javalangStringI(c,0);for(var d=1;d<GLLib.s_pack_subPack_nbOf;++d){GLLib.Pack_GetSubPack_INIEX_dup_javalangStringI(c,d)}if(false&&a){GLLib.Pack_Open_Dlc(c)}};GLLib.Pack_GetResourceName=function(b,a){return GLLib.m_resName[b][a]};GLLib.Pack_GetResourceIndex=function(c,b){for(var a=0;a<GLLib.m_resName[c].length;++a){if(GLLib.m_resName[c][a].equals(b)){return a}}return -1};GLLib.Pack_ReadData_INIEX_dup_javalangString=function(a){return GLLib.Pack_ReadData_INIEX_dup_I(GLLib.Pack_GetResourceIndex(GLLib.s_pack_currentIndex,a))};GLLib.Pack_ReadData_INIEX_dup_I=function(a){if(GLLib.s_pack_filename==null){GLLib.Assert(false,"Pack_ReadData_INIEX: s_pack_filename is null!")}return GLLib.Pack_ReadData_INIEX_dup_javalangStringIZ(GLLib.s_pack_filename,a,false)};GLLib.Pack_ReadData_INIEX_dup_javalangStringIZ=function(m,a,j){var g=null;try{var d=GLLib.Pack_PositionAtData(a);if(false){GLLib.Dbg("resIndex:\t"+a)}if(a<0){GLLib.Dbg("Can't find resource "+GLLib.m_resName[a]+" in pack "+m);return null}if(false){GLLib.Dbg("data size:\t"+d)}var c=GLLib.s_pack_is;if(d<=0){return g}if(true&&GLLib.s_pack_lastDataIsCompress){try{GLLib.LZMA_Inflate_dup_javaioInputStreamI(GLLib.s_pack_is,d);GLLib.s_pack_curOffset+=d;g=GLLib.m_outStream;GLLib.m_outStream=null}catch(h){GLLib.Assert(false,"LZMA decompression failed : "+h.toString())}}else{var f=c.available();var e=0;g=gloft.ArrayCreation([d],gloft.casttobyte(null));while(d>0){var k=GLLib.Pack_ReadFromStream_CORE(c,g,e,java.lang.Math.min(d,f));e+=k;GLLib.s_pack_curOffset+=k;d-=k;if(d==0){break}if(k==-1){if(false){GLLib.Dbg("[CORE].get read ERROR !!!");break}break}else{c=GLLib.Pack_GetSubPack_INIEX_dup_javalangStringI(m,GLLib.m_streamSubPack+1);f=c.available()}}if(false){GLLib.Dbg("[CORE].get sizeLeft="+d+" dataLen="+g.length)}}}catch(l){l.printStackTrace()}if(j){GLLib.Pack_CloseStream()}return g};GLLib.Pack_GetSubPack_INIEX_dup_javalangStringI=function(a,b){return GLLib.Pack_GetSubPack_INIEX_dup_javalangStringIaBI(a,b,null,0)};GLLib.Pack_GetSubPack_INIEX_dup_javalangStringIaBI=function(c,l,b,a){if(GLLib.s_pack_is!=null){if(c!=null&&c.compareTo(GLLib.s_pack_filename)==0){if(GLLib.m_streamSubPack==l){return GLLib.s_pack_is}GLLib.Pack_CloseStream()}else{GLLib.Pack_Close_INIEX()}}if(GLLib.s_pack_is==null){GLLib.s_pack_filename=c;GLLib.s_pack_memBufSrc=b;GLLib.s_pack_memBufSrcOff=a;try{if(l>0){c=c+"."+l}var p=GLLib.Pack_GetInputStream(c);GLLib.m_streamSubPack=l;GLLib.m_streamMark=p.markSupported();if(false){GLLib.Dbg("Stream Id = "+GLLib.s_pack_filename)}GLLib.m_streamSize=p.available();if(l<=0){var x=GLLib.Read16(p);if(false){GLLib.Dbg("read iniex version: "+x)}var w=GLLib.Read16(p);if(false){GLLib.Dbg("read iniex count: "+w)}GLLib.s_pack_nbData=gloft.casttoshort(w);var v=GLLib.Read16(p);if(false){GLLib.Dbg("read iniex subpackCount: "+v)}GLLib.s_pack_subPack_nbOf=gloft.casttoshort(v);if(v>0){GLLib.s_pack_subPack_fat=gloft.ArrayCreation([v],gloft.casttoshort(null));for(var u=0;u<v;++u){var r=GLLib.Read16(p);GLLib.s_pack_subPack_fat[u]=gloft.casttoshort(r);if(false){GLLib.Dbg("read iniex subpack start index: "+r)}}}GLLib.s_pack_offset=gloft.ArrayCreation([w],gloft.casttoint(null));GLLib.m_resLength=gloft.ArrayCreation([w],gloft.casttoint(null))}if(GLLib.m_resName==null){GLLib.m_resName=gloft.ArrayCreation([GLLib.s_packNames.length],null)}if(GLLib.m_resName[GLLib.s_pack_currentIndex]==null){GLLib.m_resName[GLLib.s_pack_currentIndex]=gloft.ArrayCreation([GLLib.s_pack_nbData],null)}var m=GLLib.s_pack_nbData;if(l+1<GLLib.s_pack_subPack_fat.length){m=GLLib.s_pack_subPack_fat[l+1]}for(var o=GLLib.s_pack_subPack_fat[l];o<m;++o){var f=p.read();if(false){GLLib.Dbg("read iniex nameLength: "+f)}var g=gloft.ArrayCreation([f],gloft.casttobyte(null));for(var q=0;q<f;++q){g[q]=gloft.casttobyte(p.read())}var k=new java.lang.String(g);GLLib.m_resName[GLLib.s_pack_currentIndex][o]=k;if(false){GLLib.Dbg("read iniex name: "+k)}var e=GLLib.Read32(p);if(false){GLLib.Dbg("read iniex offset: "+e)}GLLib.s_pack_offset[o]=e;var d=GLLib.Read32(p);GLLib.m_resLength[o]=d;if(false){GLLib.Dbg("read iniex resLength: "+d)}}if(false){java.lang.Thread.sleep(6000)}GLLib.s_pack_curOffset=GLLib.s_pack_offset[GLLib.s_pack_subPack_fat[l]];GLLib.s_pack_is=p}catch(h){h.printStackTrace()}}return GLLib.s_pack_is};GLLib.Read16=function(a){return(a.read()&255)+((a.read()&255)<<8)};GLLib.Read32=function(a){return(a.read()&255)+((a.read()&255)<<8)+((a.read()&255)<<16)+((a.read()&255)<<24)};GLLib.Pack_SetPackNamesArray=function(a){GLLib.Pack_Reset();GLLib.s_packNames=a};GLLib.Pack_GetPackIndex=function(b){for(var a=0;a<GLLib.s_packNames.length;++a){if(b.equals(GLLib.s_packNames[a])){return a}}return -1};GLLib.Pack_PositionAtData_INIEX=function(a){if(GLLib.s_pack_filename==null){GLLib.Assert(false,"Pack_PositionAtData_CORE: s_pack_filename is null!")}try{var g=GLLib.Pack_PositionAtData_Dlc(a);if(g!=null&&g.length==1){return g[0]}var f=0;var d=GLLib.s_pack_subPack_nbOf-1;if(g!=null&&g.length==2){f=g[0];d=g[1]}var b=gloft.casttoint(null);for(b=d;b>=f;--b){if(GLLib.s_pack_subPack_fat[b]<=a){b-=f;break}}if(false){GLLib.Dbg("[CORE].get "+GLLib.s_pack_filename+"."+b+","+a)}var e=GLLib.Pack_GetSubPack_INIEX_dup_javalangStringI(GLLib.s_pack_filename,b);var j=GLLib.s_pack_curOffset;var h=e.available();var k=GLLib.Pack_GetDataOffset_dup_I(a);var c=GLLib.m_resLength[a];if(false){GLLib.Dbg("[CORE].get streamPos="+GLLib.s_pack_curOffset+", available="+h+", offset="+k+", size "+c)}if(j>k){if(false){GLLib.Dbg("Pack Close BAD READING ORDER")}if(e.markSupported()){e.reset();j=0}else{GLLib.Pack_CloseStream();e=GLLib.Pack_GetSubPack_INIEX_dup_javalangStringI(GLLib.s_pack_filename,b)}}if(k!=j){e.skip(k-j)}GLLib.s_pack_lastDataReadMimeType=(gloft.casttobyte(e.read())&255);if(true&&GLLib.s_pack_lastDataReadMimeType>=127){GLLib.s_pack_lastDataReadMimeType-=127;GLLib.s_pack_lastDataIsCompress=true}GLLib.s_pack_is=e;GLLib.s_pack_lastDataIsCompress=false;GLLib.s_pack_curOffset=k+1;return --c}catch(l){return 0}};GLLib.Pack_SaveDataInFile=function(c,a){var d=javax.microedition.io.Connector.open("file:///"+c,3);if(!d.exists()){d.create()}var b=d.openOutputStream();b.write(a.getBytes());b.flush();b.close();return true};GLLib.Pack_IndexOfStringInArray=function(b,c){for(var a=0;a<c.length;++a){if(c[a].equals(b)){return a}}return -1};GLLib.Pack_Reset=function(){GLLib.s_packNames=null;GLLib.s_pack_currentIndex=0;GLLib.s_pack_filename=null;GLLib.s_pack_is=null;GLLib.s_pack_memBufSrc=null;GLLib.s_pack_memBufSrcOff=0;GLLib.s_pack_curOffset=0;GLLib.s_pack_nbData=0;GLLib.s_pack_offset=null;GLLib.s_pack_subPack_nbOf=0;GLLib.s_pack_subPack_fat=null;GLLib.s_pack_subPack_filename=null;GLLib.s_pack_subPack_curSubPack=0;GLLib.s_pack_lastDataReadMimeType=0;GLLib.s_pack_lastDataIsCompress=false;GLLib.s_Pack_SkipBuffer=null;GLLib.MIME_type=null;GLLib.s_pack_BinaryCache=null;GLLib.s_pack_HashIndex=null;GLLib.s_pack_HashSize=null;GLLib.Pack_Reset_CORE()};GLLib.Pack_Open=function(a){if(false){GLLib.Pack_Open_INIEX_dup_javalangString(a)}else{if(false){GLLib.Pack_Open_CORE(a)}else{GLLib.Pack_Open_INI(a)}}};GLLib.Pack_OpenFromRms=function(a){if(false){GLLib.Pack_OpenFromRms_CORE(a)}else{GLLib.Pack_OpenFromRms_INI(a)}};GLLib.Pack_OpenFromMemoryBuffer=function(b,a){if(false){GLLib.Pack_OpenFromMemoryBuffer_CORE(b,a)}else{GLLib.Pack_OpenFromMemoryBuffer_INI(b,a)}};GLLib.Pack_OpenEx=function(a,b,c){if(GLLib.s_pack_filename!=null&&a!=null&&a.compareTo(GLLib.s_pack_filename)==0){if(false){GLLib.Dbg("Pack_OpenEx("+a+").file already open")}return}GLLib.Pack_Close();GLLib.s_pack_filename=a;GLLib.s_pack_memBufSrc=b;GLLib.s_pack_memBufSrcOff=c;GLLib.s_pack_is=GLLib.Pack_GetInputStream(GLLib.s_pack_filename);if(GLLib.s_pack_is==null){GLLib.Assert(false,"Pack_Open.unable to find file")}GLLib.s_pack_nbData=gloft.casttoshort(GLLib.Pack_Read16());if(false){GLLib.Dbg("   nb of data in pack : "+GLLib.s_pack_nbData)}GLLib.s_pack_subPack_nbOf=gloft.casttoshort(GLLib.Pack_Read16());if(false){GLLib.Dbg("   nb of subpack for this pack : "+GLLib.s_pack_subPack_nbOf)}GLLib.s_pack_subPack_fat=gloft.ArrayCreation([GLLib.s_pack_subPack_nbOf],gloft.casttoshort(null));for(var d=0;d<GLLib.s_pack_subPack_nbOf;++d){GLLib.s_pack_subPack_fat[d]=gloft.casttoshort(GLLib.Pack_Read16());if(false){GLLib.Dbg("   subpack "+d+" start with data : "+GLLib.s_pack_subPack_fat[d])}}GLLib.s_pack_subPack_curSubPack=0;GLLib.Pack_GetDataOffset_dup_()};GLLib.Pack_GetInputStream=function(k){var b=null;if(GLLib.s_pack_dataSource==3){b=new java.io.ByteArrayInputStream(GLLib.s_pack_memBufSrc,GLLib.s_pack_memBufSrcOff,GLLib.s_pack_memBufSrc.length-GLLib.s_pack_memBufSrcOff)}else{if(GLLib.s_pack_dataSource==2){if(false){b=GLLib.GetRmsInputStream(k)}else{GLLib.Dbg("Pack_GetInputStream: rms_usePackRead is FALSE!")}}else{if(GLLib.s_pack_dataSource==1){if(false==true){if(GLLib.s_pack_HashIndex==null){GLLib.s_pack_HashIndex=new java.util.Hashtable();GLLib.s_pack_HashSize=new java.util.Hashtable();try{GLLib.s_pack_is=GLLib.s_gllib_instance.GetResourceAsStream("/999");var e=GLLib.Pack_Read32();GLLib.s_pack_BinaryCache=gloft.ArrayCreation([e],gloft.casttobyte(null));for(var c=0;c<e;++c){var f=gloft.ArrayCreation([GLLib.Pack_Read32()],gloft.casttobyte(null));GLLib.s_pack_is.read(f);var j=new java.lang.String(f);var d=GLLib.Pack_Read32();GLLib.s_pack_HashIndex.put("/"+j,new java.lang.Integer(c));GLLib.s_pack_HashSize.put("/"+j,new java.lang.Integer(d))}GLLib.Pack_Close()}catch(g){GLLib.Dbg("   Exception while reading file INDEX")}}var h=GLLib.s_pack_HashIndex.get(k);if(GLLib.s_pack_BinaryCache[h]==null){GLLib.s_pack_BinaryCache[h]=gloft.ArrayCreation([gloft.casttoint(GLLib.s_pack_HashSize.get(k))],gloft.casttobyte(null));try{(GLLib.s_pack_is=GLLib.s_gllib_instance.GetResourceAsStream(k)).read(GLLib.s_pack_BinaryCache[h]);GLLib.s_pack_is.close();GLLib.s_pack_is=null}catch(a){GLLib.Dbg("   Exception while reading file to cache : "+k)}}if(GLLib.s_pack_BinaryCache[h]==null){GLLib.Assert(false,"   s_pack_BinaryCache[nDataIndex]==null error")}b=new java.io.ByteArrayInputStream(GLLib.s_pack_BinaryCache[h])}else{b=GLLib.s_gllib_instance.GetResourceAsStream(k)}}}}return b};GLLib.Pack_ReleaseBinaryCache=function(a){if(false){var b=GLLib.s_pack_HashIndex.get(a);if(GLLib.s_pack_BinaryCache[b]!=null){var d=GLLib.Mem_GetShort(GLLib.s_pack_BinaryCache[b],2);GLLib.s_pack_BinaryCache[b]=null;for(var c=1;c<d;++c){GLLib.s_pack_BinaryCache[GLLib.s_pack_HashIndex.get(a+"."+c)]=null}}}};GLLib.Pack_Close=function(){GLLib.Pack_ResetInputStream();if(GLLib.s_pack_dataSource==3){GLLib.s_pack_memBufSrc=null}else{if(GLLib.s_pack_dataSource==2&&false){GLLib.s_rms_buffer=null}}if(true){java.lang.System.gc()}};GLLib.Pack_ResetInputStream=function(){if(false){GLLib.Pack_CloseStream();GLLib.Pack_Dlc_Close();GLLib.s_pack_curOffset=0}else{if(false){GLLib.Pack_Close_CORE()}else{GLLib.Pack_ResetInputStream_INI()}}};GLLib.Pack_PositionAtData=function(b){if(false){return GLLib.Pack_PositionAtData_INIEX(b)}if(false){var d=GLLib.Pack_PositionAtData_CORE(b);var i=0;GLLib.s_pack_is=GLLib.m_stream;try{i=GLLib.m_stream.available()}catch(g){g.printStackTrace()}if(d>i){GLLib.Dbg("Pack_PositionAtData: partially available ("+i+gloft.casttoint("/")+d+") when pack_use_CORE_ResourceManager is TRUE!");d=i}return d}if(b<0){GLLib.Assert(false,"Pack_PositionAtData.idx is invalid")}if(b>=GLLib.s_pack_nbData){GLLib.Assert(false,"Pack_PositionAtData.idx is invalid")}if(false){GLLib.Dbg("Pack_PositionAtData("+b+")  current sub : "+GLLib.s_pack_subPack_curSubPack)}var h=gloft.casttoint(null);for(h=GLLib.s_pack_subPack_nbOf-1;h>=0&&GLLib.s_pack_subPack_fat[h]>b;--h){}if(false){GLLib.Dbg("   data "+b+" is in subpack : "+h)}if(GLLib.s_pack_subPack_curSubPack!=h){if(false){GLLib.Dbg("   opening subpack : "+h)}GLLib.s_pack_subPack_curSubPack=h;GLLib.Pack_Close();if(GLLib.s_pack_subPack_curSubPack==0){var c=GLLib.s_pack_filename;GLLib.s_pack_filename=null;GLLib.Pack_Open(c)}else{GLLib.s_pack_is=GLLib.Pack_GetInputStream(GLLib.s_pack_filename+"."+GLLib.s_pack_subPack_curSubPack);GLLib.Pack_GetDataOffset_dup_()}}else{if(GLLib.s_pack_is==null){if(false){GLLib.Dbg("   reopening subpack : "+h)}if(GLLib.s_pack_subPack_curSubPack==0){var a=GLLib.s_pack_filename;GLLib.s_pack_filename=null;GLLib.Pack_Open(a)}else{GLLib.s_pack_is=GLLib.Pack_GetInputStream(GLLib.s_pack_filename+"."+GLLib.s_pack_subPack_curSubPack)}}}b-=GLLib.s_pack_subPack_fat[GLLib.s_pack_subPack_curSubPack];var f=GLLib.s_pack_offset[b];var e=GLLib.s_pack_offset[b+1]-GLLib.s_pack_offset[b];if(false){GLLib.Dbg("   data is at index "+b+" in this subpack @ offset "+f+" ("+e+" byte)")}GLLib.Pack_Seek(f);GLLib.s_pack_lastDataIsCompress=false;if(e>0){GLLib.s_pack_lastDataReadMimeType=(GLLib.Pack_Read()&255);if(true&&GLLib.s_pack_lastDataReadMimeType>=127){GLLib.s_pack_lastDataReadMimeType-=127;GLLib.s_pack_lastDataIsCompress=true}--e}if(false&&GLLib.MIME_type!=null){GLLib.Dbg("   data mime type is "+GLLib.s_pack_lastDataReadMimeType+" ("+GLLib.GetMIME(GLLib.s_pack_lastDataReadMimeType)+")")}return e};GLLib.Pack_ReadData=function(a){if(false){return GLLib.Pack_ReadData_INIEX_dup_I(a)}if(false){return GLLib.Pack_ReadData_CORE_dup_I(a)}return GLLib.Pack_ReadData_INI(a)};GLLib.Pack_Seek=function(a){if(GLLib.s_pack_curOffset==a){return}if(GLLib.s_pack_curOffset>a){if(false){GLLib.Dbg("Pack Close BAD READING ORDER")}GLLib.Pack_ResetInputStream();if(GLLib.s_pack_subPack_curSubPack==0){GLLib.s_pack_is=GLLib.Pack_GetInputStream(GLLib.s_pack_filename)}else{GLLib.s_pack_is=GLLib.Pack_GetInputStream(GLLib.s_pack_filename+"."+GLLib.s_pack_subPack_curSubPack)}if(GLLib.s_pack_is==null){GLLib.Assert(false,"Pack_Seek.internal error")}}else{a-=GLLib.s_pack_curOffset}GLLib.Pack_Skip(a)};GLLib.Pack_Skip=function(b){if(b==0){return}if(256==0||GLLib.s_pack_dataSource==3){GLLib.s_pack_curOffset+=b;try{while(b>0){b-=gloft.casttoint(GLLib.s_pack_is.skip(b))}}catch(a){GLLib.Assert(false,"Pack_Skip.IO exception occured")}}else{if(GLLib.s_Pack_SkipBuffer==null){GLLib.s_Pack_SkipBuffer=gloft.ArrayCreation([256],gloft.casttobyte(null))}while(b>256){GLLib.Pack_ReadFully(GLLib.s_Pack_SkipBuffer,0,256);b-=256}if(b>0){GLLib.Pack_ReadFully(GLLib.s_Pack_SkipBuffer,0,b)}}};GLLib.Pack_Read=function(){var b=0;try{b=GLLib.s_pack_is.read()}catch(a){GLLib.Assert(false,"Pack_Read.IO exception occured")}if(b<0){GLLib.Assert(false,"Pack_Read.EOF")}++GLLib.s_pack_curOffset;return b};GLLib.Pack_Read16=function(){return(GLLib.Pack_Read()&255)|(GLLib.Pack_Read()&255)<<8};GLLib.Pack_Read32=function(){return(GLLib.Pack_Read()&255)|(GLLib.Pack_Read()&255)<<8|((GLLib.Pack_Read()&255)<<16|(GLLib.Pack_Read()&255)<<24)};GLLib.Pack_ReadFully=function(g,f,d){if(g==null){GLLib.Assert(false,"Pack_ReadFully.array is null")}if(f<0){GLLib.Assert(false,"Pack_ReadFully.offset is negative")}if(d<0){GLLib.Assert(false,"Pack_ReadFully.length is negative")}if(f+d>g.length){GLLib.Assert(false,"Pack_ReadFully.offset+length is bigger than array size")}var a=f;var c=d;try{while(c>0){var e=GLLib.s_pack_is.read(g,a,c);if(e<0){GLLib.Assert(false,"Pack_ReadFully.EOF")}c-=e;a+=e}}catch(b){GLLib.Assert(false,"Pack_Read.IO exception occured")}GLLib.s_pack_curOffset+=d;return d};GLLib.Pack_ReadArray=function(a){if(false){if(a<0){GLLib.Assert(false,"Pack_ReadArray.idx is invalid")}return GLLib.Mem_ReadArray(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(a)))}return GLLib.Pack_ReadArray_INI(a)};GLLib.Pack_LoadMIME=function(d){if(d==null){GLLib.Assert(false,"Pack_LoadMIME.filename is null")}if(GLLib.MIME_type==null){var a=GLLib.s_pack_is;GLLib.s_pack_is=GLLib.Pack_GetInputStream(d);var e=GLLib.Pack_Read();if(false){GLLib.Dbg("nb Of MIME type : "+e)}GLLib.MIME_type=gloft.ArrayCreation([e],gloft.casttobyte(null));for(var c=0;c<e;++c){var f=GLLib.Pack_Read();GLLib.Pack_ReadFully(GLLib.MIME_type[c]=gloft.ArrayCreation([f],gloft.casttobyte(null)),0,f)}try{GLLib.s_pack_is.close()}catch(b){GLLib.Assert(false,"Pack_LoadMIME.IO Error")}GLLib.s_pack_is=a}};GLLib.GetMIME=function(b){if(GLLib.MIME_type==null){GLLib.Assert(false,"GetMIME. MIME type not loaded yet, use Pack_LoadMIME first")}if(b>=GLLib.MIME_type.length){return""}try{return new java.lang.String(GLLib.MIME_type[b],"UTF-8")}catch(a){return""}};GLLib.GetMIMEIndex=function(f,a){if(GLLib.MIME_type==null){GLLib.Assert(false,"GetMIMEIndex: MIME type not loaded yet, use Pack_LoadMIME first")}for(var e=0;e<GLLib.MIME_type.length;++e){if(GLLib.GetMIME(e).compareTo(f)==0){GLLib.Dbg("GetMIMEIndex: Found["+f+"] @ index "+e);return e}}GLLib.Dbg("GetMIMEIndex: MIME type "+f+" not found");if(a){GLLib.Dbg("GetMIMEIndex: Adding new MIME type to list!");var h=GLLib.MIME_type.length;var g=gloft.ArrayCreation([h+1],gloft.casttobyte(null));for(var c=0;c<h-2;++c){g[c]=GLLib.MIME_type[c]}try{g[h-1]=f.getBytes("UTF-8")}catch(d){GLLib.Dbg("GetMIMEType: UTF-8 not supported!")}GLLib.MIME_type=g;return h-1}return -1};GLLib.StartDownload_Dlc=function(){GLLib.s_dlc_state=0};GLLib.HandleRequest_Dlc=function(d,c,a,b){if(a!=null&&a.startsWith("dlc")){if(b==200||b==202){GLLib.HandleRequest_Dlc_Success(d,c)}else{GLLib.HandleRequest_Dlc_Error(d,b)}}};GLLib.HandleRequest_Dlc_Error=function(b,a){};GLLib.HandleRequest_Dlc_Success=function(b,a){};GLLib.Get_Dlc_State=function(){return GLLib.s_dlc_state};GLLib.Get_Dlc_Progress_Percent=function(){if(GLLib.s_dlc_packs==null){return 0}if(GLLib.s_lastAsset==null){if(GLLib.s_dlc_state==2){return 100}return 0}else{var a=GLLib.Pack_IndexOfStringInArray(GLLib.s_lastAsset,GLLib.s_dlc_packs);if(a>=0){return gloft.casttoint(100*a/GLLib.s_dlc_packs.length)}if(GLLib.s_dlc_state==2){return 100}return 0}};GLLib.IsInProgress_Dlc=function(){return GLLib.s_lastAsset!=null};GLLib.Pack_Open_Dlc=function(a){};GLLib.Pack_Dlc_Close=function(){if(false){GLLib.s_dlc_pack_subpack_ids=null;GLLib.s_dlc_pack_offset_ids=null;GLLib.s_dlc_pack_resName_ids=null;GLLib.s_dlc_pack_data_length_ids=null;GLLib.s_dlc_pack_ids=null;GLLib.s_dlc_pack_count=null}};GLLib.Pack_Dlc_GetSubPack_INIEX=function(b,c,a){return null};GLLib.Pack_PositionAtData_Dlc=function(a){return null};GLLib.Pack_ExtendArray_dup_aIaIII=function(e,c,d,a){if(a<=0){return e}if(e==null){if(c!=null&&c.length>d){c[d]=0}return gloft.ArrayCreation([a],gloft.casttoint(null))}if(c!=null&&c.length>d){c[d]=e.length}var b=e;e=gloft.ArrayCreation([b.length+a],gloft.casttoint(null));java.lang.System.arraycopy(b,0,e,0,b.length);return e};GLLib.Pack_ExtendArray_dup_aSaIII=function(e,c,d,a){if(a<=0){return e}if(e==null){if(c!=null&&c.length>d){c[d]=0}return gloft.ArrayCreation([a],gloft.casttoshort(null))}if(c!=null&&c.length>d){c[d]=e.length}var b=e;e=gloft.ArrayCreation([b.length+a],gloft.casttoshort(null));java.lang.System.arraycopy(b,0,e,0,b.length);return e};GLLib.Pack_ExtendArray_dup_ajavalangStringaIII=function(e,c,d,a){if(a<=0){return e}if(e==null){if(c!=null&&c.length>d){c[d]=0}return gloft.ArrayCreation([a],null)}if(c!=null&&c.length>d){c[d]=e.length}var b=e;e=gloft.ArrayCreation([b.length+a],null);java.lang.System.arraycopy(b,0,e,0,b.length);return e};GLLib.Pack_AddDlcPackNames=function(){if(GLLib.s_packNames==null){GLLib.Dbg("[DLC].addPackNames pack Names are null: no original packs");return}if(GLLib.s_dlc_packs==null){GLLib.Dbg("[DLC].addPackNames s_dlc_packs==null");return}if(!GLLib.Pack_Dlc_IsInPackNames()){var c=GLLib.s_packNames;java.lang.System.arraycopy(c,0,GLLib.s_packNames=gloft.ArrayCreation([c.length+GLLib.s_dlc_pack_ids.length],null),0,c.length);for(var a=0;a<GLLib.s_dlc_packs.length;++a){var b=GLLib.s_dlc_packs[a];if(b.indexOf(".")<0){GLLib.s_packNames[a+c.length]=b}}}};GLLib.Pack_Dlc_IsInPackNames=function(){for(var a=0;a<GLLib.s_packNames.length;++a){if(GLLib.s_packNames[a].indexOf("dlc")>=0){return true}}return false};GLLib.Pack_Dlc_ReadToc=function(){var a=GLLib.Pack_GetTocName();if(a==null){GLLib.Dbg("Error! [DLC].Pack_Dlc_ReadTocFile:tocName is null");return false}var d=GLLib.Pack_Dlc_GetPath(a);try{var c=GLLib.Pack_GetInputStream(d);if(c==null){GLLib.Dbg("Error! [DLC].readToc Can't open toc file: "+d);return false}return GLLib.Pack_ReadTocContent(GLLib.Pack_ReadAllAsString(c))}catch(b){GLLib.Dbg("Error! [DLC].readToc "+d+";"+b);return false}};GLLib.Pack_ReadTocContent=function(a){if(a==null){return false}GLLib.s_dlc_version_count=0;a=a.trim();if(a.length==0){GLLib.s_dlc_packs=gloft.ArrayCreation([0],null);GLLib.s_dlc_pack_hashs=gloft.ArrayCreation([0],null);return true}var b=1;var k=gloft.casttoint(null);for(var d=0;d<a.length;d=k+2){k=GLLib.Pack_NextLineIndex(a,d);if(k<0){break}++b}GLLib.s_dlc_packs=gloft.ArrayCreation([b],null);GLLib.s_dlc_pack_hashs=gloft.ArrayCreation([b],null);var e=gloft.casttoint(null);for(var c=0,f=0;c<a.length;c=e,++f){var h=a.indexOf(" ",c);if(h<0){break}GLLib.s_dlc_packs[f]=GLLib.Pack_Trim(a.substring(c,h));var g=GLLib.Pack_Dlc_GetDlcIdx(GLLib.s_dlc_packs[f]);if(g+1>GLLib.s_dlc_version_count){GLLib.s_dlc_version_count=g+1}++h;e=GLLib.Pack_NextLineIndex(a,h);if(e<0){e=a.length}GLLib.s_dlc_pack_hashs[f]=GLLib.Pack_Trim(a.substring(h,e))}return GLLib.s_isTocRead=true};GLLib.Pack_GetTocName=function(){return""};GLLib.Pack_DeleteSpaces=function(c){var a=c.trim();for(var b=a.indexOf(" ");b>=0;b=a.indexOf(" ",b+1)){a=a.substring(0,b)+a.substring(b+1,a.length)}return a};GLLib.Pack_VerifyHash=function(e,c){try{var f=GLLib.Pack_GetInputStream(e);var b=GLLib.Pack_ReadAllContent(f);f.close();var a=GLLib.Pack_GetHash(b);GLLib.Dbg("FileHash:"+e+";"+a);GLLib.Dbg("Hash:"+c);return a.equals(c)}catch(d){GLLib.Dbg("Error! [DLC].Pack_VerifyHash "+e+";"+d);return false}};GLLib.Pack_ReadAllContent=function(a){var b=new java.io.ByteArrayOutputStream(2048);var e=gloft.ArrayCreation([256],gloft.casttobyte(null));var d=gloft.casttoint(null);while((d=a.read(e))!=-1){b.write(e,0,d)}a.close();var c=b.toByteArray();b.close();return c};GLLib.Pack_Dlc_GetPath=function(a){return"/"+a};GLLib.Pack_Dlc_Get_ResolutionTypeName=function(){return""};GLLib.Pack_Dlc_InitPackIds=function(c){if(GLLib.s_dlc_packs==null){GLLib.s_dlc_pack_ids=null;return}if(GLLib.s_dlc_pack_ids==null||GLLib.s_dlc_pack_ids.length!=GLLib.s_dlc_version_count){GLLib.s_dlc_pack_ids=gloft.ArrayCreation([GLLib.s_dlc_version_count],gloft.casttoint(null))}GLLib.Mem_FillArray(GLLib.s_dlc_pack_ids,-1);for(var b=0;b<GLLib.s_dlc_packs.length;++b){if(GLLib.s_dlc_packs[b]!=null&&GLLib.Pack_Dlc_GetPackId(GLLib.s_dlc_packs[b]).equals(c)){var a=GLLib.Pack_Dlc_GetDlcIdx(GLLib.s_dlc_packs[b]);if(GLLib.s_dlc_packs[b].indexOf(46)<0){GLLib.s_dlc_pack_ids[a]=b}}}};GLLib.Pack_Dlc_GetPackId=function(a){if(a==null){return null}return"/"+a.substring(0,a.indexOf("_"))};GLLib.Pack_Dlc_GetDlcIdx=function(b){if(b==null){return -1}var a=b.indexOf("dlc");var c=b.indexOf(".");if(c<0){c=b.length}return java.lang.Integer.parseInt(b.substring(a+3,c))-1};GLLib.Pack_NextLineIndex=function(c,e){var d=GLLib.Pack_GetNextLineDividers();for(var b=0;b<d.length;++b){var a=c.indexOf(d[b],e);if(a>=0){return a}}return -1};GLLib.Pack_Trim=function(e){var c=e.trim();var a=false;var f=GLLib.Pack_GetNextLineDividers();do{for(var d=0;d<f.length;++d){if(c.startsWith(f[d])){c=c.substring(f[d].length);c.trim();a=true}if(c.endsWith(f[d])){c=c.substring(0,c.length-f[d].length);c.trim();a=true}}}while(a);c.trim();return c};GLLib.Pack_GetNextLineDividers=function(){return["\r\n","\r","\n"]};GLLib.Pack_ReadAllAsString=function(a){var e=new java.lang.StringBuffer();try{var d=gloft.ArrayCreation([1024],gloft.casttobyte(null));var c=gloft.casttoint(null);do{c=a.read(d);e.append(new java.lang.String(d,0,c))}while(c>0)}catch(b){b.printStackTrace()}return e.toString()};GLLib.Pack_Dlc_InitContainers=function(){GLLib.s_dlc_pack_resName_ids=GLLib.Pack_Dlc_InitContainer(GLLib.s_dlc_pack_resName_ids);GLLib.s_dlc_pack_data_length_ids=GLLib.Pack_Dlc_InitContainer(GLLib.s_dlc_pack_data_length_ids);GLLib.s_dlc_pack_subpack_ids=GLLib.Pack_Dlc_InitContainer(GLLib.s_dlc_pack_subpack_ids);GLLib.s_dlc_pack_offset_ids=GLLib.Pack_Dlc_InitContainer(GLLib.s_dlc_pack_offset_ids);GLLib.s_dlc_pack_count=GLLib.Pack_Dlc_InitContainer(GLLib.s_dlc_pack_count)};GLLib.Pack_Dlc_InitContainer=function(a){if(a==null||a.length!=GLLib.s_dlc_version_count){a=gloft.ArrayCreation([GLLib.s_dlc_version_count],gloft.casttoint(null));GLLib.Mem_FillArray(a,-1)}return a};GLLib.Pack_Dlc_GetPackName=function(b){if(GLLib.s_dlc_pack_ids==null){return null}var a=GLLib.s_dlc_pack_ids[b];if(a<0){return null}return GLLib.s_dlc_packs[a]};GLLib.Pack_isDlcExists=function(a){return GLLib.s_dlc_pack_resName_ids!=null&&GLLib.s_dlc_pack_resName_ids.length>a&&GLLib.s_dlc_pack_resName_ids[a]>=0};GLLib.Pack_handleTocAsset=function(c){try{GLLib.Pack_SaveDataInFile(GLLib.Pack_Dlc_GetPath(GLLib.Pack_GetTocName()),c)}catch(b){GLLib.Dbg("Error:"+b)}if(GLLib.Pack_ReadTocContent(c)&&GLLib.s_dlc_packs!=null&&GLLib.s_dlc_pack_hashs!=null){for(var a=0;a<GLLib.s_dlc_packs.length;++a){if(!GLLib.Pack_VerifyHash(GLLib.Pack_Dlc_GetPath(GLLib.s_dlc_packs[a]),GLLib.s_dlc_pack_hashs[a])){return GLLib.s_dlc_packs[a]}}}return null};GLLib.Pack_GetNextDlcAsset=function(b){if(GLLib.s_dlc_packs==null||GLLib.s_dlc_pack_hashs==null){return null}for(var a=0;a<GLLib.s_dlc_packs.length;++a){if(GLLib.s_dlc_packs[a].equals(b)){if(a+1>=GLLib.s_dlc_packs.length){return null}if(!GLLib.Pack_VerifyHash(GLLib.Pack_Dlc_GetPath(GLLib.s_dlc_packs[a+1]),GLLib.s_dlc_pack_hashs[a+1])){return GLLib.s_dlc_packs[a+1]}}}return null};GLLib.Pack_GetHash=function(a){return""};GLLib.LZMA_RangeDecoderInit=function(a,c){GLLib.m_Buffer=a;GLLib.m_inSize=c;GLLib.inputIndex=13;GLLib.m_ExtraBytes=0;GLLib.m_Code=0;GLLib.m_Range=4294967295;a[GLLib.m_inSize-1]=-1;for(var b=0;b<5;++b){GLLib.m_Code=(GLLib.m_Code<<8|(GLLib.m_Buffer[GLLib.inputIndex++]&255))}};GLLib.LZMA_RangeDecoderBitDecode=function(d){var b=(GLLib.m_Range>>11)*GLLib.m_lzmaInternalData[d];if(GLLib.m_Code<b){GLLib.m_Range=b;var c=GLLib.m_lzmaInternalData;c[d]+=gloft.casttoshort((2048-GLLib.m_lzmaInternalData[d]>>5));if(GLLib.m_Range<16777216){GLLib.m_Code=(GLLib.m_Code<<8|(GLLib.m_Buffer[GLLib.inputIndex++]&255));GLLib.m_Range<<=8}return 0}GLLib.m_Range-=b;GLLib.m_Code-=b;var a=GLLib.m_lzmaInternalData;a[d]-=gloft.casttoshort((GLLib.m_lzmaInternalData[d]>>5));if(GLLib.m_Range<16777216){GLLib.m_Code=(GLLib.m_Code<<8|(GLLib.m_Buffer[GLLib.inputIndex++]&255));GLLib.m_Range<<=8}return 1};GLLib.LZMA_LiteralDecodeMatch=function(f,a){var e=1;do{var d=a>>7&1;a<<=1;var c=GLLib.LZMA_RangeDecoderBitDecode(f+(1+d<<8)+e);e=(e<<1|c);if(d!=c){while(e<256){e=(e<<1|GLLib.LZMA_RangeDecoderBitDecode(f+e))}break}}while(e<256);return e};GLLib.LZMA_LiteralDecode=function(b){var a=1;do{a=(a<<1|GLLib.LZMA_RangeDecoderBitDecode(b+a))}while(a<256);return a};GLLib.LZMA_RangeDecoderBitTreeDecode=function(d,c){var a=1;for(var b=c;b>0;--b){a=(a<<1)+GLLib.LZMA_RangeDecoderBitDecode(d+a)}return a-(1<<c)};GLLib.LZMA_LenDecode=function(b,a){if(GLLib.LZMA_RangeDecoderBitDecode(b+0)==0){return GLLib.LZMA_RangeDecoderBitTreeDecode(b+2+(a<<3),3)}if(GLLib.LZMA_RangeDecoderBitDecode(b+1)==0){return 8+GLLib.LZMA_RangeDecoderBitTreeDecode(b+130+(a<<3),3)}return 16+GLLib.LZMA_RangeDecoderBitTreeDecode(b+258,8)};GLLib.LZMA_RangeDecoderReverseBitTreeDecode=function(f,e){var c=1;var b=0;for(var d=0;d<e;++d){var a=GLLib.LZMA_RangeDecoderBitDecode(f+c);c=(c<<1)+a;b|=a<<d}return b};GLLib.LZMA_RangeDecoderDecodeDirectBits=function(e){var a=GLLib.m_Range;var d=GLLib.m_Code;var c=0;for(var b=e;b>0;--b){a>>=1;c<<=1;if(d>=a){d-=a;c|=1}if(a<16777216){a<<=8;d=(d<<8|(GLLib.m_Buffer[GLLib.inputIndex++]&255))}}GLLib.m_Range=a;GLLib.m_Code=d;return c};GLLib.LZMA_Decode=function(y,q,o,l,k,g){var e=1846+(768<<q+o);var a=GLLib.m_lzmaInternalData;var d=0;var c=0;var b=0;var x=1;var w=1;var v=1;var u=1;var A=0;var s=(1<<l)-1;var r=(1<<o)-1;if(y<e<<1){return}for(var z=0;z<e;++z){a[z]=1024}GLLib.LZMA_RangeDecoderInit(k,k.length);while(A<g){var p=A&s;if(GLLib.LZMA_RangeDecoderBitDecode(0+(d<<4)+p)==0){var m=1846+768*(((A&r)<<q)+((b&255)>>8-q));if(d<4){d=0}else{if(d<10){d-=3}else{d-=6}}if(c!=0){b=(GLLib.LZMA_LiteralDecodeMatch(m,GLLib.m_outStream[A-x])&255);c=0}else{b=(GLLib.LZMA_LiteralDecode(m)&255)}GLLib.m_outStream[A++]=gloft.casttobyte(b)}else{c=1;var f=gloft.casttoint(null);if(GLLib.LZMA_RangeDecoderBitDecode(192+d)==1){if(GLLib.LZMA_RangeDecoderBitDecode(204+d)==0){if(GLLib.LZMA_RangeDecoderBitDecode(240+(d<<4)+p)==0){d=((d<7)?9:11);b=(GLLib.m_outStream[A-x]&255);GLLib.m_outStream[A++]=gloft.casttobyte(b);continue}}else{var h=gloft.casttoint(null);if(GLLib.LZMA_RangeDecoderBitDecode(216+d)==0){h=w}else{if(GLLib.LZMA_RangeDecoderBitDecode(228+d)==0){h=v}else{h=u;u=v}v=w}w=x;x=h}f=GLLib.LZMA_LenDecode(1332,p);d=((d<7)?8:11)}else{u=v;v=w;w=x;d=((d<7)?7:10);f=GLLib.LZMA_LenDecode(818,p);var t=GLLib.LZMA_RangeDecoderBitTreeDecode(432+(((f<4)?f:3)<<6),6);if(t>=4){var C=(t>>1)-1;var B=(2|(t&1))<<C;if(t<14){x=B+GLLib.LZMA_RangeDecoderReverseBitTreeDecode(688+B-t-1,C)}else{x=B+(GLLib.LZMA_RangeDecoderDecodeDirectBits(C-4)<<4)+GLLib.LZMA_RangeDecoderReverseBitTreeDecode(802,4)}}else{x=t}++x}f+=2;do{b=(GLLib.m_outStream[A-x]&255);GLLib.m_outStream[A++]=gloft.casttobyte(b)}while(--f>0&&A<g)}}};GLLib.LZMA_Inflate_dup_javaioInputStreamI=function(b,a){if(true){var l=gloft.ArrayCreation([a+1],gloft.casttobyte(null));GLLib.Stream_ReadFully(b,l,0,a);var k=0;for(var f=0;f<4;++f){k+=(l[f+5]&255)<<(f<<3)}var j=l[0]&255;var h=gloft.casttoint(j/45);var g=j%45;var e=gloft.casttoint(g/9);var d=g%9;var c=1846+(768<<d+e);GLLib.m_outStream=gloft.ArrayCreation([k],gloft.casttobyte(null));GLLib.m_lzmaInternalData=gloft.ArrayCreation([c],gloft.casttoshort(null));GLLib.LZMA_Decode(c*2,d,e,h,l,k);GLLib.m_lzmaInternalData=null;GLLib.m_Buffer=null;if(true){java.lang.System.gc()}}};GLLib.LZMA_GetInflatedSize_dup_javaioInputStream=function(a){var e=0;if(true){var c=9;var d=gloft.ArrayCreation([c],gloft.casttobyte(null));GLLib.Stream_ReadFully(a,d,0,c);for(var b=0;b<4;++b){e+=(d[b+5]&255)<<(b<<3)}if(true){java.lang.System.gc()}}return e};GLLib.LZMA_Inflate_dup_aB=function(j){if(true){try{var l=gloft.ArrayCreation([j.length+1],gloft.casttobyte(null));java.lang.System.arraycopy(j,0,l,0,j.length);var a=0;for(var d=0;d<4;++d){a+=(l[d+5]&255)<<(d<<3)}var h=l[0]&255;var g=gloft.casttoint(h/45);var f=h%45;var e=gloft.casttoint(f/9);var c=f%9;var b=1846+(768<<c+e);GLLib.m_outStream=gloft.ArrayCreation([a],gloft.casttobyte(null));GLLib.m_lzmaInternalData=gloft.ArrayCreation([b],gloft.casttoshort(null));GLLib.LZMA_Decode(b*2,c,e,g,l,a);GLLib.m_lzmaInternalData=null;GLLib.m_Buffer=null;if(true){java.lang.System.gc()}}catch(k){GLLib.Dbg("LZMA_Inflate Exception: "+k)}}};GLLib.LZMA_GetInflatedSize_dup_aB=function(d){var c=0;if(true){try{for(var b=0;b<4;++b){c+=(d[b+5]&255)<<(b<<3)}}catch(a){GLLib.Dbg("LZMA_GetInflatedSize: "+a)}}return c};GLLib.setColor=function(c,b,a){if(c>255){GLLib.Assert(false,"setColor. red is bigger than 0xFF")}if(b>255){GLLib.Assert(false,"setColor. green is bigger than 0xFF")}if(a>255){GLLib.Assert(false,"setColor. blue is bigger than 0xFF")}GLLib.g.setColor(c<<16|b<<8|a)};GLLib.SetColor=function(a,d,c,b){if(a==null){GLLib.Assert(false,"setColor: Graphics parameter is null!")}if(d>255){GLLib.Assert(false,"setColor. red is bigger than 0xFF")}if(c>255){GLLib.Assert(false,"setColor. green is bigger than 0xFF")}if(b>255){GLLib.Assert(false,"setColor. blue is bigger than 0xFF")}a.setColor(d<<16|c<<8|b)};GLLib.GetClipX=function(c,a){if(true&&ASprite._customGraphics!=null){if(false&&a){return ASprite._customGraphicsClipY}return ASprite._customGraphicsClipX}else{if(false&&a){return c.getClipY()}return c.getClipX()}};GLLib.GetClipY=function(c,a){if(true&&ASprite._customGraphics!=null){if(false&&a){return ASprite._graphicsHeight-ASprite._customGraphicsClipX-ASprite._customGraphicsClipW}return ASprite._customGraphicsClipY}else{if(false&&a){return ASprite._graphicsHeight-c.getClipX()-c.getClipWidth()}return c.getClipY()}};GLLib.GetClipWidth=function(c,a){if(true&&ASprite._customGraphics!=null){if(false&&a){return ASprite._customGraphicsClipH}return ASprite._customGraphicsClipW}else{if(false&&a){return c.getClipHeight()}return c.getClipWidth()}};GLLib.GetClipHeight=function(c,a){if(true&&ASprite._customGraphics!=null){if(false&&a){return ASprite._customGraphicsClipW}return ASprite._customGraphicsClipH}else{if(false&&a){return c.getClipWidth()}return c.getClipHeight()}};GLLib.ClipRect=function(f,i,h,g,e,c){if(false&&c){var d=i;i=ASprite._graphicsHeight-h-e;h=d;var a=g;g=e;e=a}if(true&&ASprite._customGraphics!=null){ASprite._customGraphicsClipW+=ASprite._customGraphicsClipX;ASprite._customGraphicsClipH+=ASprite._customGraphicsClipY;g+=i;e+=h;ASprite._customGraphicsClipX=((ASprite._customGraphicsClipX>i)?ASprite._customGraphicsClipX:i);ASprite._customGraphicsClipY=((ASprite._customGraphicsClipY>h)?ASprite._customGraphicsClipY:h);ASprite._customGraphicsClipW=((ASprite._customGraphicsClipW<g)?ASprite._customGraphicsClipW:g);ASprite._customGraphicsClipH=((ASprite._customGraphicsClipH<e)?ASprite._customGraphicsClipH:e);ASprite._customGraphicsClipW-=ASprite._customGraphicsClipX;ASprite._customGraphicsClipH-=ASprite._customGraphicsClipY}else{f.setClip(i,h,g,e)}};GLLib.SetClip=function(g,c,a,d,m,l){if(false&&l){var e=c;c=ASprite._graphicsHeight-a-m;a=e;var k=d;d=m;m=k}if(false&&ASprite.s_resizeOn){var j=c;c=(false?(ASprite.s_resizeUseShifts?(j<<ASprite.s_resizeShiftX):(gloft.casttoint(j*ASprite.s_resizedWidth/ASprite.s_originalWidth))):j);var i=a;a=(false?(ASprite.s_resizeUseShifts?(i<<ASprite.s_resizeShiftY):(gloft.casttoint(i*ASprite.s_resizedHeight/ASprite.s_originalHeight))):i);var h=d;d=(false?(ASprite.s_resizeUseShifts?(h<<ASprite.s_resizeShiftX):(gloft.casttoint(h*ASprite.s_resizedWidth/ASprite.s_originalWidth))):h);var f=m;m=(false?(ASprite.s_resizeUseShifts?(f<<ASprite.s_resizeShiftY):(gloft.casttoint(f*ASprite.s_resizedHeight/ASprite.s_originalHeight))):f)}if(true&&ASprite._customGraphics!=null){ASprite._customGraphicsClipX=c;ASprite._customGraphicsClipY=a;ASprite._customGraphicsClipW=d;ASprite._customGraphicsClipH=m}else{g.setClip(c,a,d,m);if(true){g.setClip(c,a,d,m)}}};GLLib.DrawLine=function(e,a,j,i,h){if(false){var g=a;a=ASprite._graphicsHeight-j-1;j=g;var f=i;i=ASprite._graphicsHeight-h-1;h=f}if(true&&ASprite._customGraphics!=null){ASprite.DrawLineARGB(ASprite._customGraphics,ASprite._customGraphicsWidth,ASprite._customGraphicsHeight,ASprite._customGraphicsAlpha,a,j,i,h,-16777216|e.getColor())}else{if(false&&ASprite.s_resizeOn){var d=a;a=(false?(ASprite.s_resizeUseShifts?(d<<ASprite.s_resizeShiftX):(gloft.casttoint(d*ASprite.s_resizedWidth/ASprite.s_originalWidth))):d);var c=j;j=(false?(ASprite.s_resizeUseShifts?(c<<ASprite.s_resizeShiftY):(gloft.casttoint(c*ASprite.s_resizedHeight/ASprite.s_originalHeight))):c);var b=i;i=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftX):(gloft.casttoint(b*ASprite.s_resizedWidth/ASprite.s_originalWidth))):b);var m=h;h=(false?(ASprite.s_resizeUseShifts?(m<<ASprite.s_resizeShiftY):(gloft.casttoint(m*ASprite.s_resizedHeight/ASprite.s_originalHeight))):m)}if(false&&j>h){var l=a;a=i;i=l;var k=j;j=h;h=k}e.drawLine(a,j,i,h)}};GLLib.FillRect=function(e,a,k,i,h){if(false){var g=a;a=ASprite._graphicsHeight-k-h;k=g;var f=i;i=h;h=f}if(false&&ASprite.s_resizeOn){var d=a;a=(false?(ASprite.s_resizeUseShifts?(d<<ASprite.s_resizeShiftX):(gloft.casttoint(d*ASprite.s_resizedWidth/ASprite.s_originalWidth))):d);var c=k;k=(false?(ASprite.s_resizeUseShifts?(c<<ASprite.s_resizeShiftY):(gloft.casttoint(c*ASprite.s_resizedHeight/ASprite.s_originalHeight))):c);var b=i;i=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftX):(gloft.casttoint(b*ASprite.s_resizedWidth/ASprite.s_originalWidth))):b);var m=h;h=(false?(ASprite.s_resizeUseShifts?(m<<ASprite.s_resizeShiftY):(gloft.casttoint(m*ASprite.s_resizedHeight/ASprite.s_originalHeight))):m)}if(true&&ASprite._customGraphics!=null){ASprite.FillRectARGB(ASprite._customGraphics,ASprite._customGraphicsWidth,ASprite._customGraphicsHeight,ASprite._customGraphicsAlpha,a,k,i,h,-16777216|e.getColor())}else{if(false){var l=javax.microedition.lcdui.Image.createImage(i,h);var j=l.getGraphics();j.setColor(e.getColor());j.fillRect(0,0,i,h);e.drawImage(l,a,k,0)}else{e.fillRect(a,k,i,h)}}};GLLib.DrawRect=function(e,a,j,i,h){if(false){var g=a;a=GLLib.s_screenHeight-j-h-1;j=g;var f=i;i=h;h=f}if(false&&ASprite.s_resizeOn){var d=a;a=(false?(ASprite.s_resizeUseShifts?(d<<ASprite.s_resizeShiftX):(gloft.casttoint(d*ASprite.s_resizedWidth/ASprite.s_originalWidth))):d);var c=j;j=(false?(ASprite.s_resizeUseShifts?(c<<ASprite.s_resizeShiftY):(gloft.casttoint(c*ASprite.s_resizedHeight/ASprite.s_originalHeight))):c);var b=i;i=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftX):(gloft.casttoint(b*ASprite.s_resizedWidth/ASprite.s_originalWidth))):b);var k=h;h=(false?(ASprite.s_resizeUseShifts?(k<<ASprite.s_resizeShiftY):(gloft.casttoint(k*ASprite.s_resizedHeight/ASprite.s_originalHeight))):k)}if(true&&ASprite._customGraphics!=null){ASprite.DrawRectARGB(ASprite._customGraphics,ASprite._customGraphicsWidth,ASprite._customGraphicsHeight,ASprite._customGraphicsAlpha,a,j,i,h,-16777216|e.getColor())}else{e.drawRect(a,j,i,h)}};GLLib.DrawRoundRect=function(e,a,j,i,h,g,f){if(false){var d=a;a=GLLib.s_screenHeight-j-h;j=d;var c=i;i=h;h=c;var b=g;g=f;f=b}if(false&&ASprite.s_resizeOn){var o=a;a=(false?(ASprite.s_resizeUseShifts?(o<<ASprite.s_resizeShiftX):(gloft.casttoint(o*ASprite.s_resizedWidth/ASprite.s_originalWidth))):o);var m=j;j=(false?(ASprite.s_resizeUseShifts?(m<<ASprite.s_resizeShiftY):(gloft.casttoint(m*ASprite.s_resizedHeight/ASprite.s_originalHeight))):m);var l=i;i=(false?(ASprite.s_resizeUseShifts?(l<<ASprite.s_resizeShiftX):(gloft.casttoint(l*ASprite.s_resizedWidth/ASprite.s_originalWidth))):l);var k=h;h=(false?(ASprite.s_resizeUseShifts?(k<<ASprite.s_resizeShiftY):(gloft.casttoint(k*ASprite.s_resizedHeight/ASprite.s_originalHeight))):k)}e.drawRoundRect(a,j,i,h,g,f)};GLLib.FillRoundRect=function(e,a,j,i,h,g,f){if(false){var d=a;a=GLLib.s_screenHeight-j-h;j=d;var c=i;i=h;h=c;var b=g;g=f;f=b}if(false&&ASprite.s_resizeOn){var o=a;a=(false?(ASprite.s_resizeUseShifts?(o<<ASprite.s_resizeShiftX):(gloft.casttoint(o*ASprite.s_resizedWidth/ASprite.s_originalWidth))):o);var m=j;j=(false?(ASprite.s_resizeUseShifts?(m<<ASprite.s_resizeShiftY):(gloft.casttoint(m*ASprite.s_resizedHeight/ASprite.s_originalHeight))):m);var l=i;i=(false?(ASprite.s_resizeUseShifts?(l<<ASprite.s_resizeShiftX):(gloft.casttoint(l*ASprite.s_resizedWidth/ASprite.s_originalWidth))):l);var k=h;h=(false?(ASprite.s_resizeUseShifts?(k<<ASprite.s_resizeShiftY):(gloft.casttoint(k*ASprite.s_resizedHeight/ASprite.s_originalHeight))):k)}e.fillRoundRect(a,j,i,h,g,f)};GLLib.FillArc=function(e,a,j,i,h,g,f){if(false){var d=a;a=ASprite._graphicsHeight-j-h;j=d;var c=i;i=h;h=c;g-=90}if(false&&ASprite.s_resizeOn){var b=a;a=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftX):(gloft.casttoint(b*ASprite.s_resizedWidth/ASprite.s_originalWidth))):b);var m=j;j=(false?(ASprite.s_resizeUseShifts?(m<<ASprite.s_resizeShiftY):(gloft.casttoint(m*ASprite.s_resizedHeight/ASprite.s_originalHeight))):m);var l=i;i=(false?(ASprite.s_resizeUseShifts?(l<<ASprite.s_resizeShiftX):(gloft.casttoint(l*ASprite.s_resizedWidth/ASprite.s_originalWidth))):l);var k=h;h=(false?(ASprite.s_resizeUseShifts?(k<<ASprite.s_resizeShiftY):(gloft.casttoint(k*ASprite.s_resizedHeight/ASprite.s_originalHeight))):k)}e.fillArc(a,j,i,h,g,f)};GLLib.DrawArc=function(e,a,j,i,h,g,f){if(false){var d=a;a=ASprite._graphicsHeight-j-h;j=d;var c=i;i=h;h=c;g-=90}if(false&&ASprite.s_resizeOn){var b=a;a=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftX):(gloft.casttoint(b*ASprite.s_resizedWidth/ASprite.s_originalWidth))):b);var m=j;j=(false?(ASprite.s_resizeUseShifts?(m<<ASprite.s_resizeShiftY):(gloft.casttoint(m*ASprite.s_resizedHeight/ASprite.s_originalHeight))):m);var l=i;i=(false?(ASprite.s_resizeUseShifts?(l<<ASprite.s_resizeShiftX):(gloft.casttoint(l*ASprite.s_resizedWidth/ASprite.s_originalWidth))):l);var k=h;h=(false?(ASprite.s_resizeUseShifts?(k<<ASprite.s_resizeShiftY):(gloft.casttoint(k*ASprite.s_resizedHeight/ASprite.s_originalHeight))):k)}e.drawArc(a,j,i,h,g,f)};GLLib.DrawString=function(j,a,g,f){if(j==null){GLLib.Assert(false,"DrawString.str is null")}if((f&50)==0){GLLib.Assert(false,"DrawString.anchor miss vertical positionning")}if((f&13)==0){GLLib.Assert(false,"DrawString.anchor miss horizontal positionning")}var e=f;if((e&2)!=0){var d=e&-3;var i=GLLib.g;e=(d|64)}f=e;if(false&&ASprite.s_resizeOn){var c=a;a=(false?(ASprite.s_resizeUseShifts?(c<<ASprite.s_resizeShiftX):(gloft.casttoint(c*ASprite.s_resizedWidth/ASprite.s_originalWidth))):c);var b=g;g=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftY):(gloft.casttoint(b*ASprite.s_resizedHeight/ASprite.s_originalHeight))):b)}try{GLLib.g.drawString(j,a,g,f)}catch(h){h.printStackTrace()}};GLLib.DrawSubstring=function(l,a,i,h,g,f){if(l==null){GLLib.Assert(false,"DrawSubstring.str is null")}if((f&50)==0){GLLib.Assert(false,"DrawSubstring.anchor miss vertical positionning")}if((f&13)==0){GLLib.Assert(false,"DrawSubstring.anchor miss horizontal positionning")}if(a>=l.length){GLLib.Assert(false,"DrawSubstring.offset is invalid")}if(a<0){GLLib.Assert(false,"DrawSubstring.offset is negative")}if(a+i>l.length){GLLib.Assert(false,"DrawSubstring.len is invalid")}if(i<0){GLLib.Assert(false,"DrawSubstring.len is negative")}if(false&&ASprite.s_resizeOn){var e=h;h=(false?(ASprite.s_resizeUseShifts?(e<<ASprite.s_resizeShiftX):(gloft.casttoint(e*ASprite.s_resizedWidth/ASprite.s_originalWidth))):e);var d=g;g=(false?(ASprite.s_resizeUseShifts?(d<<ASprite.s_resizeShiftY):(gloft.casttoint(d*ASprite.s_resizedHeight/ASprite.s_originalHeight))):d)}var c=f;if((c&2)!=0){var b=c&-3;var k=GLLib.g;c=(b|64)}f=c;try{GLLib.g.drawSubstring(l,a,i,h,g,f)}catch(j){j.printStackTrace()}};GLLib.DrawChar=function(k,a,h,g){if((g&50)==0){GLLib.Assert(false,"DrawChar.anchor miss vertical positionning")}if((g&13)==0){GLLib.Assert(false,"DrawChar.anchor miss horizontal positionning")}if(false&&ASprite.s_resizeOn){var f=a;a=(false?(ASprite.s_resizeUseShifts?(f<<ASprite.s_resizeShiftX):(gloft.casttoint(f*ASprite.s_resizedWidth/ASprite.s_originalWidth))):f);var e=h;h=(false?(ASprite.s_resizeUseShifts?(e<<ASprite.s_resizeShiftY):(gloft.casttoint(e*ASprite.s_resizedHeight/ASprite.s_originalHeight))):e)}var d=g;if((d&2)!=0){var b=d&-3;var j=GLLib.g;d=(b|64)}g=d;try{GLLib.g.drawChar(k,a,h,g)}catch(i){i.printStackTrace()}};GLLib.DrawChars=function(h,a,g,f,e,d){if(h==null){GLLib.Assert(false,"DrawChars.data is null")}if((d&50)==0){GLLib.Assert(false,"DrawChars.anchor miss vertical positionning")}if((d&13)==0){GLLib.Assert(false,"DrawChars.anchor miss horizontal positionning")}if(a>=h.length){GLLib.Assert(false,"DrawChars.offset is invalid")}if(a<0){GLLib.Assert(false,"DrawChars.offset is negative")}if(a+g>h.length){GLLib.Assert(false,"DrawChars.len is invalid")}if(g<0){GLLib.Assert(false,"DrawChars.len is negative")}var c=d;if((c&2)!=0){var b=c&-3;var j=GLLib.g;c=(b|64)}d=c;try{GLLib.g.drawChars(h,a,g,f,e,d)}catch(i){i.printStackTrace()}};GLLib.DrawImage=function(h,c,D,v,s,K){if(c==null){GLLib.Assert(false,"DrawImage.data is null")}if((s&50)==0){GLLib.Assert(false,"DrawImage.anchor miss vertical positioning")}if((s&13)==0){GLLib.Assert(false,"DrawImage.anchor miss horizontal positioning")}var d=0;var t=0;if(true){d=c.getWidth();t=c.getHeight()}if(true&&ASprite._customGraphics!=null){var a=c.getWidth();var E=c.getHeight();if((s&8)==8){D-=a}else{if((s&1)==1){D-=a>>1}}if((s&32)==32){v-=E}else{if((s&2)==2){v-=E>>1}}var C=ASprite.GetPixelBuffer_int_dup_aI(null);var H=gloft.casttoint(C.length/a);var q=0;while(H!=0){H=((H<E-q)?H:(E-q));GLLib.GetRGB(c,C,0,a,0,q,a,H);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(h,C,0,a,D,v+q,a,H,false,true,0);q+=H}}else{if(true&&(d>400||t>240)){if((s&8)==8){D-=d}else{if((s&1)==1){D-=d>>1}}if((s&32)==32){v-=t}else{if((s&2)==2){v-=t>>1}}var o=400;var l=240;var G=d;var F=t;var g=0;var f=0;var e=D;var B=v;var A=o;var z=l;var y=gloft.casttoint(null);var J=gloft.casttoint(null);var x=gloft.casttoint(null);var w=gloft.casttoint(null);if(false&&!K){y=GLLib.GetClipHeight(h,true);J=ASprite._graphicsHeight-GLLib.GetClipY(h,true)-y;x=GLLib.GetClipX(h,true);w=GLLib.GetClipWidth(h,true)}else{J=GLLib.GetClipX(h,true);x=GLLib.GetClipY(h,true);y=GLLib.GetClipWidth(h,true);w=GLLib.GetClipHeight(h,true)}if(J>e){g=J-e;G-=g;e=J}if(J+y<e+G){G-=e+G-(J+y)}if(x>B){f=x-B;F-=f;B=x}if(x+w<B+F){F-=B+F-(x+w)}if(G<A){A=G}if(F<z){z=F}var u=A;var r=g;var p=G;var m=e;while(F>0){while(G>0){GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIIIZ(c,g,f,A,z,0,e,B,20,K);G-=A;g+=A;e+=A;if(G<A){A=G}}F-=z;f+=z;B+=z;if(F<z){z=F}e=m;g=r;A=u;G=p}}else{try{if(false&&K){GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIII(c,0,0,c.getWidth(),c.getHeight(),0,D,v,s)}else{h.drawImage(c,D,v,s)}}catch(I){I.printStackTrace()}}}};GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIII=function(i,a,h,g,f,e,d,c,b){GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIIIZ(i,a,h,g,f,e,d,c,b,true)};GLLib.DrawRegion_dup_javaxmicroeditionlcduiImageIIIIIIIIZ=function(l,a,j,i,h,g,f,e,d,p){if(l==null){GLLib.Assert(false,"DrawRegion.src is null")}if((d&50)==0){GLLib.Assert(false,"DrawRegion.anchor miss vertical positionning")}if((d&13)==0){GLLib.Assert(false,"DrawRegion.anchor miss horizontal positionning")}if(g<0){GLLib.Assert(false,"DrawRegion.transform is invalid")}if(g>7){GLLib.Assert(false,"DrawRegion.transform is invalid")}if(a<0){GLLib.Assert(false,"DrawRegion.x_src is negative")}if(j<0){GLLib.Assert(false,"DrawRegion.y_src is negative")}if(false&&p){var c=0;if((d&4)!=0){c|=16}if((d&8)!=0){c|=32}if((d&16)!=0){c|=8}if((d&32)!=0){c|=4}if((d&1)!=0){c|=2}if((d&2)!=0){c|=1}if(g==0){g=5}else{if(g==5){g=3}else{if(g==3){g=6}else{if(g==6){g=0}else{if(g==2){g=7}}}}}var q=f;f=ASprite._graphicsHeight-e;e=q;d=c}if(a+i>l.getWidth()){GLLib.Assert(false,"DrawRegion.x_src+width is bigger than source image")}if(j+h>l.getHeight()){GLLib.Assert(false,"DrawRegion.x_src+height is bigger than source image")}if(true){if(a<0){i+=a;a=0}if(a+i>=l.getWidth()){i+=l.getWidth()-(a+i)}if(j<0){h+=j;j=0}if(j+h>=l.getHeight()){h+=l.getHeight()-(j+h)}if(h<=0||i<=0){return}}if(false&&(g==5||g==6||g==7)){var o=h;var m=i;if((d&8)!=0){f-=o}else{if((d&1)!=0){f-=o>>1}}if((d&32)!=0){e-=m}if((d&2)!=0){e-=m>>1}d=20}try{if(false){GLLib.g.drawImage(javax.microedition.lcdui.Image.createImage(l,a,j,i,h,g),f,e,d)}else{GLLib.g.drawRegion(l,a,j,i,h,g,f,e,d)}}catch(k){GLLib.Assert(false,"DrawRegion.src cannot be the current graphic context")}};GLLib.FillTriangle=function(e,a,j,i,h,g,f){if(true){GLLib.DrawLine(e,a,j,i,h);GLLib.DrawLine(e,a,j,g,f);GLLib.DrawLine(e,g,f,i,h)}if(false){var d=a;a=ASprite._graphicsHeight-j-1;j=d;var c=i;i=ASprite._graphicsHeight-h-1;h=c;var b=g;g=ASprite._graphicsHeight-f-1;f=b}e.fillTriangle(a,j,i,h,g,f)};GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI=function(d,j,a,i,h,g,f,e,l,k,c){GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZIIZ(d,j,a,i,h,g,f,e,l,k,c,-1,true)};GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZIIZ=function(h,j,x,r,q,p,m,l,y,k,i,f,g){if(j==null){GLLib.Assert(false,"DrawRGB. invalid parameter: rgbData is null")}if(x<0){GLLib.Assert(false,"DrawRGB. invalid parameter: offset < 0")}if(m<0){GLLib.Assert(false,"DrawRGB. invalid parameter: width < 0")}if(l<0){GLLib.Assert(false,"DrawRGB. invalid parameter: height < 0")}if(r<=0){GLLib.Assert(false,"DrawRGB. invalid parameter: scanlength <= 0")}if(x+m+(l-1)*r>j.length){GLLib.Assert(false,"DrawRGB. invalid parameter(s) out of array bounds")}if(i!=0&&r!=m){GLLib.Assert(false,"DrawRGB. invalid parameter mix: flags are not 0 and scanlength is not the width!")}if(false&&g){var e=l;if((i&4)!=0){e=m;i&=-5;if((i&2)!=0){i&=-3}else{i|=2}if((i&1)!=0){i&=-2}else{i|=1}}else{i|=4}var w=q;q=ASprite._graphicsHeight-p-e;p=w}if(true&&ASprite._customGraphics!=null){if(x!=0){GLLib.Assert(false,"DrawRGB (graphics is pixel array): offset must be 0! Easy to add this if needed though...")}if(r!=m){GLLib.Assert(false,"DrawRGB (graphics is pixel array): scanlength must be equal to the width!")}if(false&&f>=0){ASprite.BlitARGB(ASprite._customGraphics,ASprite._customGraphicsWidth,ASprite._customGraphicsHeight,ASprite._customGraphicsAlpha,q,p,j,m,l,3,i,f)}else{ASprite.BlitARGB(ASprite._customGraphics,ASprite._customGraphicsWidth,ASprite._customGraphicsHeight,ASprite._customGraphicsAlpha,q,p,j,m,l,y?(k?2:1):0,i,-1)}}else{if(i!=0){var v=0;if((i&4)!=0){v=m;m=l;l=r;r=m}j=ASprite.TransformRGB_dup_aIIIIaI(j,m,l,i,null);if((i&4)!=0){l=v}}if(false){var o=j;var u=m;var t=l;var s=u;var z=o;var d=null;if(false){d=javax.microedition.lcdui.Image.createRGBImage(z,s,t,true)}else{d=javax.microedition.lcdui.Image.createRGBImage(z,s,t,y)}h.drawImage(d,q,p,0)}else{if(false||false){if(h==GLLib.s_lastPaintGraphics){GLLib.drawPartialRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIIZZ(h,j,r,x%r,gloft.casttoint(x/r),q,p,m,l,y,g)}else{GLLib.drawPartialRGB_dup_javaxmicroeditionlcduiGraphicsIIaIIIIIIIIZ(h,h.getClipX()+h.getClipWidth(),h.getClipY()+h.getClipHeight(),j,r,x%r,gloft.casttoint(x/r),q,p,m,l,y)}}else{if(true){var c=h.getTranslateX();var a=h.getTranslateY();h.translate(-c,-a);h.drawRGB(j,x,r,q+c,p+a,m,l,y);h.translate(c,a)}else{h.drawRGB(j,x,r,q,p,m,l,y)}}}}};GLLib.drawPartialRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIIZZ=function(d,j,a,i,h,g,f,e,c,l,k){if(false&&k){GLLib.drawPartialRGB_dup_javaxmicroeditionlcduiGraphicsIIaIIIIIIIIZ(d,GLLib.s_screenHeight,GLLib.s_screenWidth,j,a,i,h,g,f,e,c,l)}else{GLLib.drawPartialRGB_dup_javaxmicroeditionlcduiGraphicsIIaIIIIIIIIZ(d,GLLib.s_screenWidth,GLLib.s_screenHeight,j,a,i,h,g,f,e,c,l)}};GLLib.drawPartialRGB_dup_javaxmicroeditionlcduiGraphicsIIaIIIIIIIIZ=function(f,x,o,j,l,k,i,h,g,e,d,B){var c=0;var a=0;if(true){c=f.getTranslateX();a=f.getTranslateY();f.translate(-c,-a);h+=c;g+=a}var u=k+i*l;if(f==GLLib.s_lastPaintGraphics||true){if(h>=x||h+e<=0||g>=o||g+d<=0){return}if(true){var z=GLLib.GetClipX(GLLib.g,true);var y=GLLib.GetClipY(GLLib.g,true);var A=GLLib.GetClipWidth(GLLib.g,true);var v=GLLib.GetClipHeight(GLLib.g,true);if(z>=x||z+A<=0||y>=o||y+v<=0){return}}if(h<=0){u-=h;e+=h;h=0}if(h+e>=x){e=x-h}if(g+d>=o){d=o-g}if(g<=0){u-=g*l;d+=g;g=0}}if(true&&u>0){var w=ASprite.GetPixelBuffer_int_dup_aI(j);if(w.length<j.length-u){if(w.length<l){GLLib.Assert(false,"drawPartialRGB: Buffer being used for useDrawRGBOffsetFix is not large enough for even 1 scanline! Please increase the size of the TMP buffer!")}var t=gloft.casttoint(w.length/l);var s=gloft.casttoint(d/t)+((d%t==0)?-1:0);var r=l*t;var q=r-u%l;var p=g+d;while(s-->0){java.lang.System.arraycopy(j,u,w,0,q);f.drawRGB(w,0,l,h,g,e,t,B);g+=t;u+=r}if(g+t>p){var m=g+t-p;t-=m;q-=l*m}java.lang.System.arraycopy(j,u,w,0,q);d=t}else{java.lang.System.arraycopy(j,u,w,0,j.length-u)}j=w;u=0}f.drawRGB(j,u,l,h,g,e,d,B);if(true){f.translate(c,a)}};GLLib.PlatformRequest=function(b){try{return GLLib.s_application.platformRequest(b)}catch(a){GLLib.Dbg("PlatformRequest.Failed with url "+b+" with exception "+a.getMessage());return false}};GLLib.Vibrate=function(b){if(b<0){GLLib.Assert(false,"Vibrate.duration is negative")}try{if(GLLib.m_nextTimeVibrationAllowed<GLLib.s_game_timeWhenFrameStart){if(false){GLLib.s_display.flashBacklight(b)}else{GLLib.s_display.vibrate(b)}GLLib.m_nextTimeVibrationAllowed=GLLib.s_game_timeWhenFrameStart+200}}catch(a){a.printStackTrace()}};GLLib.FixImageLackingTransparencyBug=function(g){var e=g.getWidth();var b=g.getHeight();var h=e*b;var a=javax.microedition.lcdui.Image.createImage(e,b);var c=a.getGraphics();c.setColor(16711935);c.fillRect(0,0,e,b);c.drawImage(g,0,0,0);var f=ASprite.temp_int;if(f==null||f.length<h){f=gloft.ArrayCreation([e*b],gloft.casttoint(null))}GLLib.GetRGB(a,f,0,e,0,0,e,b);for(var d=h-1;d>=0;--d){if((f[d]&16777215)==16711935){f[d]=16711935}}return javax.microedition.lcdui.Image.createRGBImage(f,e,b,true)};GLLib.GetRGB=function(i,h,a,g,f,e,d,c){i.getRGB(h,a,g,f,e,d,c);if(false){var b=a+d*c;while(b-->a){if((h[b]&16777215)==16711935){h[b]=16711935}}}};GLLib.ToUpperCase=function(a,b){if(b==11){a=a.replace("i","İ")}a=a.toUpperCase();if(false){a=GLLib.Text_FormatText(a,b)}return a};GLLib.Mem_SetByte=function(d,c,a){d[c++]=a;return c};GLLib.Mem_SetShort=function(c,b,a){c[b++]=gloft.casttobyte((a&255));c[b++]=gloft.casttobyte((a>>>8&255));return b};GLLib.Mem_SetInt=function(c,b,a){c[b++]=gloft.casttobyte((a&255));c[b++]=gloft.casttobyte((a>>>8&255));c[b++]=gloft.casttobyte((a>>>16&255));c[b++]=gloft.casttobyte((a>>>24&255));return b};GLLib.Mem_SetLong=function(c,b,a){c[b++]=gloft.casttobyte((a&255));c[b++]=gloft.casttobyte((a>>>8&255));c[b++]=gloft.casttobyte((a>>>16&255));c[b++]=gloft.casttobyte((a>>>24&255));c[b++]=gloft.casttobyte((a>>>32&255));c[b++]=gloft.casttobyte((a>>>40&255));c[b++]=gloft.casttobyte((a>>>48&255));c[b++]=gloft.casttobyte((a>>>56&255));return b};GLLib.Mem_GetByte=function(b,a){return b[a]};GLLib.Mem_GetShort=function(b,a){return gloft.casttoshort(((b[a++]&255)|(b[a++]&255)<<8))};GLLib.Mem_GetInt=function(b,a){return(b[a++]&255)|(b[a++]&255)<<8|(b[a++]&255)<<16|(b[a++]&255)<<24};GLLib.Mem_GetLong=function(b,a){return(b[a++]&255)|(b[a++]&255)<<8|(b[a++]&255)<<16|(b[a++]&255)<<24|(b[a++]&255)<<32|(b[a++]&255)<<40|(b[a++]&255)<<48|(b[a++]&255)<<56};GLLib.Mem_ArrayCopy=function(d,e,c,b,a){java.lang.System.arraycopy(d,e,c,b,a)};GLLib.Mem_SetArray=function(c,b,a){GLLib.Mem_ArrayCopy(a,0,c,b,a.length);return b+a.length};GLLib.Mem_GetArray=function(c,b,a){GLLib.Mem_ArrayCopy(c,b,a,0,a.length);return b+a.length};GLLib.Mem_FillArray=function(d,c){var b=d.length;if(b>0){d[0]=c}for(var a=1;a<b;a+=a){java.lang.System.arraycopy(d,0,d,a,(b-a<a)?(b-a):a)}};GLLib.Mem_ReadArray=function(a){if(a==null){GLLib.Assert(false,"Mem_ReadArray.is is null")}var m=null;try{var h=GLLib.Stream_Read(a);var p=h>>4;var g=h&7;var f=gloft.casttoint(null);if((h&8)!=0){f=GLLib.Stream_Read16(a)}else{f=GLLib.Stream_Read(a)}switch(g){case 0:var d=gloft.ArrayCreation([f],gloft.casttobyte(null));for(var u=0;u<f;++u){d[u]=gloft.casttobyte(GLLib.Stream_Read(a))}m=d;break;case 1:var x=gloft.ArrayCreation([f],gloft.casttoshort(null));if(p==0){for(var t=0;t<f;++t){x[t]=gloft.casttobyte(GLLib.Stream_Read(a))}}else{for(var r=0;r<f;++r){x[r]=gloft.casttoshort(GLLib.Stream_Read16(a))}}m=x;break;case 2:var w=gloft.ArrayCreation([f],gloft.casttoint(null));if(p==0){for(var q=0;q<f;++q){w[q]=gloft.casttobyte(GLLib.Stream_Read(a))}}else{if(p==1){for(var e=0;e<f;++e){w[e]=gloft.casttoshort(GLLib.Stream_Read16(a))}}else{for(var c=0;c<f;++c){w[c]=GLLib.Stream_Read32(a)}}}m=w;break;default:var s=null;switch(g&3){case 0:if(p==2){s=gloft.ArrayCreation([f],gloft.casttobyte(null));break}s=gloft.ArrayCreation([f],gloft.casttobyte(null));break;case 1:if(p==2){s=gloft.ArrayCreation([f],gloft.casttoshort(null));break}s=gloft.ArrayCreation([f],gloft.casttoshort(null));break;default:if(p==2){s=gloft.ArrayCreation([f],gloft.casttoint(null));break}s=gloft.ArrayCreation([f],gloft.casttoint(null));break}for(var b=0;b<f;++b){s[b]=GLLib.Mem_ReadArray(a)}m=s;break}}catch(v){GLLib.Assert(false,"Mem_ReadArray.IO error")}return m};GLLib.Stream_Read=function(a){var b=a.read();if(b>=0){++GLLib.Stream_readOffset}return b};GLLib.Stream_Read16=function(a){return(GLLib.Stream_Read(a)&255)|(GLLib.Stream_Read(a)&255)<<8};GLLib.Stream_Read32=function(a){return(GLLib.Stream_Read(a)&255)|(GLLib.Stream_Read(a)&255)<<8|((GLLib.Stream_Read(a)&255)<<16|(GLLib.Stream_Read(a)&255)<<24)};GLLib.Stream_ReadFully=function(b,h,g,e){if(h==null){GLLib.Assert(false,"Stream_ReadFully.array is null")}if(g<0){GLLib.Assert(false,"Stream_ReadFully.offset is negative")}if(e<0){GLLib.Assert(false,"Stream_ReadFully.length is negative")}if(g+e>h.length){GLLib.Assert(false,"Stream_ReadFully.offset+length is bigger than array size")}var a=g;var d=e;try{while(d>0){var f=b.read(h,a,d);if(f<0){GLLib.Assert(false,"Pack_ReadFully.EOF")}d-=f;a+=f}}catch(c){GLLib.Assert(false,"Stream_ReadFully.IO exception occured")}GLLib.Stream_readOffset+=e;return e};GLLib.IntToBigEndian=function(c,b,a){b[a]=gloft.casttobyte((c>>>24));b[++a]=gloft.casttobyte((c>>>16));b[++a]=gloft.casttobyte((c>>>8));b[++a]=gloft.casttobyte(c)};GLLib.GetDeviceId=function(){var b=null;if(true){try{b=javax.bluetooth.LocalDevice.getLocalDevice().getBluetoothAddress()}catch(a){GLLib.Dbg("getDeviceId exception: "+a.getMessage());a.printStackTrace()}}return b};GLLib.ToByteArray_dup_aI=function(a){return GLLib.ToByteArray_dup_aIZaB(a,false,null)};GLLib.ToByteArray_dup_aIZaB=function(g,a,e){var f=g.length<<2;if(a){var d=g[g.length-1];if(d>f){return null}f=d}if(e==null){e=gloft.ArrayCreation([f],gloft.casttobyte(null))}for(var c=0;c<f;++c){e[c]=gloft.casttobyte((g[c>>>2]>>>((c&3)<<3)&255))}return e};GLLib.ToIntArray_dup_aB=function(a){return GLLib.ToIntArray_dup_aBZaI(a,false,null)};GLLib.ToIntArray_dup_aBZaI=function(j,a,f){var h=((j.length&3)==0)?(j.length>>>2):((j.length>>>2)+1);if(a){if(f==null){f=gloft.ArrayCreation([h+1],gloft.casttoint(null))}f[h]=j.length}else{if(f==null){f=gloft.ArrayCreation([h],gloft.casttoint(null))}}for(var g=j.length,d=0;d<g;++d){var e=f;var c=d>>>2;e[c]|=(255&j[d])<<((d&3)<<3)}return f};GLLib.XXTEA_Encrypt_dup_aBjavalangString=function(c,b){var a=null;if(!"".equals(b)&&b!=null){a=b.getBytes()}return GLLib.XXTEA_Encrypt_dup_aBaB(c,a)};GLLib.XXTEA_Encrypt_dup_aBaB=function(b,a){if(b.length==0){return b}return GLLib.ToByteArray_dup_aIZaB(GLLib.XXTEA_Encrypt_dup_aIaI(GLLib.ToIntArray_dup_aBZaI(b,true,null),GLLib.ToIntArray_dup_aBZaI(a,false,null)),false,null)};GLLib.XXTEA_Decrypt_dup_aBjavalangString=function(c,b){var a=null;if(!"".equals(b)&&b!=null){a=b.getBytes()}return GLLib.XXTEA_Decrypt_dup_aBaB(c,a)};GLLib.XXTEA_Decrypt_dup_aBaB=function(b,a){if(b==null||b.length==0){return b}return GLLib.ToByteArray_dup_aIZaB(GLLib.XXTEA_Decrypt_dup_aIaI(GLLib.ToIntArray_dup_aBZaI(b,false,null),GLLib.ToIntArray_dup_aBZaI(a,false,null)),true,null)};GLLib.XXTEA_Encrypt_dup_aIjavalangString=function(c,b){var a=null;if(!"".equals(b)&&b!=null){a=b.getBytes()}return GLLib.XXTEA_Encrypt_dup_aIaI(c,GLLib.ToIntArray_dup_aB(a))};GLLib.XXTEA_Encrypt_dup_aIaI=function(l,s){var a=l.length-1;if(a<1){return l}if(s.length<4){var r=gloft.ArrayCreation([4],gloft.casttoint(null));java.lang.System.arraycopy(s,0,r,0,s.length);s=r}var k=l[a];var j=l[0];var h=-1640531527;var g=0;var e=6+gloft.casttoint(52/(a+1));while(e-->0){g+=h;var d=g>>>2&3;var f=gloft.casttoint(null);for(f=0;f<a;++f){var c=l[f+1];var b=f;var q=l[b]+((k>>>5^c<<2)+(c>>>3^k<<4)^(g^c)+(s[(f&3)^d]^k));l[b]=q;k=q}var p=l[0];var o=a;var m=l[o]+((k>>>5^p<<2)+(p>>>3^k<<4)^(g^p)+(s[(f&3)^d]^k));l[o]=m;k=m}return l};GLLib.XXTEA_Decrypt_dup_aIjavalangString=function(c,b){var a=null;if(!"".equals(b)&&b!=null){a=b.getBytes()}return GLLib.XXTEA_Decrypt_dup_aIaI(c,GLLib.ToIntArray_dup_aB(a))};GLLib.XXTEA_Decrypt_dup_aIaI=function(o,s){var a=o.length-1;if(a<1){return o}if(s.length<4){var r=gloft.ArrayCreation([4],gloft.casttoint(null));java.lang.System.arraycopy(s,0,r,0,s.length);s=r}var m=o[a];var l=o[0];for(var k=-1640531527,h=(6+gloft.casttoint(52/(a+1)))*k;h!=0;h-=k){var g=h>>>2&3;var f=gloft.casttoint(null);for(f=a;f>0;--f){var e=o[f-1];var d=f;var c=o[d]-((e>>>5^l<<2)+(l>>>3^e<<4)^(h^l)+(s[(f&3)^g]^e));o[d]=c;l=c}var b=o[a];var q=0;var p=o[q]-((b>>>5^l<<2)+(l>>>3^b<<4)^(h^l)+(s[(f&3)^g]^b));o[q]=p;l=p}return o};GLLib.Text_LoadTextFromPack_INI_dup_javalangStringI=function(b,c){if(false){GLLib.Text_FreeIndex(c)}else{GLLib.Text_FreeAll()}GLLib.Pack_Open(b);GLLib.Pack_PositionAtData(c);if(false){if(GLLib.text_multiple_array_map==null){GLLib.text_multiple_array_map=gloft.ArrayCreation([32],gloft.casttoint(null));for(var a=0;a<32;++a){GLLib.text_multiple_array_map[a]=-1}GLLib.text_multiple_arrays=gloft.ArrayCreation([32],gloft.casttobyte(null));GLLib.text_multiple_arrayOffsets=gloft.ArrayCreation([32],gloft.casttoint(null));GLLib.text_multiple_nbStrings=gloft.ArrayCreation([32],gloft.casttoint(null));if(true){GLLib.text_multiple_stringCacheArrays=gloft.ArrayCreation([32],null)}}if(true&&GLLib.s_pack_lastDataIsCompress){GLLib.text_multiple_array_map[c]=GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(c)))}else{GLLib.text_multiple_array_map[c]=GLLib.Text_LoadTextFromStream(GLLib.s_pack_is)}GLLib.Pack_Close();if(true){GLLib.Text_BuildStringCache_dup_I(GLLib.text_multiple_array_map[c])}}else{if(true&&GLLib.s_pack_lastDataIsCompress){GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(c)))}else{GLLib.Text_LoadTextFromStream(GLLib.s_pack_is)}GLLib.Pack_Close();if(true){GLLib.Text_BuildStringCache_dup_()}else{if(false){GLLib.Text_StrPoolInit()}}}};GLLib.Text_LoadAdditionalTextPack_INI=function(a,b){if(!false){GLLib.Assert(false,"GLLibConfig.text_useMultipleTextPacks is set to FALSE, you cannot use Text_LoadAdditionalTextPack_INI()")}else{if(GLLib.text_multiple_array_map==null||GLLib.text_multiple_arrays==null){GLLib.Assert(false,"WARNING!!! You must load the first TEXT PACK with Text_LoadTextFromPack! ");return}GLLib.Pack_Open(a);GLLib.Pack_PositionAtData(b);if(true&&GLLib.s_pack_lastDataIsCompress){GLLib.text_multiple_array_map[b]=GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(b)))}else{GLLib.text_multiple_array_map[b]=GLLib.Text_LoadTextFromStream(GLLib.s_pack_is)}GLLib.Pack_Close();if(true){GLLib.Text_BuildStringCache_dup_I(GLLib.text_multiple_array_map[b])}}};GLLib.Text_LoadTextFromPack_INI_dup_javalangStringII=function(m,b,g){if(false){GLLib.Text_LoadTextFromPack_dup_javalangStringI(m,b);GLLib.Text_LoadAdditionalTextPack_INI(m,g)}else{GLLib.Text_FreeAll();GLLib.Pack_Open(m);GLLib.Pack_PositionAtData(b);if(true&&GLLib.s_pack_lastDataIsCompress){GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(b)))}else{GLLib.s_pack_curOffset+=GLLib.Text_LoadTextFromStream(GLLib.s_pack_is)}var l=GLLib.text_nbString;var a=GLLib.text_arrayOffset;var e=GLLib.text_array;GLLib.Text_FreeAll();GLLib.Pack_PositionAtData(g);if(true&&GLLib.s_pack_lastDataIsCompress){GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(g)))}else{GLLib.s_pack_curOffset+=GLLib.Text_LoadTextFromStream(GLLib.s_pack_is)}var h=GLLib.text_nbString;var d=GLLib.text_arrayOffset;var k=GLLib.text_array;for(var c=1;c<h+1;++c){var j=d;var f=c;j[f]+=a[l]}GLLib.Text_FreeAll();GLLib.Pack_Close();GLLib.text_nbString=l+h;java.lang.System.arraycopy(a,0,GLLib.text_arrayOffset=gloft.ArrayCreation([GLLib.text_nbString+1],gloft.casttoint(null)),0,a.length);java.lang.System.arraycopy(d,1,GLLib.text_arrayOffset,a.length,d.length-1);java.lang.System.arraycopy(e,0,GLLib.text_array=gloft.ArrayCreation([GLLib.text_arrayOffset[GLLib.text_nbString]],gloft.casttobyte(null)),0,e.length);java.lang.System.arraycopy(k,0,GLLib.text_array,e.length,k.length);if(true){GLLib.Text_BuildStringCache_dup_()}else{if(false){GLLib.Text_StrPoolInit()}}}};GLLib.Text_LoadTextFromPack_CORE_dup_javalangStringI=function(b,d){if(false){GLLib.Text_FreeIndex(d)}else{GLLib.Text_FreeAll()}if(false&&GLLib.text_multiple_array_map==null){GLLib.text_multiple_array_map=gloft.ArrayCreation([32],gloft.casttoint(null));for(var a=0;a<32;++a){GLLib.text_multiple_array_map[a]=-1}GLLib.text_multiple_arrays=gloft.ArrayCreation([32],gloft.casttobyte(null));GLLib.text_multiple_arrayOffsets=gloft.ArrayCreation([32],gloft.casttoint(null));GLLib.text_multiple_nbStrings=gloft.ArrayCreation([32],gloft.casttoint(null));if(true){GLLib.text_multiple_stringCacheArrays=gloft.ArrayCreation([32],null)}}GLLib.Pack_Open(b);var c=GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(d)));if(false){GLLib.text_multiple_array_map[d]=c;if(true){GLLib.Text_BuildStringCache_dup_I(GLLib.text_multiple_array_map[d])}}else{if(true){GLLib.Text_BuildStringCache_dup_()}else{if(false){GLLib.Text_StrPoolInit()}}}GLLib.Pack_Close()};GLLib.Text_LoadAdditionalTextPack_CORE=function(a,b){if(!false){GLLib.Assert(false,"GLLibConfig.text_useMultipleTextPacks is set to FALSE, you cannot use Text_LoadAdditionalTextPack_CORE()")}else{if(GLLib.text_multiple_array_map==null||GLLib.text_multiple_arrays==null){GLLib.Assert(false,"WARNING!!! You must load the first TEXT PACK with Text_LoadTextFromPack! ");return}GLLib.Pack_Open(a);GLLib.text_multiple_array_map[b]=GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(b)));GLLib.Pack_Close();if(true){GLLib.Text_BuildStringCache_dup_I(GLLib.text_multiple_array_map[b])}}};GLLib.Text_LoadTextFromPack_CORE_dup_javalangStringII=function(m,b,g){if(false){GLLib.Text_LoadTextFromPack_CORE_dup_javalangStringI(m,b);GLLib.Text_LoadAdditionalTextPack_CORE(m,g)}else{GLLib.Text_FreeAll();GLLib.Pack_Open(m);GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(b)));var l=GLLib.text_nbString;var a=GLLib.text_arrayOffset;var e=GLLib.text_array;GLLib.Text_FreeAll();GLLib.Text_LoadTextFromStream(new java.io.ByteArrayInputStream(GLLib.Pack_ReadData(g)));var h=GLLib.text_nbString;var d=GLLib.text_arrayOffset;var k=GLLib.text_array;for(var c=1;c<h+1;++c){var j=d;var f=c;j[f]+=a[l]}GLLib.Text_FreeAll();GLLib.Pack_Close();GLLib.text_nbString=l+h;java.lang.System.arraycopy(a,0,GLLib.text_arrayOffset=gloft.ArrayCreation([GLLib.text_nbString+1],gloft.casttoint(null)),0,a.length);java.lang.System.arraycopy(d,1,GLLib.text_arrayOffset,a.length,d.length-1);java.lang.System.arraycopy(e,0,GLLib.text_array=gloft.ArrayCreation([GLLib.text_arrayOffset[GLLib.text_nbString]],gloft.casttobyte(null)),0,e.length);java.lang.System.arraycopy(k,0,GLLib.text_array,e.length,k.length);if(true){GLLib.Text_BuildStringCache_dup_()}else{if(false){GLLib.Text_StrPoolInit()}}}};GLLib.Text_LoadTextFromStream=function(b){if(false){var e=0;try{if(GLLib.text_multiple_nbStrings==null){GLLib.Assert(false,"Text_LoadTextFromStream: text_multiple_nbStrings is null")}e=GLLib.Stream_Read(b);if(e>=32){GLLib.Assert(false,"Text_LoadTextFromStream: Trying to load a tab higher than GLLibConfig.text_maxPacks!")}GLLib.text_multiple_nbStrings[e]=GLLib.Stream_Read32(b);if(GLLib.text_multiple_nbStrings[e]>1<<10){GLLib.Assert(false,"WARNING! You are loading a text pack with more than "+(1<<10)+" strings! All extras will be ignored");GLLib.text_multiple_nbStrings[e]=1<<10}GLLib.text_multiple_arrayOffsets[e]=gloft.ArrayCreation([GLLib.text_multiple_nbStrings[e]+1],gloft.casttoint(null));for(var d=1;d<GLLib.text_multiple_nbStrings[e]+1;++d){GLLib.text_multiple_arrayOffsets[e][d]=GLLib.Stream_Read32(b)}GLLib.Stream_ReadFully(b,GLLib.text_multiple_arrays[e]=gloft.ArrayCreation([GLLib.text_multiple_arrayOffsets[e][GLLib.text_multiple_nbStrings[e]]],gloft.casttobyte(null)),0,GLLib.text_multiple_arrays[e].length)}catch(c){GLLib.Dbg("exception during loading "+c)}return e}try{GLLib.text_nbString=GLLib.Stream_Read32(b);GLLib.text_arrayOffset=gloft.ArrayCreation([GLLib.text_nbString+1],gloft.casttoint(null));for(var a=1;a<GLLib.text_nbString+1;++a){GLLib.text_arrayOffset[a]=GLLib.Stream_Read32(b)}GLLib.Stream_ReadFully(b,GLLib.text_array=gloft.ArrayCreation([GLLib.text_arrayOffset[GLLib.text_nbString]],gloft.casttobyte(null)),0,GLLib.text_array.length)}catch(c){c.printStackTrace()}return GLLib.text_array.length+(GLLib.text_nbString+1<<2)};GLLib.Text_LoadTextFromPack_dup_javalangStringI=function(a,b){if(false){GLLib.Text_LoadTextFromPack_CORE_dup_javalangStringI(a,b)}else{GLLib.Text_LoadTextFromPack_INI_dup_javalangStringI(a,b)}};GLLib.Text_LoadAdditionalTextPack=function(a,b){if(false){GLLib.Text_LoadAdditionalTextPack_CORE(a,b)}else{GLLib.Text_LoadAdditionalTextPack_INI(a,b)}};GLLib.Text_LoadTextFromPack_dup_javalangStringII=function(b,c,a){if(false){GLLib.Text_LoadTextFromPack_CORE_dup_javalangStringII(b,c,a)}else{GLLib.Text_LoadTextFromPack_INI_dup_javalangStringII(b,c,a)}};GLLib.Text_FromUTF8=function(g,f,d){var e=gloft.ArrayCreation([d],gloft.casttochar(null));var b=0;var c=f;var a=f+d;while(c<a){if((g[c]&128)==0){e[b++]=gloft.casttochar(g[c++])}else{if((g[c]&224)==224&&c+2<a&&(g[c+1]&192)==128&&(g[c+2]&192)==128){e[b++]=gloft.casttochar(((g[c]&15)<<12|(g[c+1]&63)<<6|(g[c+2]&63)));c+=3}else{if((g[c]&192)!=192||c+1>=a||(g[c+1]&192)!=128){return""}e[b++]=gloft.casttochar(((g[c]&31)<<6|(g[c+1]&63)));c+=2}}}return new java.lang.String(e,0,b)};GLLib.Text_StrPoolInit=function(){if(50>255){GLLib.Assert(false,"text_stringCachePoolSize is "+50+" but should be <= 255")}if(GLLib.s_text_strPool_strings==null){GLLib.s_text_strPool_strings=gloft.ArrayCreation([50],null);GLLib.s_text_strPool_stringIds=gloft.ArrayCreation([50],gloft.casttoint(null))}if(GLLib.s_text_strPool_stringPoolPos==null||GLLib.s_text_strPool_stringPoolPos.length<GLLib.text_nbString){GLLib.s_text_strPool_stringPoolPos=gloft.ArrayCreation([GLLib.text_nbString],gloft.casttobyte(null))}for(var b=0;b<GLLib.s_text_strPool_stringIds.length;++b){GLLib.s_text_strPool_stringIds[b]=-1}for(var a=0;a<GLLib.s_text_strPool_stringPoolPos.length;++a){GLLib.s_text_strPool_stringPoolPos[a]=-1}GLLib.s_text_strPool_pointer=0};GLLib.Text_GetString=function(h){if(GLLib.text_encoding==null){GLLib.Assert(false,"Text_GetString.current text encoding is not set, use Text_SetEncoding()")}if(false){var f=h>>10;var c=h&(1<<10)-1;if(true&&GLLib.text_multiple_stringCacheArrays!=null&&GLLib.text_multiple_stringCacheArrays[f]!=null){return GLLib.text_multiple_stringCacheArrays[f][c]}try{var b=GLLib.text_multiple_arrayOffsets[f][c+1]-GLLib.text_multiple_arrayOffsets[f][c];if(b==0){return null}if(!false){return new java.lang.String(GLLib.text_multiple_arrays[f],GLLib.text_multiple_arrayOffsets[f][c],b,GLLib.text_encoding)}if(!GLLib.text_encoding.equals("UTF-8")){return new java.lang.String(GLLib.text_multiple_arrays[f],GLLib.text_multiple_arrayOffsets[f][c],b,GLLib.text_encoding)}return GLLib.Text_FromUTF8(GLLib.text_multiple_arrays[f],GLLib.text_multiple_arrayOffsets[f][c],b)}catch(e){GLLib.Assert(false,"Text_GetString.unable to create string, might try another encoding."+e);return null}}if(true&&GLLib.text_stringCacheArray!=null){return GLLib.text_stringCacheArray[h]}if(false&&GLLib.s_text_strPool_stringPoolPos[h]!=-1){return GLLib.s_text_strPool_strings[GLLib.s_text_strPool_stringPoolPos[h]&255]}try{var a=GLLib.text_arrayOffset[h+1]-GLLib.text_arrayOffset[h];if(a==0){return null}var d=null;if(false){if(!GLLib.text_encoding.equals("UTF-8")){d=new java.lang.String(GLLib.text_array,GLLib.text_arrayOffset[h],a,GLLib.text_encoding)}else{d=GLLib.Text_FromUTF8(GLLib.text_array,GLLib.text_arrayOffset[h],a)}}else{d=new java.lang.String(GLLib.text_array,GLLib.text_arrayOffset[h],a,GLLib.text_encoding)}if(false){GLLib.s_text_strPool_strings[GLLib.s_text_strPool_pointer]=d;if(GLLib.s_text_strPool_stringIds[GLLib.s_text_strPool_pointer]!=-1){GLLib.s_text_strPool_stringPoolPos[GLLib.s_text_strPool_stringIds[GLLib.s_text_strPool_pointer]]=-1}GLLib.s_text_strPool_stringPoolPos[h]=gloft.casttobyte(GLLib.s_text_strPool_pointer);GLLib.s_text_strPool_stringIds[GLLib.s_text_strPool_pointer]=h;++GLLib.s_text_strPool_pointer;if(GLLib.s_text_strPool_pointer>=50){GLLib.s_text_strPool_pointer=0}}return d}catch(g){GLLib.Assert(false,"Text_GetString.unable to create string, might try another encoding."+g);return null}};GLLib.Text_GetNbString_dup_=function(){if(!false){return GLLib.text_nbString}if(GLLib.text_multiple_nbStrings==null){GLLib.Dbg("No strings loaded!");return 0}var b=0;for(var a=0;a<32;++a){b+=GLLib.text_multiple_nbStrings[a]}return b};GLLib.Text_GetNbString_dup_I=function(a){if(!false){GLLib.Assert(false,"WARNING! Trying to call Text_GetNbString(int index) while GLLibConfig.text_useMultipleTextPacks is false! Did you mean to call Text_GetNbString()?");return 0}if(GLLib.text_multiple_nbStrings==null||GLLib.text_multiple_array_map==null){GLLib.Dbg("No strings loaded!");return 0}return GLLib.text_multiple_nbStrings[GLLib.text_multiple_array_map[a]]};GLLib.Text_BuildStringCache_dup_=function(){if(false){for(var c=0;c<32;++c){GLLib.Text_BuildStringCache_dup_I(c)}}else{var e=0;var d=gloft.ArrayCreation([GLLib.text_nbString],null);for(var a=0;a<GLLib.text_nbString;++a){d[a]=GLLib.Text_GetString(a);if(d[a]!=null){e+=d[a].length}}GLLib.text_stringCacheArray=d;GLLib.text_arrayOffset=null;GLLib.text_array=null;if(true){java.lang.System.gc()}var b=e*2;if(b>15360){GLLib.Warning("you are caching "+GLLib.Text_GetNbString_dup_()+" string, this comsume "+b+" byte of memory, you may consider dividing your text in smaller text package")}}};GLLib.Text_BuildStringCache_dup_I=function(e){if(!false){GLLib.Assert(false,"WARNING! Trying to call buildStringCache with an index! You can only do that when text_useMultipleTextPacks is true")}else{if(GLLib.text_multiple_nbStrings[e]==0){return}var c=0;var d=gloft.ArrayCreation([GLLib.text_multiple_nbStrings[e]],null);for(var b=0;b<GLLib.text_multiple_nbStrings[e];++b){d[b]=GLLib.Text_GetString(b+(e<<10));if(d[b]!=null){c+=d[b].length}}GLLib.text_multiple_stringCacheArrays[e]=d;GLLib.text_multiple_arrayOffsets[e]=null;GLLib.text_multiple_arrays[e]=null;if(true){java.lang.System.gc()}var a=c*2;if(a>15360){GLLib.Warning("you are caching "+GLLib.Text_GetNbString_dup_()+" string, this comsume "+a+" byte of memory, you may consider dividing your text in smaller text package")}}};GLLib.Text_FreeAll=function(){if(false){for(var b=0;b<32;++b){GLLib.Text_FreeIndex(b)}}else{if(GLLib.text_stringCacheArray!=null){for(var a=0;a<GLLib.text_nbString;++a){GLLib.text_stringCacheArray[a]=null}GLLib.text_stringCacheArray=null}GLLib.text_arrayOffset=null;GLLib.text_array=null;GLLib.text_nbString=0}};GLLib.Text_FreeIndex=function(c){if(!false){GLLib.Assert(false,"Warning! Trying to call Text_FreeIndex(int) when GLLibConfig.text_useMultipleTextPacks is false!")}else{if(GLLib.text_multiple_array_map!=null){var b=GLLib.text_multiple_array_map[c];if(b==-1){return}if(true&&GLLib.text_multiple_stringCacheArrays[b]!=null){for(var a=0;a<GLLib.text_multiple_nbStrings[b];++a){GLLib.text_multiple_stringCacheArrays[b][a]=null}GLLib.text_multiple_stringCacheArrays[b]=null}GLLib.text_multiple_arrayOffsets[b]=null;GLLib.text_multiple_arrays[b]=null;GLLib.text_multiple_nbStrings[b]=0;GLLib.text_multiple_array_map[c]=-1}}};GLLib.Text_FormatDate=function(h,g){var f=h.get(5);var b=h.get(2)+1;var a=h.get(1);var e=((f<10)?"0":"")+f;var d=((b<10)?"0":"")+b;var c="";switch(g){case 0:case 9:c=d+"/"+e+"/"+a;break;case 1:case 5:case 10:case 11:case 12:case 13:case 14:c=e+"."+d+"."+a;break;case 2:case 3:case 16:case 17:c=e+"/"+d+"/"+a;break;case 4:c=f+"/"+b+"/"+a;break;case 6:c=e+"-"+d+"-"+a;break;case 7:case 8:c=a+"."+d+"."+e;break;case 15:c=e+"/"+d+"/"+(a+543);break}return c};GLLib.Text_FormatClock=function(i,h){var g=i.get(12);var d=i.get(11);var c=(d==0)?12:((d>12)?(d-12):d);var a=d>11;var f=((g<10)?"0":"")+g;var e=null;switch(h){case 0:case 9:e=c+":"+f+(a?" PM":" AM");break;case 17:e=(a?"pm":"am")+c+":"+f;break;case 1:e=d+":"+f+" Uhr";break;case 3:case 5:case 6:case 10:e=d+":"+f;break;case 4:case 13:e=d+":"+f+" h";break;case 2:if(g==0){e=d+" h";break}e=d+" h "+f;break;case 11:if(d<10){e="0"+d+"."+f;break}e=d+"."+f;break;case 12:if(d<10){e="0"+d+":"+f;break}e=d+":"+f;break;case 16:if(g==0){e=d+" g";break}e=d+" g "+f;break;case 7:case 8:e=c+":"+f+(a?"pm":"am");break;case 14:e=d+"."+f+" uur";break;case 15:e=d+"."+f+" น.";break;default:e=d+":"+f;break}return e};GLLib.Text_FormatNumber_dup_IIjavalangString=function(f,d,e){if(f<1000){return""+f}var c="";switch(d){case 0:case 7:case 8:case 9:case 15:case 17:c=",";break;case 1:case 3:case 5:case 16:c=".";break;case 12:case 13:c=e;break;case 2:case 4:case 6:case 10:if(f>=10000){c=e;break}break;case 11:case 14:if(f>=10000){c=".";break}break;default:return""+f}var a="";var b=(f%1000<0)?(-(f%1000)):(f%1000);f=gloft.casttoint(f/1000);while(b!=0||f!=0){if(b<10){a="00"+((b<0)?(-b):b)+a}else{if(b<100){a="0"+((b<0)?(-b):b)+a}else{a=((b<0)?(-b):b)+a}}b=f%1000;f=gloft.casttoint(f/1000);if(f!=0){a=c+a}else{if(b==0){continue}a=b+c+a;b=0}}return a};GLLib.Text_FormatNumber_dup_II=function(b,a){return GLLib.Text_FormatNumber_dup_IIjavalangString(b,a," ")};GLLib.StringFormat=function(d,f){var a="";if(d.indexOf(37)<0){return d}var e=0;var c=0;do{c=d.indexOf(37,c);if(c<0||c==d.length-1){a+=d.substring(e);c=-1}else{if(gloft.casttoint(d.charAt(c+1))==gloft.casttoint("s")){var b=-1;if(c+2<d.length){b=gloft.casttoint(d.charAt(c+2))-gloft.casttoint("0")}if(b>=0&&b<=9){a=a+d.substring(e,c)+f[b];e=(c+=3)}else{GLLib.Dbg("Invalid string format pattern '"+d+"'");++c}}else{++c}}}while(c>=0);return a};GLLib.Text_IsPackLoaded=function(a){if(!false){GLLib.Assert(false,"Warning! Trying to call isPackLoaded(int) when GLLibConfig.text_useMultipleTextPacks is false!");return false}if(GLLib.text_multiple_array_map==null){return false}if(a>=32){GLLib.Assert(false,"Calling isPackLoaded with a paramerter greater than GLLibConfig.text_maxPacks");return false}return GLLib.text_multiple_array_map[a]>=0};GLLib.Text_GetPackOffset=function(a){if(!false){GLLib.Assert(false,"Warning! Trying to call getPackOffset(int) when GLLibConfig.text_useMultipleTextPacks is false!");return -1}if(GLLib.text_multiple_array_map==null){return 0}if(a>=32){GLLib.Assert(false,"Calling isPackLoaded with a paramerter greater than GLLibConfig.text_maxPacks");return -1}if(GLLib.text_multiple_array_map[a]==-1){GLLib.Assert(false,"Calling getPackOffset(int packNb) when packNb is not loaded! Use Text_IsPackLoaded(int packNb) first. ");return -1}return GLLib.text_multiple_array_map[a]};GLLib.Text_FormatText=function(a,c){var b=a;if(false){switch(c){case 2:b=GLLib.Text_FormatText_FR(a);break}}return b};GLLib.Text_FormatText_FR=function(b){if(b==null){return null}var c=b.length;var d=new java.lang.StringBuffer(b);for(var a=0;a<c;++a){switch(b.charAt(a)){case"À":case"Â":d.setCharAt(a,"A");break;case"È":case"É":case"Ê":case"Ë":d.setCharAt(a,"E");break;case"Î":case"Ï":d.setCharAt(a,"I");break;case"Ô":d.setCharAt(a,"O");break;case"Ù":case"Û":d.setCharAt(a,"U");break;case"Ç":d.setCharAt(a,"C");break}}return d.toString()};GLLib.String_ReplaceAll=function(d,c,a){for(var b=d.indexOf(c);b!=-1;b=d.indexOf(c,b+a.length)){d=d.substring(0,b)+a+d.substring(b+c.length)}return d};GLLib.Rms_Close=function(){if(GLLib.s_rs==null){return}try{GLLib.s_rs.closeRecordStore()}catch(a){GLLib.Dbg("ERROR! Failed closing RMS: "+a)}GLLib.s_rs=null};GLLib.Rms_Open=function(a){if(false&&GLLib.s_rms_vendor!=null&&GLLib.s_rms_midletName!=null){GLLib.Dbg(" Open recordstore with name : "+a+", vendor : "+GLLib.s_rms_vendor+", suite : "+GLLib.s_rms_midletName);GLLib.s_rs=javax.microedition.rms.RecordStore.openRecordStore(a,GLLib.s_rms_vendor,GLLib.s_rms_midletName)}else{GLLib.Dbg(" Open recordstore : "+a);GLLib.s_rs=javax.microedition.rms.RecordStore.openRecordStore(a,true)}};GLLib.Rms_Read_dup_javalangString=function(a){return GLLib.Rms_Read_dup_javalangStringjavalangString(a,"")};GLLib.Rms_Read_dup_javalangStringjavalangString=function(c,b){var a=null;if(!"".equals(b)&&b!=null){a=b.getBytes()}return GLLib.Rms_Read_dup_javalangStringaB(c,a)};GLLib.Rms_Read_dup_javalangStringaB=function(l,f){if(-1<=0){return GLLib.Rms_Read_Single(l,f)}var c=0;var a=0;var e=0;try{while(c==0){GLLib.Rms_Open(l+a);if(GLLib.s_rs.getNumRecords()>0){if(GLLib.s_rs.getRecordSize(1)>-1){GLLib.Dbg("Rms_Read: Using rms_maxRecordSize and while reading a records had size larger than this!")}e+=GLLib.s_rs.getRecordSize(1);++a}else{c=1}GLLib.Rms_Close()}}catch(g){GLLib.Dbg("ERROR! Failed reading from RMS: "+g)}if(e>0){var h=gloft.ArrayCreation([e],gloft.casttobyte(null));var d=0;for(var b=0;b<a;++b){var k=GLLib.Rms_Read_Single(l+b,f);java.lang.System.arraycopy(k,0,h,d,k.length);d+=k.length;if(b==a-1&&k.length!=-1){GLLib.Dbg("Rms_Read: Using rms_maxRecordSize and while reading a none-last records had size other than this!")}}return h}GLLib.Dbg("ERROR! Failed reading from RMS!");return null};GLLib.Rms_Read_Single=function(b,d){var c=null;try{GLLib.Rms_Open(b);if(GLLib.s_rs.getNumRecords()>0){c=GLLib.s_rs.getRecord(1)}}catch(a){GLLib.Dbg("ERROR! Failed reading from RMS: "+a);c=null}if(false&&d!=null){c=GLLib.XXTEA_Decrypt_dup_aBaB(c,d)}GLLib.Rms_Close();return c};GLLib.Rms_Write_dup_javalangStringaB=function(a,b){GLLib.Rms_Write_dup_javalangStringaBjavalangString(a,b,"")};GLLib.Rms_Write_dup_javalangStringaBjavalangString=function(c,d,b){var a=null;if(!"".equals(b)&&b!=null){a=b.getBytes()}GLLib.Rms_Write_dup_javalangStringaBaB(c,d,a)};GLLib.Rms_Write_dup_javalangStringaBaB=function(a,c,b){GLLib.Rms_Write_dup_javalangStringaBIIaB(a,c,0,c.length,b)};GLLib.Rms_Write_dup_javalangStringaBIIaB=function(e,h,g,d,f){if(-1>0){var b=0;for(var c=h.length,a=0;c>0;++c,++a){GLLib.Rms_Write_Single(e+a,h,b,(-1<c)?-1:c,f);--b}}else{GLLib.Rms_Write_Single(e,h,g,d,f)}};GLLib.Rms_Write_Single=function(c,a,f,d,e){if(false&&e!=null){a=GLLib.XXTEA_Encrypt_dup_aBaB(a,e);d=a.length}try{GLLib.Rms_Open(c);if(GLLib.s_rs.getNumRecords()>0){GLLib.s_rs.setRecord(1,a,f,d)}else{GLLib.s_rs.addRecord(a,f,d)}}catch(b){GLLib.Dbg("ERROR! Failed writing into RMS: "+b)}GLLib.Rms_Close()};GLLib.GetRmsInputStream=function(b){GLLib.s_rms_buffer=null;try{GLLib.s_rms_buffer=GLLib.Rms_Read_dup_javalangString(b)}catch(a){GLLib.Dbg("   Exception while reading from rms : "+b)}if(GLLib.s_rms_buffer!=null){return new java.io.ByteArrayInputStream(GLLib.s_rms_buffer)}return null};GLLib.InitSharedRms=function(b,a){GLLib.s_rms_vendor=b;GLLib.s_rms_midletName=a};GLLib.Rms_WriteShared=function(c,b,a,d){GLLib.InitSharedRms(b,a);GLLib.Rms_Write_dup_javalangStringaB(c,d);GLLib.InitSharedRms(null,null)};GLLib.Rms_ReadShared=function(d,c,b){GLLib.InitSharedRms(c,b);var a=GLLib.Rms_Read_dup_javalangString(d);GLLib.InitSharedRms(null,null);return a};GLLib.Pack_OpenShared=function(c,b,a){GLLib.InitSharedRms(b,a);GLLib.Pack_Open(c)};GLLib.Pack_CloseShared=function(){GLLib.InitSharedRms(null,null);GLLib.Pack_Close()};GLLib.SavePack=function(o,h){var a=1024;var f=gloft.ArrayCreation([a],gloft.casttobyte(null));try{var b=GLLib.s_gllib_instance.GetResourceAsStream(o);var d=0;for(var c=b.read(f,0,a);c>0;c=b.read(f,0,a)){d+=c}b.close();var k=gloft.ArrayCreation([d],gloft.casttobyte(null));var m=GLLib.s_gllib_instance.GetResourceAsStream(o);var e=0;while(d>0){var l=m.read(k,e,d);e+=l;d-=l}m.close();GLLib.Rms_Write_dup_javalangStringaB(h,k)}catch(g){GLLib.Dbg(" SavePack exception for pack : "+o+" into rms name : "+h)}};GLLib.Profiler_Start=function(){if(GLLib.s_profiler_eventNames==null){GLLib.s_profiler_eventNames=gloft.ArrayCreation([GLLib.PROFILER_MAX_EVENTS],null);GLLib.s_profiler_eventBegins=gloft.ArrayCreation([GLLib.PROFILER_MAX_EVENTS],gloft.casttolong(null));GLLib.s_profiler_eventEnds=gloft.ArrayCreation([GLLib.PROFILER_MAX_EVENTS],gloft.casttolong(null));GLLib.s_profiler_eventDepths=gloft.ArrayCreation([GLLib.PROFILER_MAX_EVENTS],gloft.casttoshort(null));GLLib.s_profiler_eventStack=gloft.ArrayCreation([GLLib.PROFILER_MAX_EVENTS],gloft.casttoshort(null))}GLLib.s_profiler_eventCount=0;GLLib.s_profiler_eventStackIndex=0;GLLib.s_profiler_recording=true};GLLib.Profiler_End=function(){GLLib.s_profiler_recording=false};GLLib.Profiler_Draw=function(){GLLib.g.setColor(0);GLLib.FillRect(GLLib.g,0,0,GLLib.s_screenWidth,GLLib.s_profiler_eventCount*GLLib.g.getFont().getHeight());GLLib.g.setColor(16777215);var a=0;var b=0;while(a<GLLib.s_profiler_eventCount){GLLib.g.drawString(GLLib.s_profiler_eventNames[a],GLLib.s_profiler_eventDepths[a]*10,b,0);GLLib.g.drawString(java.lang.Long.toString(GLLib.s_profiler_eventEnds[a]-GLLib.s_profiler_eventBegins[a]),GLLib.s_screenWidth-2,b,24);b+=GLLib.g.getFont().getHeight();++a}};GLLib.Profiler_PrintToFilelog=function(){if(false){var c=java.lang.System.getProperty("fileconn.dir.photos")+"/log.txt";try{var d=javax.microedition.io.Connector.open(c);if(!d.exists()){d.create()}var e=d.openDataOutputStream();for(var b=0;b<GLLib.s_profiler_eventCount;++b){e.write((GLLib.s_profiler_eventNames[b]+"\n").getBytes());e.write((java.lang.Long.toString(GLLib.s_profiler_eventEnds[b]-GLLib.s_profiler_eventBegins[b])+"\n").getBytes())}(d).close()}catch(a){a.printStackTrace()}}};GLLib.Profiler_PrintToConsole_dup_=function(){GLLib.Profiler_PrintToConsole_dup_I(GLLib.s_profiler_eventCount)};GLLib.Profiler_PrintToConsole_dup_I=function(d){var c=java.lang.Math.max(GLLib.s_profiler_eventCount-d,0);for(var a=GLLib.s_profiler_eventCount,b=c;b<a;++b){java.lang.System.out.println(GLLib.s_profiler_eventNames[b]);java.lang.System.out.println(java.lang.Long.toString(GLLib.s_profiler_eventEnds[b]-GLLib.s_profiler_eventBegins[b]))}};GLLib.Profiler_BeginNamedEvent=function(a){if(GLLib.s_profiler_emulator&&java.lang.System.getProperty("EMU://BeginNamedEvent:"+a)==null){GLLib.Assert(false,"Failed to call BeginNamedEvent")}if(GLLib.s_profiler_recording){if(GLLib.s_profiler_eventCount>=GLLib.PROFILER_MAX_EVENTS){GLLib.Dbg("Profiler: Too many events "+GLLib.s_profiler_eventCount)}else{GLLib.s_profiler_eventNames[GLLib.s_profiler_eventCount]=a;GLLib.s_profiler_eventBegins[GLLib.s_profiler_eventCount]=java.lang.System.currentTimeMillis();GLLib.s_profiler_eventDepths[GLLib.s_profiler_eventCount]=gloft.casttoshort(GLLib.s_profiler_eventStackIndex);GLLib.s_profiler_eventStack[GLLib.s_profiler_eventStackIndex]=gloft.casttoshort(GLLib.s_profiler_eventCount);++GLLib.s_profiler_eventCount;++GLLib.s_profiler_eventStackIndex}}};GLLib.Profiler_EndNamedEvent=function(){if(GLLib.s_profiler_emulator&&java.lang.System.getProperty("EMU://EndNamedEvent")==null){GLLib.Assert(false,"Failed to call EndNamedEvent")}if(GLLib.s_profiler_recording){--GLLib.s_profiler_eventStackIndex;if(GLLib.s_profiler_eventStackIndex<0||GLLib.s_profiler_eventStackIndex>=GLLib.PROFILER_MAX_EVENTS){GLLib.Assert(false,"Profiler: Begin/End event match problem")}GLLib.s_profiler_eventEnds[GLLib.s_profiler_eventStack[GLLib.s_profiler_eventStackIndex]]=java.lang.System.currentTimeMillis()}};GLLib.Time_Profiler_StartRecording=function(){if(true==true){GLLib.s_tProf_isProfilerEnabled=true;for(var a=GLLib.s_tProf_maxSlots-1;a>0;--a){if(GLLib.s_tProf_profilerNames[a]!=null){GLLib.s_tProf_profilerPool[a][5]=java.lang.System.currentTimeMillis();GLLib.s_tProf_profilerPool[a][6]=0;GLLib.s_tProf_profilerPool[a][3]=0;GLLib.s_tProf_profilerPool[a][11]=0}}GLLib.s_tProf_yDisplay=0;GLLib.s_tProf_isScrollDown=false}};GLLib.Time_Profiler_StopRecording=function(){if(true==true){GLLib.s_tProf_isProfilerEnabled=false}};GLLib.Time_Profiler_StartSlot=function(b){if(true==true){if(!GLLib.s_tProf_isProfilerEnabled||GLLib.s_tProf_maxSlots<=0){return}var c=-1;for(var a=GLLib.s_tProf_maxSlots-1;a>0;--a){if(GLLib.s_tProf_profilerNames[a]==b){GLLib.s_tProf_profilerPool[a][5]=java.lang.System.currentTimeMillis();return}if(GLLib.s_tProf_profilerNames[a]==null){c=a}}if(c==-1){GLLib.Dbg("NO MORE EMPTY SLOTS FOR PROFILER!");return}GLLib.s_tProf_profilerNames[c]=b;GLLib.s_tProf_profilerPool[c][5]=java.lang.System.currentTimeMillis();++GLLib.s_tProf_activeSlots}};GLLib.Time_Profiler_EndSlot=function(j){if(true==true){if(!GLLib.s_tProf_isProfilerEnabled||GLLib.s_tProf_maxSlots<=0){return}for(var b=GLLib.s_tProf_maxSlots-1;b>0;--b){if(GLLib.s_tProf_profilerNames[b]==j){var a=java.lang.System.currentTimeMillis()-GLLib.s_tProf_profilerPool[b][5];if(a<GLLib.s_tProf_profilerPool[b][12]){GLLib.s_tProf_profilerPool[b][12]=a}if(a>GLLib.s_tProf_profilerPool[b][13]){GLLib.s_tProf_profilerPool[b][13]=a}var f=GLLib.s_tProf_profilerPool[b];var e=6;f[e]+=a;var h=GLLib.s_tProf_profilerPool[b];var d=2;++h[d];var g=GLLib.s_tProf_profilerPool[b];var c=3;++g[c];return}}}};GLLib.Time_Profiler_EndFrame=function(){if(true==true){if(!GLLib.s_tProf_isProfilerEnabled||GLLib.s_tProf_maxSlots<=0){return}for(var e=GLLib.s_tProf_maxSlots-1;e>=0;--e){if(GLLib.s_tProf_profilerNames[e]!=null){if(e==0){var c=java.lang.System.currentTimeMillis();if(GLLib.s_tProf_profilerPool[e][5]==0){GLLib.s_tProf_profilerPool[e][5]=c-1}var j=GLLib.s_tProf_profilerPool[e];var a=6;j[a]+=c-GLLib.s_tProf_profilerPool[e][5];GLLib.s_tProf_profilerPool[e][5]=c;var p=GLLib.s_tProf_profilerPool[e];var h=2;++p[h];var o=GLLib.s_tProf_profilerPool[e];var g=3;++o[g];if(GLLib.s_tProf_profilerPool[e][6]>1000){if(GLLib.s_tProf_profilerPool[e][3]<GLLib.s_tProf_profilerPool[e][7]){GLLib.s_tProf_profilerPool[e][7]=GLLib.s_tProf_profilerPool[e][3]}if(GLLib.s_tProf_profilerPool[e][3]>GLLib.s_tProf_profilerPool[e][8]){GLLib.s_tProf_profilerPool[e][8]=GLLib.s_tProf_profilerPool[e][3]}GLLib.s_tProf_profilerPool[e][10]=GLLib.s_tProf_profilerPool[e][3];GLLib.s_tProf_profilerPool[e][3]=0;var m=GLLib.s_tProf_profilerPool[e];var f=1;m[f]+=GLLib.s_tProf_profilerPool[e][6];GLLib.s_tProf_profilerPool[e][6]=0;GLLib.s_tProf_profilerPool[e][9]=gloft.casttoint(GLLib.s_tProf_profilerPool[e][2]*1000/GLLib.s_tProf_profilerPool[e][1])}}else{if(GLLib.s_tProf_profilerPool[e][3]>0){var l=GLLib.s_tProf_profilerPool[e];var d=11;++l[d]}if(GLLib.s_tProf_profilerPool[e][6]<GLLib.s_tProf_profilerPool[e][7]){GLLib.s_tProf_profilerPool[e][7]=GLLib.s_tProf_profilerPool[e][6]}if(GLLib.s_tProf_profilerPool[e][6]>GLLib.s_tProf_profilerPool[e][8]){GLLib.s_tProf_profilerPool[e][8]=GLLib.s_tProf_profilerPool[e][6]}var k=GLLib.s_tProf_profilerPool[e];var b=1;k[b]+=GLLib.s_tProf_profilerPool[e][6];GLLib.s_tProf_profilerPool[e][10]=GLLib.s_tProf_profilerPool[e][6];GLLib.s_tProf_profilerPool[e][6]=0;GLLib.s_tProf_profilerPool[e][9]=gloft.casttoint(GLLib.s_tProf_profilerPool[e][1]/GLLib.s_tProf_profilerPool[e][2]);GLLib.s_tProf_profilerPool[e][4]=GLLib.s_tProf_profilerPool[e][3];GLLib.s_tProf_profilerPool[e][3]=0;GLLib.s_tProf_profilerPool[e][14]=gloft.casttoint(GLLib.s_tProf_profilerPool[e][1]/GLLib.s_tProf_profilerPool[e][11])}}}}};GLLib.Time_Profiler_ResetProfilingInfo=function(){if(true==true){for(var b=GLLib.s_tProf_maxSlots-1;b>=0;--b){for(var a=0;a<15;++a){GLLib.s_tProf_profilerPool[b][a]=0;if(a==7||a==12){GLLib.s_tProf_profilerPool[b][a]=99999999}}}}};GLLib.Time_Profiler_Init=function(e,b,c,d,a){if(true==true){if(e<=0){return}if(GLLib.s_tProf_profilerPool!=null){GLLib.Time_Profiler_Clean()}GLLib.s_tProf_maxSlots=3+e;GLLib.s_tProf_profilerPool=gloft.ArrayCreation([GLLib.s_tProf_maxSlots,15],gloft.casttolong(null));GLLib.Time_Profiler_ResetProfilingInfo();(GLLib.s_tProf_profilerNames=gloft.ArrayCreation([GLLib.s_tProf_maxSlots],null))[0]="FPS";GLLib.s_tProf_yDisplay=0;GLLib.s_tProf_activeSlots=1;GLLib.s_tProf_isScrollDown=false;GLLib.s_tProf_scrollTimer=0;GLLib.s_tProf_scrollStartTime=0;GLLib.s_tProf_lineHeight=b;GLLib.s_tProf_liveTextColor=c;GLLib.s_tProf_isIndicatorEnabled=d;GLLib.s_tProf_isDefaultProfilingEnabled=a}};GLLib.Time_Profiler_Clean=function(){if(true==true){for(var a=0;a<GLLib.s_tProf_maxSlots;++a){GLLib.s_tProf_profilerPool[a]=null}GLLib.s_tProf_profilerPool=null;GLLib.s_tProf_profilerNames=null;GLLib.s_tProf_maxSlots=0;GLLib.s_tProf_yDisplay=0;GLLib.s_tProf_activeSlots=0;GLLib.s_tProf_isScrollDown=false;GLLib.s_tProf_scrollTimer=0;GLLib.s_tProf_scrollStartTime=0;GLLib.s_tProf_lineHeight=0;GLLib.s_tProf_liveTextColor=16777215;GLLib.s_tProf_isIndicatorEnabled=true;GLLib.s_tProf_isDefaultProfilingEnabled=true}};GLLib.Time_Profiler_DrawReport=function(){if(true==true){if(GLLib.s_tProf_maxSlots<=0){return}GLLib.g.setColor(0);GLLib.FillRect(GLLib.g,0,0,GLLib.s_screenWidth,GLLib.s_screenHeight);var a=GLLib.s_tProf_liveTextColor;GLLib.s_tProf_liveTextColor=16777215;GLLib.Time_Profiler_OutputToScreen();GLLib.s_tProf_liveTextColor=a}};GLLib.Time_Profiler_OutputToScreen=function(){if(true==true){if(GLLib.s_tProf_maxSlots<=0){return}var a=GLLib.s_tProf_yDisplay;GLLib.g.setColor(GLLib.s_tProf_liveTextColor);for(var g=0;g<GLLib.s_tProf_maxSlots;++g){var b=10;if(GLLib.s_tProf_profilerNames[g]!=null){GLLib.DrawString(GLLib.s_tProf_profilerNames[g],b,a,20);b+=10;var h=gloft.casttoint(null);if(g==0){var l=gloft.casttoint(null);GLLib.DrawString("Cur FPS "+GLLib.s_tProf_profilerPool[g][10],b,l=a+GLLib.s_tProf_lineHeight,20);var k=gloft.casttoint(null);GLLib.DrawString("AVG FPS "+GLLib.s_tProf_profilerPool[g][9],b,k=l+GLLib.s_tProf_lineHeight,20);var j=gloft.casttoint(null);GLLib.DrawString("Min FPS "+GLLib.s_tProf_profilerPool[g][7],b,j=k+GLLib.s_tProf_lineHeight,20);GLLib.DrawString("Max FPS "+GLLib.s_tProf_profilerPool[g][8],b,h=j+GLLib.s_tProf_lineHeight,20)}else{var f=gloft.casttoint(null);GLLib.DrawString("Cur Frame MS "+GLLib.s_tProf_profilerPool[g][10],b,f=a+GLLib.s_tProf_lineHeight,20);var e=gloft.casttoint(null);GLLib.DrawString("AVG Frame MS "+GLLib.s_tProf_profilerPool[g][14],b,e=f+GLLib.s_tProf_lineHeight,20);var d=gloft.casttoint(null);GLLib.DrawString("Min Frame MS "+GLLib.s_tProf_profilerPool[g][7],b,d=e+GLLib.s_tProf_lineHeight,20);var c=gloft.casttoint(null);GLLib.DrawString("Max Frame MS "+GLLib.s_tProf_profilerPool[g][8],b,c=d+GLLib.s_tProf_lineHeight,20);GLLib.DrawString("Exec Count "+GLLib.s_tProf_profilerPool[g][4],b,h=c+GLLib.s_tProf_lineHeight,20);if(GLLib.s_tProf_profilerPool[g][4]>1){var o=gloft.casttoint(null);GLLib.DrawString("AVG Exec MS "+GLLib.s_tProf_profilerPool[g][9],b,o=h+GLLib.s_tProf_lineHeight,20);var m=gloft.casttoint(null);GLLib.DrawString("Min Exec MS "+GLLib.s_tProf_profilerPool[g][12],b,m=o+GLLib.s_tProf_lineHeight,20);GLLib.DrawString("Max Exec MS "+GLLib.s_tProf_profilerPool[g][13],b,h=m+GLLib.s_tProf_lineHeight,20)}}a=h+GLLib.s_tProf_lineHeight}}if(!GLLib.s_tProf_isDrawReport){GLLib.Time_Profiler_UpdateScrolling()}}};GLLib.Time_Profiler_UpdateScrolling=function(){if(true==true&&GLLib.s_tProf_activeSlots*(6*GLLib.s_tProf_lineHeight)>GLLib.s_screenHeight){var a=java.lang.System.currentTimeMillis();if(GLLib.s_tProf_scrollStartTime==0){GLLib.s_tProf_scrollStartTime=a-1}GLLib.s_tProf_scrollTimer+=a-GLLib.s_tProf_scrollStartTime;GLLib.s_tProf_scrollStartTime=a;if(GLLib.s_tProf_scrollTimer>1000){GLLib.s_tProf_updateScroll=true;GLLib.s_tProf_scrollTimer=0}if(!GLLib.s_tProf_isScrollDown&&GLLib.s_tProf_yDisplay<GLLib.s_screenHeight-GLLib.s_tProf_activeSlots*(6*GLLib.s_tProf_lineHeight)){GLLib.s_tProf_isScrollDown=true}else{if(GLLib.s_tProf_isScrollDown&&GLLib.s_tProf_yDisplay>0){GLLib.s_tProf_isScrollDown=false}}if(GLLib.s_tProf_updateScroll){if(GLLib.s_tProf_isScrollDown){GLLib.s_tProf_yDisplay+=GLLib.s_tProf_lineHeight}else{GLLib.s_tProf_yDisplay-=GLLib.s_tProf_lineHeight}GLLib.s_tProf_updateScroll=false}}};GLLib.Time_Profiler_DrawSmallIndicator=function(){if(true==true){if(!GLLib.s_tProf_isIndicatorEnabled||!GLLib.s_tProf_isProfilerEnabled||GLLib.s_tProf_maxSlots<=0){return}var b=10;var a=5;GLLib.g.setColor(0);GLLib.FillRect(GLLib.g,0,0,GLLib.s_screenWidth>>1,a+GLLib.s_tProf_lineHeight);GLLib.g.setColor(16777215);GLLib.DrawString("Cur FPS "+GLLib.s_tProf_profilerPool[0][10],b,a,20)}};GLLib.Time_Profiler_UpdateKey=function(){if(true==true){if(GLLib.s_tProf_maxSlots<=0){return}if(GLLib.WasKeyPressed(16)){GLLib.s_tProf_keyHeldTime=java.lang.System.currentTimeMillis();if(!GLLib.s_tProf_isProfilerEnabled&&GLLib.s_tProf_isDrawReport){GLLib.s_tProf_isDrawReport=false;GLLib.s_tProf_isProfilerEnabled=false;GLLib.s_tProf_keyHeldTimer=0;return}}var a=GLLib.IsAnyKeyDown();if(a==16){var b=java.lang.System.currentTimeMillis();GLLib.s_tProf_keyHeldTimer+=b-GLLib.s_tProf_keyHeldTime;GLLib.s_tProf_keyHeldTime=b;if(GLLib.s_tProf_keyHeldTimer>2000){if(!GLLib.s_tProf_isProfilerEnabled&&!GLLib.s_tProf_isDrawReport){GLLib.s_tProf_isProfilerEnabled=true;GLLib.Time_Profiler_ResetProfilingInfo()}else{if(GLLib.s_tProf_isProfilerEnabled&&!GLLib.s_tProf_isDrawReport){GLLib.s_tProf_isDrawReport=true;GLLib.s_tProf_isProfilerEnabled=false}}GLLib.s_tProf_keyHeldTimer=0}}else{GLLib.s_tProf_keyHeldTimer=0}if(GLLib.s_tProf_isDrawReport){if(a==1||a==8){if(GLLib.s_tProf_yDisplay<0){GLLib.s_tProf_yDisplay+=3}}else{if((a==2||a==14)&&GLLib.s_tProf_yDisplay>GLLib.s_screenHeight-GLLib.s_tProf_activeSlots*(6*GLLib.s_tProf_lineHeight)){GLLib.s_tProf_yDisplay-=3}}}}};GLLib.Time_Profiler_OutputInfo=function(){if(true==true){if(GLLib.s_tProf_maxSlots<=0){return}if(!GLLib.s_tProf_isProfilerEnabled){if(GLLib.s_tProf_isDrawReport){GLLib.Time_Profiler_DrawReport()}}else{if(!GLLib.s_tProf_isIndicatorEnabled){GLLib.Time_Profiler_OutputToScreen()}else{GLLib.Time_Profiler_DrawSmallIndicator()}}}};GLLib.AlphaRect_GetColorSlot=function(b){for(var a=0;a<GLLib.s_alphaRectCurrentARGB.length;++a){if(GLLib.s_alphaRectCurrentARGB[a]==b){return a}}return -1};GLLib.AlphaRect_SetColor=function(a){if(GLLib.s_alphaRectCurrentARGB==null){GLLib.s_alphaRectCurrentARGB=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_alphaRectARGBData=gloft.ArrayCreation([1],gloft.casttoint(null));if(true){GLLib.s_alphaRectImage=gloft.ArrayCreation([1],null)}}var o=GLLib.AlphaRect_GetColorSlot(a);if(o==-1||(true&&GLLib.s_alphaRectImage==null)||(!true&&GLLib.s_alphaRectARGBData==null)){o=++GLLib.s_alphaRectCurrentSlot%1;GLLib.s_alphaRectCurrentARGB[o]=a;if(true&&64*64<35000){GLLib.s_alphaRectARGBData[o]=ASprite.temp_int}if(GLLib.s_alphaRectARGBData[o]==null){GLLib.s_alphaRectARGBData[o]=gloft.ArrayCreation([64*64],gloft.casttoint(null))}for(var e=64*64;e>0;GLLib.s_alphaRectARGBData[o][--e]=a){}if(true){var k=GLLib.s_alphaRectImage;var h=o;var j=GLLib.s_alphaRectARGBData[o];var g=64;var f=64;var m=true;var d=f;var c=g;var p=j;var l=null;if(false){l=javax.microedition.lcdui.Image.createRGBImage(p,c,d,true)}else{l=javax.microedition.lcdui.Image.createRGBImage(p,c,d,m)}k[h]=l}}GLLib.s_alphaRectCurrentSlot=o};GLLib.AlphaRect_Draw=function(c,u,l,h,g){if(false&&ASprite.s_resizeOn){var f=u;u=(false?(ASprite.s_resizeUseShifts?(f<<ASprite.s_resizeShiftX):(gloft.casttoint(f*ASprite.s_resizedWidth/ASprite.s_originalWidth))):f);var e=l;l=(false?(ASprite.s_resizeUseShifts?(e<<ASprite.s_resizeShiftY):(gloft.casttoint(e*ASprite.s_resizedHeight/ASprite.s_originalHeight))):e);var d=h;h=(false?(ASprite.s_resizeUseShifts?(d<<ASprite.s_resizeShiftX):(gloft.casttoint(d*ASprite.s_resizedWidth/ASprite.s_originalWidth))):d);var b=g;g=(false?(ASprite.s_resizeUseShifts?(b<<ASprite.s_resizeShiftY):(gloft.casttoint(b*ASprite.s_resizedHeight/ASprite.s_originalHeight))):b)}var y=GLLib.GetClipX(c,true);var x=GLLib.GetClipY(c,true);var z=GLLib.GetClipWidth(c,true);var t=GLLib.GetClipHeight(c,true);var a=(u>y)?u:y;var s=(l>x)?l:x;var r=((u+h<y+z)?(u+h):(y+z))-a;var q=((l+g<x+t)?(l+g):(x+t))-s;if(r<=0||q<=0){return}GLLib.SetClip(c,a,s,r,q,true);if(false){var p=a;a=ASprite._graphicsHeight-s-q;s=p;var o=r;r=q;q=o}if(!true&&r*q<64*64){if(false){GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZIIZ(c,GLLib.s_alphaRectARGBData[GLLib.s_alphaRectCurrentSlot],0,r,a,s,r,q,true,true,0,-1,false)}else{GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(c,GLLib.s_alphaRectARGBData[GLLib.s_alphaRectCurrentSlot],0,r,a,s,r,q,true,true,0)}}else{var m=r+a;var k=q+s;for(var w=a;w<m;w+=64){for(var v=s;v<k;v+=64){if(true){if(false){GLLib.DrawImage(c,GLLib.s_alphaRectImage[GLLib.s_alphaRectCurrentSlot],w,v,20,false)}else{GLLib.DrawImage(c,GLLib.s_alphaRectImage[GLLib.s_alphaRectCurrentSlot],w,v,20,true)}}else{if(false){GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZIIZ(c,GLLib.s_alphaRectARGBData[GLLib.s_alphaRectCurrentSlot],0,64,w,v,64,64,true,true,0,-1,false)}else{GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(c,GLLib.s_alphaRectARGBData[GLLib.s_alphaRectCurrentSlot],0,64,w,v,64,64,true,true,0)}}}}}GLLib.SetClip(c,y,x,z,t,true)};GLLib.DrawAlphaLine=function(d,g,f,e,c,b){var a=b>>24&255;GLLib.DrawAAAlphaLine(d,g,f,e,c,b&16777215,a,a)};GLLib.DrawAlphaRect=function(d,g,f,e,c,b){var a=b>>24&255;b&=16777215;GLLib.DrawAAAlphaLine(d,g+1,f,g+e,f,b,a,a);GLLib.DrawAAAlphaLine(d,g,f,g,f+c,b,a,a);GLLib.DrawAAAlphaLine(d,g+e,f+c,g+e,f,b,a,a);GLLib.DrawAAAlphaLine(d,g+e+1,f+c,g,f+c,b,a,a)};GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIZ=function(d,f,I,C,r,p,m,k,g,M){if(f==null){GLLib.Assert(false,"PFX_ProcessRotating: src cannot be null!")}if(p<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source width is negative!")}if(m<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source height is negative!")}if((g&4)!=0){g&=-5;var e=k+gloft.casttoint(90*GLLib.Math_AngleMUL/360);if(e>2147483647){GLLib.Assert(false,"Math_FixedPoint_Add(): Multiplication Integer Overflow")}k=gloft.casttoint(e)}if(g!=0){f=ASprite.TransformRGB_dup_aIIIIaI(f,p,m,g,null);I=ASprite.GetPixelBuffer_int_dup_aIII(f,p,m)}var c=k;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var B=GLLib.Math_Cos(GLLib.Math_Angle90-c);var A=GLLib.Math_Cos(k);GLLib.PFX_Rotate_GetRotatedRectSize(B,A,p,m,ASprite.s_rc);var u=ASprite.s_rc[0];var s=ASprite.s_rc[1];var a=u>>1;var z=s>>1;var y=u-p>>1;var x=s-m>>1;var w=z*B;var v=-z*A;var t=a*B;var q=a*A;var o=a-y;var l=z-x;var h=-q;var L=-t;for(var G=0;G<u;++G){var K=h-w;var J=v-L;var H=G;for(var E=0;E<s;++E){var F=o+(K+(1<<8-1)>>8);var D=l+(J+(1<<8-1)>>8);K+=B;J+=A;if(F>=0&&D>=0&&F<p&&D<m){I[H]=f[D*p+F]}else{I[H]=0}H+=u}h+=A;L+=B}GLLib.s_PFX_newSizeX=u;GLLib.s_PFX_newSizeY=s;if(M){GLLib.PFX_WritePixelData(d,I,0,u,C,r,u,s,true)}return(M?null:I)};GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIZZIZ=function(V,ah,T,al,R,F,C,Q,P,O,aq,J,N,I){if(ah==null){GLLib.Assert(false,"PFX_ProcessScaling: src cannot be null!")}var S=ah.length;var M=0;if(F<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source width is negative!")}if(C<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source height is negative!")}if(Q<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale X is negative!")}if(P<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale Y is negative!")}var L=N&-2;if((N&4)!=0){L=N;N=0}if(L!=0){if((L&4)!=0){GLLib.s_PFX_sizeX=C;GLLib.s_PFX_sizeY=F;F=GLLib.s_PFX_sizeX;C=GLLib.s_PFX_sizeY}ah=ASprite.TransformRGB_dup_aIIIIaI(ah,F,C,L,null);T=ASprite.GetPixelBuffer_int_dup_aIII(ah,F,C)}var aj=gloft.casttoint(F*Q/100)+((F*Q%100!=0)?1:0);var ag=gloft.casttoint(C*P/100)+((C*P%100!=0)?1:0);GLLib.s_PFX_newSizeX=aj;GLLib.s_PFX_newSizeY=ag;if(aj<=0||ag<=0){return null}var K=gloft.casttoint((F<<8)/aj);var af=gloft.casttoint((C<<8)/ag);var G=GLLib.GetClipX(V,false);var E=GLLib.GetClipY(V,false);var s=GLLib.GetClipWidth(V,false);var r=GLLib.GetClipHeight(V,false);var ad=aj;var ac=0;var ab=aj;var aa=0;if(al<G){aj-=G-al;if(aj<=0){return null}ac=G-al;al=G}if(R<E){ag-=E-R;if(ag<=0){return null}aa=E-R;R=E}if(al+aj>G+s){aj=G+s-al;if(aj<=0){return null}ab=ac+aj}if(R+ag>E+r){ag=E+r-R;if(ag<=0){return null}}var Z=gloft.casttoint(T.length/aj);if(Z<=0){GLLib.Dbg("PFX_ProcessScaling Warning: Scale size is too big for the current buffer size: "+T.length+" / "+aj+". Effect is not performed");return null}var Y=Z;var X=R;if(O<0){var W=Z*aj;var U=gloft.casttoint(null);var D=gloft.casttoint(null);if((N&1)!=0){U=(ad-ab)*K;D=K}else{U=(ab-1)*K;D=-K}var B=ag-gloft.casttoint(ag/Z)*Z;if(B==0){B=Z}var A=B;var z=B*aj;var y=R+ag-B;var x=ag;var w=(x+aa)*af;var q=ab;while(--x>=0){w-=af;var v=((w>>8)*F<<8)+U;while(--ab>=ac){if(v>>8>=S){GLLib.Assert(false,"PFX_ProcessScaling: Source image position it's outside image range!")}T[--z]=ah[v>>8];v+=D}ab=q;if(--B==0){if(I){GLLib.PFX_WritePixelData(V,T,0,aj,al,y,aj,A,aq)}A=Z;y-=Z;B=Z;z=W}}}else{var u=gloft.casttoint(null);var t=gloft.casttoint(null);if((N&1)!=0){u=(ad-ac-1)*K;t=-K}else{u=ac*K;t=K}var H=gloft.casttoboolean(null);if(!J&&!aq){H=true;O=(O&255)<<24;for(var ap=0,p=aa*af;ap<ag;++ap,p+=af){var o=(p>>8)*F;for(var ao=0,m=u;ao<aj;++ao,m+=t){T[M++]=(O|(ah[o+(m>>8)]&16777215))}if(--Y==0){if(I){GLLib.PFX_WritePixelData(V,T,0,aj,al,X,aj,Z,H)}X+=Z;Y=Z;M=0}}}else{if(!J&&aq){H=true;O=(O&255)<<24;for(var an=0,h=aa*af;an<ag;++an,h+=af){var g=(h>>8)*F;for(var am=0,f=u;am<aj;++am,f+=t){var e=ah[g+(f>>8)]&16777215;if(e!=16711935&&e!=0){T[M++]=(O|e)}else{T[M++]=0}}if(--Y==0){if(I){GLLib.PFX_WritePixelData(V,T,0,aj,al,X,aj,Z,H)}X+=Z;Y=Z;M=0}}}else{H=true;for(var d=0,c=aa*af;d<ag;++d,c+=af){var a=(c>>8)*F;for(var ak=0,ai=u;ak<aj;++ak,ai+=t){var ae=a+(ai>>8);T[M++]=(((ah[ae]>>24&255)*O>>8&255&255)<<24|(ah[ae]&16777215))}if(--Y==0){if(I){GLLib.PFX_WritePixelData(V,T,0,aj,al,X,aj,Z,H)}X+=Z;Y=Z;M=0}}}}if(I&&Y!=Z){GLLib.PFX_WritePixelData(V,T,0,aj,al,X,aj,Z-Y,H)}}return(I?null:T)};GLLib.PFX_PrepareYPerspectiveBlock_dup_aIaIIIIIIIIIIIIIII=function(h,N,z,r,p,m,f,d,c,b,a,x,w,v,u,t){var s=f>>8;var q=0;var I=x+(1<<8-1)>>8;var o=w+(1<<8-1)>>8;for(var G=d;G<c;++G){if(o>=b){if(I<a){if(false){var g=(G-d)*r;for(var E=a-o-1;E>=0;--E){h[g++]=0}q=g+r;for(var C=I-b-1;C>=0;--C){h[--q]=0}--q}else{var e=G-d;for(var M=I-b-1;M>=0;--M){h[e]=0;e+=z}var L=(r-1)*z+G-d;for(var K=a-o-1;K>=0;--K){h[L]=0;L-=z}}if(I<o){if(!false){q=G-d}var J=0;var H=0;var F=gloft.casttoint((m<<8)/(o-I));if(I<b){J+=F*(b-I);I=b}else{if(!false){q+=z*(I-b)}}if(o>a){o=a}var B=gloft.casttoint(null);if(false){var D=gloft.casttoint(s/p);B=N[(s-D*p)*m+(m-1-D)]}else{B=N[s]}while(I<o){var A=J>>8;if(H!=A){s+=(A-H)*p;if(false){var y=gloft.casttoint(s/p);B=N[(s-y*p)*m+(m-1-y)]}else{B=N[s]}H=A}h[q]=B;if(false){--q}else{q+=z}J+=F;++I}}x+=u;w+=t;f+=v;I=x>>8;o=w>>8;s=f>>8;if(s<0){s=0;f=0}else{if(s>=p){s=p-1;f=s<<8}}}}}return f};GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIZ=function(x,c,a,v,J,u,t,s,r,q,N){if(c==null){GLLib.Assert(false,"PFX_ProcessRotating: src cannot be null!")}if(t<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source width is negative!")}if(s<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source height is negative!")}if((q&4)!=0){q&=-5;var p=r+gloft.casttoint(90*GLLib.Math_AngleMUL/360);if(p>2147483647){GLLib.Assert(false,"Math_FixedPoint_Add(): Multiplication Integer Overflow")}r=gloft.casttoint(p)}if(q!=0){c=ASprite.TransformRGB_dup_aBIIIaB(c,t,s,q,null);v=ASprite.GetPixelBuffer_int_dup_aIII(null,t,s)}var o=r;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var L=GLLib.Math_Cos(GLLib.Math_Angle90-o);var d=GLLib.Math_Cos(r);GLLib.PFX_Rotate_GetRotatedRectSize(L,d,t,s,ASprite.s_rc);var I=ASprite.s_rc[0];var H=ASprite.s_rc[1];var m=I>>1;var G=H>>1;var F=I-t>>1;var E=H-s>>1;var D=G*L;var C=-G*d;var B=m*L;var A=m*d;var z=m-F;var y=G-E;var w=-A;var l=-B;for(var M=0;M<I;++M){var k=w-D;var h=C-l;var g=M;for(var K=0;K<H;++K){var f=z+(k+(1<<8-1)>>8);var e=y+(h+(1<<8-1)>>8);k+=L;h+=d;if(f>=0&&e>=0&&f<t&&e<s){v[g]=a[c[e*t+f]&255]}else{v[g]=0}g+=I}w+=d;l+=L}GLLib.s_PFX_newSizeX=I;GLLib.s_PFX_newSizeY=H;if(N){GLLib.PFX_WritePixelData(x,v,0,I,J,u,I,H,true)}return(N?null:v)};GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIZZIZ=function(W,r,q,U,al,S,G,D,R,Q,P,aq,K,O,J){if(r==null){GLLib.Assert(false,"PFX_ProcessScaling: src cannot be null!")}var T=r.length;var N=0;if(G<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source width is negative!")}if(D<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source height is negative!")}if(R<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale X is negative!")}if(Q<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale Y is negative!")}var M=O&-2;if((O&4)!=0){M=O;O=0}if(M!=0){if((M&4)!=0){GLLib.s_PFX_sizeX=D;GLLib.s_PFX_sizeY=G;G=GLLib.s_PFX_sizeX;D=GLLib.s_PFX_sizeY}r=ASprite.TransformRGB_dup_aBIIIaB(r,G,D,M,null);U=ASprite.GetPixelBuffer_int_dup_aIII(null,G,D)}var aj=gloft.casttoint(G*R/100)+((G*R%100!=0)?1:0);var ah=gloft.casttoint(D*Q/100)+((D*Q%100!=0)?1:0);GLLib.s_PFX_newSizeX=aj;GLLib.s_PFX_newSizeY=ah;if(aj<=0||ah<=0){return null}var L=gloft.casttoint((G<<8)/aj);var ag=gloft.casttoint((D<<8)/ah);var H=GLLib.GetClipX(W,false);var F=GLLib.GetClipY(W,false);var t=GLLib.GetClipWidth(W,false);var s=GLLib.GetClipHeight(W,false);var ae=aj;var ad=0;var ac=aj;var ab=0;if(al<H){aj-=H-al;if(aj<=0){return null}ad=H-al;al=H}if(S<F){ah-=F-S;if(ah<=0){return null}ab=F-S;S=F}if(al+aj>H+t){aj=H+t-al;if(aj<=0){return null}ac=ad+aj}if(S+ah>F+s){ah=F+s-S;if(ah<=0){return null}}var aa=gloft.casttoint(U.length/aj);if(aa<=0){GLLib.Dbg("PFX_ProcessScaling Warning: Scale size is too big for the current buffer size: "+U.length+" / "+aj+". Effect is not performed");return null}var Z=aa;var Y=S;if(P<0){var X=aa*aj;var V=gloft.casttoint(null);var E=gloft.casttoint(null);if((O&1)!=0){V=(ae-ac)*L;E=L}else{V=(ac-1)*L;E=-L}var C=ah-gloft.casttoint(ah/aa)*aa;if(C==0){C=aa}var B=C;var A=C*aj;var z=S+ah-C;var y=ah;var x=(y+ab)*ag;while(--y>=0){x-=ag;var w=((x>>8)*G<<8)+V;while(--ac>=ad){if(w>>8>=T){GLLib.Assert(false,"PFX_ProcessScaling: Source image position it's outside image range!")}U[--A]=q[r[w>>8]&255];w+=E}if(--C==0){if(J){GLLib.PFX_WritePixelData(W,U,0,aj,al,z,aj,B,aq)}B=aa;z-=aa;C=aa;A=X}}}else{var v=gloft.casttoint(null);var u=gloft.casttoint(null);if((O&1)!=0){v=(ae-ad-1)*L;u=-L}else{v=ad*L;u=L}var I=gloft.casttoboolean(null);if(!K&&!aq){I=true;P=(P&255)<<24;for(var ap=0,p=ab*ag;ap<ah;++ap,p+=ag){var o=(p>>8)*G;for(var ao=0,m=v;ao<aj;++ao,m+=u){U[N++]=(P|(q[r[o+(m>>8)]&255]&16777215))}if(--Z==0){if(J){GLLib.PFX_WritePixelData(W,U,0,aj,al,Y,aj,aa,I)}Y+=aa;Z=aa;N=0}}}else{if(!K&&aq){I=true;P=(P&255)<<24;for(var an=0,h=ab*ag;an<ah;++an,h+=ag){var g=(h>>8)*G;for(var am=0,f=v;am<aj;++am,f+=u){var e=q[r[g+(f>>8)]&255]&16777215;if(e!=16711935&&e!=0){U[N++]=(P|e)}else{U[N++]=0}}if(--Z==0){if(J){GLLib.PFX_WritePixelData(W,U,0,aj,al,Y,aj,aa,I)}Y+=aa;Z=aa;N=0}}}else{I=true;for(var d=0,c=ab*ag;d<ah;++d,c+=ag){var a=(c>>8)*G;for(var ak=0,ai=v;ak<aj;++ak,ai+=u){var af=a+(ai>>8);U[N++]=(((q[r[af]&255]>>24&255)*P>>8&255&255)<<24|(q[r[af]&255]&16777215))}if(--Z==0){if(J){GLLib.PFX_WritePixelData(W,U,0,aj,al,Y,aj,aa,I)}Y+=aa;Z=aa;N=0}}}}if(J&&Z!=aa){GLLib.PFX_WritePixelData(W,U,0,aj,al,Y,aj,aa-Z,I)}}return(J?null:U)};GLLib.PFX_PrepareYPerspectiveBlock_dup_aIaBaIIIIIIIIIIIIIII=function(a,o,h,K,z,y,x,w,v,u,t,s,J,I,H,G,F){var E=w>>8;var D=0;var O=J+(1<<8-1)>>8;var C=I+(1<<8-1)>>8;for(var N=v;N<u;++N){if(C>=t){if(O<s){if(false){var B=(N-v)*z;for(var M=s-C-1;M>=0;--M){a[B++]=0}D=B+z;for(var L=O-t-1;L>=0;--L){a[--D]=0}--D}else{var A=N-v;for(var r=O-t-1;r>=0;--r){a[A]=0;A+=K}var q=(z-1)*K+N-v;for(var p=s-C-1;p>=0;--p){a[q]=0;q-=K}}if(O<C){if(!false){D=N-v}var m=0;var g=0;var f=gloft.casttoint((x<<8)/(C-O));if(O<t){m+=f*(t-O);O=t}else{if(!false){D+=K*(O-t)}}if(C>s){C=s}var d=gloft.casttoint(null);if(false){var e=gloft.casttoint(E/y);d=h[o[(E-e*y)*x+(x-1-e)]&255]}else{d=h[o[E]&255]}while(O<C){var c=m>>8;if(g!=c){E+=(c-g)*y;if(false){var b=gloft.casttoint(E/y);d=h[o[(E-b*y)*x+(x-1-b)]&255]}else{d=h[o[E]&255]}g=c}a[D]=d;if(false){--D}else{D+=K}m+=f;++O}}J+=G;I+=F;w+=H;O=J>>8;C=I>>8;E=w>>8;if(E<0){E=0;w=0}else{if(E>=y){E=y-1;w=E<<8}}}}}return w};GLLib.PFX_BlurLBlock_dup_IaIII=function(a,k,j,h){var g=h&16711935;var f=h&65280;for(var e=a-1;e>=0;--e){var d=k[e];var c=d&16711935;var b=d&65280;g=(c+((g-c)*j>>7)&16711935);f=(b+((f-b)*j>>7)&65280);k[e]=(-16777216|g|f)}return g|f};GLLib.PFX_BlurRBlock_dup_IaIII=function(a,k,j,h){var g=h&16711935;var f=h&65280;for(var e=0;e<a;++e){var d=k[e];var c=d&16711935;var b=d&65280;g=(c+((g-c)*j>>7)&16711935);f=(b+((f-b)*j>>7)&65280);k[e]=(-16777216|g|f)}return g|f};GLLib.PFX_ProcessAdditive_dup_aIIIIaIIIIIII=function(h,w,p,m,D,k,f,d,c,b,a){var v=0;var u=(a&255)<<24;for(var y=k;y!=d;y+=f){var t=w+p;for(var x=c;x>=0;--x){var s=h[t];var r=D[v];var q=s&16711680;var o=s&65280;var l=s&255;var g=r&16711680;var e=r&65280;var C=r&255;var B=q+g;if(B>16711680){B=16711680}var A=o+e;if(A>65280){A=65280}var z=l+C;if(z>255){z=255}D[v]=(u|B|A|z);t+=b;++v}w+=m}};GLLib.PFX_ProcessMultiplicative_dup_aIIIIaIIIIIII=function(h,w,p,m,D,k,f,d,c,b,a){var v=0;var u=(a&255)<<24;for(var y=k;y!=d;y+=f){var t=w+p;for(var x=c;x>=0;--x){var s=h[t];var r=D[v];var q=(s&16711680)>>16;var o=(s&65280)>>8;var l=s&255;var g=(r&16711680)>>16;var e=(r&65280)>>8;var C=r&255;var B=(q*g>>6)+g;if(B>255){B=255}var A=(o*e>>6)+e;if(A>255){A=255}var z=(l*C>>6)+C;if(z>255){z=255}D[v]=(u|B<<16|A<<8|z);t+=b;++v}w+=m}};GLLib.PFX_AdditiveBlock_dup_IaII=function(a,k,i){var h=(i&16711680)>>16;var g=(i&65280)>>8;var f=i&255;while(--a>=0){var e=k[a];var d=(e&16711680)>>16;var c=(e&65280)>>8;var b=e&255;var p=d+h;if(p>255){p=255}var o=p<<16;var m=c+g;if(m>255){m=255}var l=m<<8;var j=b+f;if(j>255){j=255}k[a]=(-16777216|o|l|j)}};GLLib.PFX_SubtractiveBlock_dup_IaII=function(a,k,i){var h=(i&16711680)>>16;var g=(i&65280)>>8;var f=i&255;while(--a>=0){var e=k[a];var d=(e&16711680)>>16;var c=(e&65280)>>8;var b=e&255;var p=d-h;if(p<0){p=0}var o=p<<16;var m=c-g;if(m<0){m=0}var l=m<<8;var j=b-f;if(j<0){j=0}k[a]=(-16777216|o|l|j)}};GLLib.PFX_MultiplicativeBlock_dup_IaII=function(a,k,i){var h=(i&16711680)>>16;var g=(i&65280)>>8;var f=i&255;while(--a>=0){var e=k[a];var d=(e&16711680)>>16;var c=(e&65280)>>8;var b=e&255;var p=(h*d>>6)+d;if(p>255){p=255}var o=p<<16;var m=(g*c>>6)+c;if(m>255){m=255}var l=m<<8;var j=(f*b>>6)+b;if(j>255){j=255}k[a]=(-16777216|o|l|j)}};GLLib.PFX_ProcessGrayscaleEffect_dup_aIaIIIIZZ=function(h,y,t,l,k,x,e){if(k!=-1&&l!=0){GLLib.Dbg("PFX_ProcessGrayscaleEffect: Saturation and Alpha Blend are both none-default! This is currently not supported! Please request it.")}var u=t;if(k<0){if(l<=0){while(u!=0){--u;var j=h[u];var g=(j&16711680)>>16&255;y[u]=((j&-65536)|g<<8|g)}}else{if(l<255){while(u!=0){--u;var f=h[u];var d=(f&16711680)>>16&255;y[u]=(f&-65536);var c=d+((((f&65280)>>8&255)-d)*l>>8);var w=y;var a=u;w[a]|=(c&255)<<8;var s=d+(((f&255)-d)*l>>8);var v=y;var r=u;v[r]|=(s&255)}}else{y=h}}}else{GLLib.s_PFX_hasAlpha=true;if(e){while(u!=0){--u;var q=(h[u]&16711680)>>16&255;y[u]=(((h[u]>>24&255)*k>>8&255)<<24|q<<16|q<<8|q)}}else{if(x){k<<=24;while(u!=0){--u;var p=h[u];if((p&16711935)!=16711935){var o=(p&16711680)>>16&255;y[u]=(k|o<<16|o<<8|o)}else{y[u]=0}}}else{var m=gloft.casttoint(null);for(k<<=24;u!=0;--u,m=((h[u]&16711680)>>16&255),y[u]=(k|m<<16|m<<8|m)){}}}}return y};GLLib.PFX_ProcessGrayscaleEffect_dup_aBaIaIIIIZZ=function(i,g,f,h,e,d,a,c){GLLib.Dbg("WARNING: GRAYSCALE effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessGrayscaleEffect_dup_aIaIIIIZZ(GLLib.PFX_GetPalIndexARGB_dup_aBaIaI(i,g,f),f,h,e,d,a,c)};GLLib.PFX_ProcessGlowBlock_dup_aIaIIIIIII=function(p,E,ao,T,S,R,Q,P){var O=GLLib.s_PFX_params[11][0]<<16;var N=GLLib.s_PFX_params[11][1]<<8;var M=GLLib.s_PFX_params[11][2];var al=0;var aj=0;if(GLLib.s_PFX_params[11][3]==0){for(var at=0;at<Q;++at){var ah=at*R;var af=ah+P;for(var ar=R-1;ar>=0;--ar){var ad=p[af+ar];var ab=ad&16711935;var Z=ad&65280;var X=ad&255;if(ab>O&&Z>N&&X>M){ab=0;Z=0}al=(ab+((al-ab)*ao>>7)&16711935);aj=(Z+((aj-Z)*ao>>7)&65280);E[ah+ar]=(al|aj)}for(var aq=0;aq<R;++aq){var V=E[ah+aq];var U=V&16711935;var J=V&65280;al=(U+((al-U)*ao>>7)&16711935);aj=(J+((aj-J)*ao>>7)&65280);E[ah+aq]=(al|aj)}}}else{if(GLLib.s_PFX_params[11][3]!=1){GLLib.Dbg("PFX_ProcessGlowBlock: Unknown GLOW thresholding type!");return}for(var ap=0;ap<Q;++ap){var H=ap*R;var F=H+P;for(var C=R-1;C>=0;--C){var A=p[F+C];var y=A&16711935;var w=A&65280;var u=A&255;if(y<O&&w<N&&u<M){y=0;w=0}al=(y+((al-y)*ao>>7)&16711935);aj=(w+((aj-w)*ao>>7)&65280);E[H+C]=(al|aj)}for(var s=0;s<R;++s){var r=E[H+s];var o=r&16711935;var m=r&65280;al=(o+((al-o)*ao>>7)&16711935);aj=(m+((aj-m)*ao>>7)&65280);E[H+s]=(al|aj)}}}for(var h=0;h<R;++h){var g=h;for(var f=Q-1;f>=0;--f){var e=E[g];var d=e&16711935;var c=e&65280;al=(d+((al-d)*T>>7)&16711935);aj=(c+((aj-c)*T>>7)&65280);E[g]=(al|aj);g+=R}var b=g-R;for(var a=0;a<Q;++a){var an=E[b];var am=an&16711935;var ak=an&65280;al=(am+((al-am)*T>>7)&16711935);aj=(ak+((aj-ak)*T>>7)&65280);E[b]=(al|aj);b-=R}}S=S*S>>GLLib.s_PFX_params[11][14];for(var ai=0;ai<Q;++ai){var ag=ai*R;var ae=ag+P;for(var ac=R-1;ac>=0;--ac){var aa=E[ag+ac];var Y=p[ae+ac];var W=aa>>16&255;var L=aa>>8&255;var K=aa&255;var I=W*S>>8<<16;var G=L*S>>8<<8;var D=K*S>>8;var B=Y&16711680;var z=Y&65280;var x=Y&255;var v=I+B;if(v>16711680){v=16711680}var t=G+z;if(t>65280){t=65280}var q=D+x;if(q>255){q=255}E[ag+ac]=(-16777216|v|t|q)}}};GLLib.PFX_ProcessBlend_dup_aIaIIIZZ=function(h,f,e,g,a,c){g=((g<0)?0:((g>255)?255:g));g&=255;if(c){while(e>0){--e;var d=h[e]>>24&255;if(d!=0){f[e]=((h[e]&16777215)|(d*g>>8&255)<<24)}else{f[e]=0}}}else{if(a){g<<=24;while(e>0){--e;if((h[e]&-16777216)!=0){f[e]=((h[e]&16777215)|g)}else{f[e]=0}}}else{for(g<<=24;e>0;--e,f[e]=((h[e]&16777215)|g)){}}}GLLib.s_PFX_hasAlpha=true;return f};GLLib.PFX_ProcessBlend_dup_aBaIaIIIZZ=function(h,f,e,g,d,a,c){GLLib.Dbg("WARNING: BLEND effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessBlend_dup_aIaIIIZZ(GLLib.PFX_GetPalIndexARGB_dup_aBaIaI(h,f,e),e,g,d,a,c)};GLLib.PFX_ProcessBlendSimple_dup_aIII=function(d,c,b){c=(c<<24&-16777216);for(var a=b-1;a>=0;--a){d[a]=(c|(d[a]&16777215))}};GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIZ=function(d,h,A,u,p,o,m,g,z){if(true){var f=GLLib.s_PFX_params[10][1];var e=GLLib.s_PFX_params[10][2];var c=GLLib.s_PFX_params[10][3]&16777215;var a=GLLib.s_PFX_params[10][5];var t=(1<<a)-1;var s=0;if(GLLib.s_PFX_params[10][4]!=0){f=f-u-(e>>1)}GLLib.PFX_WritePixelData(d,h,0,o,u,p,o,m,true);if(!z){for(var y=0;y<m;++y){for(var x=0;x<o;++x){var r=0;if(x>f&&x<f+e&&(h[s]&-16777216)!=0){r=t-gloft.casttoint(((((x-(f+(e>>1))<0)?(-(x-(f+(e>>1)))):(x-(f+(e>>1))))<<a)-1)/(e>>1))}A[s]=((r&255)<<24|c);++s}}}else{for(var w=0;w<m;++w){for(var v=0;v<o;++v){var q=0;if(v>f&&v<f+e&&(h[s]&-16777216)!=0){q=t-gloft.casttoint((((v-(f+(e>>1))<0)?(-(v-(f+(e>>1)))):(v-(f+(e>>1))))<<a)/(e>>1))}A[s]=(((h[s]>>24&255)*q>>8&255)<<24|c);++s}}}GLLib.s_PFX_hasAlpha=true;return A}GLLib.Dbg("PFX_ProcessShineEffect: Shine Effect is not enabled, you must set pfx_useSpriteEffectShine to TRUE!");return null};GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIZ=function(c,h,k,j,a,g,f,e,d,i){GLLib.Dbg("WARNING: SHINE effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIZ(c,GLLib.PFX_GetPalIndexARGB_dup_aBaIaI(h,k,j),j,a,g,f,e,d,i)};GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIZZ=function(d,h,f,e,g,a,c){if(true){while(e>0){--e;if((h[e]&-16777216)!=0){f[e]=g}else{f[e]=h[e]}}if((g&-16777216)!=-16777216){GLLib.s_PFX_hasAlpha=true}return f}GLLib.Dbg("PFX_ProcessStencilEffect: Stencil Effect is not enabled, you must set pfx_useSpriteEffectStencil to TRUE!");return null};GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIZZ=function(d,i,g,f,h,e,a,c){GLLib.Dbg("WARNING: STENCIL effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIZZ(d,GLLib.PFX_GetPalIndexARGB_dup_aBaIaI(i,g,f),f,h,e,a,c)};GLLib.PFX_ComputeBlinkingColor_dup_III=function(a,j,h){var g=GLLib.Math_FixedPoint_Multiply(GLLib.s_PFX_timer*360,a)>>10;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var i=GLLib.Math_Cos(GLLib.Math_Angle90-g);var f=(i<0)?(-i):i;var e=j>>24&255;var d=j>>16&255;var c=j>>8&255;var b=j&255;return(e+(((h>>24&255)-e)*f+(1<<8-1)>>8)&255)<<24|(d+(((h>>16&255)-d)*f+(1<<8-1)>>8)&255)<<16|(c+(((h>>8&255)-c)*f+(1<<8-1)>>8)&255)<<8|(b+(((h&255)-b)*f+(1<<8-1)>>8)&255)};GLLib.PFX_ApplyAlphaGradient=function(h,y,q,p,m,f,d,c){if(0>m||m>255){GLLib.Assert(false,"PFX_ApplyAlphaGradient: startAlpha parameter is not [0,255], its "+m)}if(0>f||f>255){GLLib.Assert(false,"PFX_ApplyAlphaGradient: endAlpha parameter is not [0,255], its "+f)}if(d<-100){GLLib.Assert(false,"PFX_ApplyAlphaGradient: startBuffer parameter is invalid, its "+d)}if(c<-100){GLLib.Assert(false,"PFX_ApplyAlphaGradient: endBuffer parameter is invalid, its "+c)}if(h.length<y*q){GLLib.Assert(false,"PFX_ApplyAlphaGradient: pix length is not large enough for the given W and H paramters!")}if(p==32||p==16){if(d<0){d=gloft.casttoint(((d<0)?(-d):d)*q/100)}if(c<0){c=gloft.casttoint(((c<0)?(-c):c)*q/100)}if(q<d+c){GLLib.Assert(false,"PFX_ApplyAlphaGradient: Error, buffers are larger than gradient dimension!")}if(p==32){var b=m;m=f;f=b;var a=d;d=c;c=a}var x=f-m;var w=m;var v=q-1-((0>d-1)?0:(d-1))-((0>c-1)?0:(c-1));d=q-d;var u=(v==0)?0:(gloft.casttoint((x<<16)/v));var t=w<<16;var s=t<<8&-16777216;var r=y*q;var E=q;while(E>0){--E;var C=y;while(C>0){--C;--r;if((h[r]&-16777216)!=0){h[r]=(s|(h[r]&16777215))}}if(E>=c&&E<=d){t+=u;s=(t<<8&-16777216)}}}else{if(p==4||p==8){if(d<0){d=gloft.casttoint(((d<0)?(-d):d)*y/100)}if(c<0){c=gloft.casttoint(((c<0)?(-c):c)*y/100)}if(y<d+c){GLLib.Assert(false,"PFX_ApplyAlphaGradient: Error, buffers are larger than gradient dimension!")}if(p==8){var o=m;m=f;f=o;var g=d;d=c;c=g}var e=f-m;var I=m;var H=y-1-((0>d-1)?0:(d-1))-((0>c-1)?0:(c-1));d=y-d;var G=(H==0)?0:(gloft.casttoint((e<<16)/H));var F=I<<16;var D=F<<8&-16777216;var B=y*q;var A=y;while(A>0){--A;for(var z=--B;z>=0;z-=y){if((h[z]&-16777216)!=0){h[z]=(D|(h[z]&16777215))}}if(A>=c&&A<=d){F+=G;D=(F<<8&-16777216)}}}}};GLLib.PFX_GetGrayscaleColor_dup_I=function(b){var a=(b&16711680)>>16&255;return(b&-65536)|a<<8|a};GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIZ=function(d,p,w,D,r,o,l,h,f,M){if(p==null){GLLib.Assert(false,"PFX_ProcessRotating: src cannot be null!")}if(o<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source width is negative!")}if(l<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source height is negative!")}if((f&4)!=0){f&=-5;var e=h+gloft.casttoint(90*GLLib.Math_AngleMUL/360);if(e>2147483647){GLLib.Assert(false,"Math_FixedPoint_Add(): Multiplication Integer Overflow")}h=gloft.casttoint(e)}if(f!=0){p=ASprite.TransformRGB_dup_aSIIIaS(p,o,l,f,null);w=ASprite.GetPixelBuffer_short_dup_aSII(p,o,l)}var c=h;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var C=GLLib.Math_Cos(GLLib.Math_Angle90-c);var B=GLLib.Math_Cos(h);GLLib.PFX_Rotate_GetRotatedRectSize(C,B,o,l,ASprite.s_rc);var u=ASprite.s_rc[0];var s=ASprite.s_rc[1];var a=u>>1;var A=s>>1;var z=u-o>>1;var y=s-l>>1;var x=A*C;var v=-A*B;var t=a*C;var q=a*B;var m=a-z;var k=A-y;var g=-q;var L=-t;for(var H=0;H<u;++H){var K=g-x;var J=v-L;var I=H;for(var F=0;F<s;++F){var G=m+(K+(1<<8-1)>>8);var E=k+(J+(1<<8-1)>>8);K+=C;J+=B;if(G>=0&&E>=0&&G<o&&E<l){w[I]=p[E*o+G]}else{w[I]=0}I+=u}g+=B;L+=C}GLLib.s_PFX_newSizeX=u;GLLib.s_PFX_newSizeY=s;if(M){if(w==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}return(M?null:w)};GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIZZIZ=function(S,ag,am,ah,P,E,B,O,N,M,an,H,L,G){if(ag==null){GLLib.Assert(false,"PFX_ProcessScaling: src cannot be null!")}var Q=ag.length;var K=0;if(E<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source width is negative!")}if(B<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source height is negative!")}if(O<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale X is negative!")}if(N<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale Y is negative!")}var J=L&-2;if((L&4)!=0){J=L;L=0}if(J!=0){if((J&4)!=0){GLLib.s_PFX_sizeX=B;GLLib.s_PFX_sizeY=E;E=GLLib.s_PFX_sizeX;B=GLLib.s_PFX_sizeY}ag=ASprite.TransformRGB_dup_aSIIIaS(ag,E,B,J,null);am=ASprite.GetPixelBuffer_short_dup_aSII(ag,E,B)}var ae=gloft.casttoint(E*O/100)+((E*O%100!=0)?1:0);var ac=gloft.casttoint(B*N/100)+((B*N%100!=0)?1:0);GLLib.s_PFX_newSizeX=ae;GLLib.s_PFX_newSizeY=ac;if(ae<=0||ac<=0){return null}var I=gloft.casttoint((E<<8)/ae);var ab=gloft.casttoint((B<<8)/ac);var F=GLLib.GetClipX(S,false);var D=GLLib.GetClipY(S,false);var r=GLLib.GetClipWidth(S,false);var q=GLLib.GetClipHeight(S,false);var aa=ae;var Z=0;var Y=ae;var X=0;if(ah<F){ae-=F-ah;if(ae<=0){return null}Z=F-ah;ah=F}if(P<D){ac-=D-P;if(ac<=0){return null}X=D-P;P=D}if(ah+ae>F+r){ae=F+r-ah;if(ae<=0){return null}Y=Z+ae}if(P+ac>D+q){ac=D+q-P;if(ac<=0){return null}}var W=gloft.casttoint(am.length/ae);if(W<=0){GLLib.Dbg("PFX_ProcessScaling Warning: Scale size is too big for the current buffer size: "+am.length+" / "+ae+". Effect is not performed");return null}var V=W;var U=P;if(M<0){var T=W*ae;var R=gloft.casttoint(null);var C=gloft.casttoint(null);if((L&1)!=0){R=(aa-Y)*I;C=I}else{R=(Y-1)*I;C=-I}var A=ac-gloft.casttoint(ac/W)*W;if(A==0){A=W}var z=A*ae;var y=P+ac-A;var x=ac;var w=(x+X)*ab;while(--x>=0){w-=ab;var v=((w>>8)*E<<8)+R;while(--Y>=Z){if(v>>8>=Q){GLLib.Assert(false,"PFX_ProcessScaling: Source image position it's outside image range!")}am[--z]=ag[v>>8];v+=C}if(--A==0){if(G){if(am==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}y-=W;A=W;z=T}}}else{var u=gloft.casttoint(null);var t=gloft.casttoint(null);if((L&1)!=0){u=(aa-Z-1)*I;t=-I}else{u=Z*I;t=I}if(!H&&!an){M=(M&240)<<8;for(var al=0,s=X*ab;al<ac;++al,s+=ab){var p=(s>>8)*E;for(var ak=0,o=u;ak<ae;++ak,o+=t){am[K++]=gloft.casttoshort((M|(ag[p+(o>>8)]&4095)))}if(--V==0){if(G){if(am==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}U+=W;V=W;K=0}}}else{if(!H&&an){M=(M&240)<<8;for(var aj=0,m=X*ab;aj<ac;++aj,m+=ab){var h=(m>>8)*E;for(var ai=0,g=u;ai<ae;++ai,g+=t){var f=gloft.casttoshort((ag[h+(g>>8)]&4095));if(f!=3855&&f!=0){am[K++]=gloft.casttoshort((M|f))}else{am[K++]=0}}if(--V==0){if(G){if(am==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}U+=W;V=W;K=0}}}else{for(var e=0,d=X*ab;e<ac;++e,d+=ab){var c=(d>>8)*E;for(var a=0,af=u;a<ae;++a,af+=t){var ad=c+(af>>8);am[K++]=gloft.casttoshort((((ag[ad]>>8&240)*M>>8&255&240)<<8|(ag[ad]&4095)))}if(--V==0){if(G){if(am==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}U+=W;V=W;K=0}}}}if(G&&V!=W){if(am==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}}return(G?null:am)};GLLib.PFX_PrepareYPerspectiveBlock_dup_aSaSIIIIIIIIIIIIII=function(h,N,z,r,p,m,f,d,c,b,a,x,w,v,u,t){var s=f>>8;var q=0;var I=x+(1<<8-1)>>8;var o=w+(1<<8-1)>>8;for(var G=d;G<c;++G){if(o>=b){if(I<a){if(false){var g=(G-d)*r;for(var E=a-o-1;E>=0;--E){h[g++]=0}q=g+r;for(var C=I-b-1;C>=0;--C){h[--q]=0}--q}else{var e=G-d;for(var M=I-b-1;M>=0;--M){h[e]=0;e+=z}var L=(r-1)*z+G-d;for(var K=a-o-1;K>=0;--K){h[L]=0;L-=z}}if(I<o){if(!false){q=G-d}var J=0;var H=0;var F=gloft.casttoint((m<<8)/(o-I));if(I<b){J+=F*(b-I);I=b}else{if(!false){q+=z*(I-b)}}if(o>a){o=a}var B=gloft.casttoshort(null);if(false){var D=gloft.casttoint(s/p);B=N[(s-D*p)*m+(m-1-D)]}else{B=N[s]}while(I<o){var A=J>>8;if(H!=A){s+=(A-H)*p;if(false){var y=gloft.casttoint(s/p);B=N[(s-y*p)*m+(m-1-y)]}else{B=N[s]}H=A}h[q]=B;if(false){--q}else{q+=z}J+=F;++I}}x+=u;w+=t;f+=v;I=x>>8;o=w>>8;s=f>>8;if(s<0){s=0;f=0}else{if(s>=p){s=p-1;f=s<<8}}}}}return f};GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIZ=function(w,c,a,M,I,u,t,s,r,q,N){if(c==null){GLLib.Assert(false,"PFX_ProcessRotating: src cannot be null!")}if(t<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source width is negative!")}if(s<0){GLLib.Assert(false,"PFX_ProcessRotating: The module source height is negative!")}if((q&4)!=0){q&=-5;var p=r+gloft.casttoint(90*GLLib.Math_AngleMUL/360);if(p>2147483647){GLLib.Assert(false,"Math_FixedPoint_Add(): Multiplication Integer Overflow")}r=gloft.casttoint(p)}if(q!=0){c=ASprite.TransformRGB_dup_aBIIIaB(c,t,s,q,null);M=ASprite.GetPixelBuffer_short_dup_aSII(null,t,s)}var o=r;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var K=GLLib.Math_Cos(GLLib.Math_Angle90-o);var d=GLLib.Math_Cos(r);GLLib.PFX_Rotate_GetRotatedRectSize(K,d,t,s,ASprite.s_rc);var H=ASprite.s_rc[0];var G=ASprite.s_rc[1];var m=H>>1;var F=G>>1;var E=H-t>>1;var D=G-s>>1;var C=F*K;var B=-F*d;var A=m*K;var z=m*d;var y=m-E;var x=F-D;var v=-z;var l=-A;for(var L=0;L<H;++L){var k=v-C;var h=B-l;var g=L;for(var J=0;J<G;++J){var f=y+(k+(1<<8-1)>>8);var e=x+(h+(1<<8-1)>>8);k+=K;h+=d;if(f>=0&&e>=0&&f<t&&e<s){M[g]=a[c[e*t+f]&255]}else{M[g]=0}g+=H}v+=d;l+=K}GLLib.s_PFX_newSizeX=H;GLLib.s_PFX_newSizeY=G;if(N){if(M==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}return(N?null:M)};GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIZZIZ=function(U,r,q,an,ai,R,G,D,Q,P,O,ao,J,N,I){if(r==null){GLLib.Assert(false,"PFX_ProcessScaling: src cannot be null!")}var S=r.length;var M=0;if(G<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source width is negative!")}if(D<0){GLLib.Assert(false,"PFX_ProcessScaling: The module source height is negative!")}if(Q<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale X is negative!")}if(P<0){GLLib.Assert(false,"PFX_ProcessScaling: The scale Y is negative!")}var L=N&-2;if((N&4)!=0){L=N;N=0}if(L!=0){if((L&4)!=0){GLLib.s_PFX_sizeX=D;GLLib.s_PFX_sizeY=G;G=GLLib.s_PFX_sizeX;D=GLLib.s_PFX_sizeY}r=ASprite.TransformRGB_dup_aBIIIaB(r,G,D,L,null);an=ASprite.GetPixelBuffer_short_dup_aSII(null,G,D)}var ag=gloft.casttoint(G*Q/100)+((G*Q%100!=0)?1:0);var ae=gloft.casttoint(D*P/100)+((D*P%100!=0)?1:0);GLLib.s_PFX_newSizeX=ag;GLLib.s_PFX_newSizeY=ae;if(ag<=0||ae<=0){return null}var K=gloft.casttoint((G<<8)/ag);var ad=gloft.casttoint((D<<8)/ae);var H=GLLib.GetClipX(U,false);var F=GLLib.GetClipY(U,false);var t=GLLib.GetClipWidth(U,false);var s=GLLib.GetClipHeight(U,false);var ac=ag;var ab=0;var aa=ag;var Z=0;if(ai<H){ag-=H-ai;if(ag<=0){return null}ab=H-ai;ai=H}if(R<F){ae-=F-R;if(ae<=0){return null}Z=F-R;R=F}if(ai+ag>H+t){ag=H+t-ai;if(ag<=0){return null}aa=ab+ag}if(R+ae>F+s){ae=F+s-R;if(ae<=0){return null}}var Y=gloft.casttoint(an.length/ag);if(Y<=0){GLLib.Dbg("PFX_ProcessScaling Warning: Scale size is too big for the current buffer size: "+an.length+" / "+ag+". Effect is not performed");return null}var X=Y;var W=R;if(O<0){var V=Y*ag;var T=gloft.casttoint(null);var E=gloft.casttoint(null);if((N&1)!=0){T=(ac-aa)*K;E=K}else{T=(aa-1)*K;E=-K}var C=ae-gloft.casttoint(ae/Y)*Y;if(C==0){C=Y}var B=C*ag;var A=R+ae-C;var z=ae;var y=(z+Z)*ad;while(--z>=0){y-=ad;var x=((y>>8)*G<<8)+T;while(--aa>=ab){if(x>>8>=S){GLLib.Assert(false,"PFX_ProcessScaling: Source image position it's outside image range!")}an[--B]=q[r[x>>8]&255];x+=E}if(--C==0){if(I){if(an==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}A-=Y;C=Y;B=V}}}else{var w=gloft.casttoint(null);var v=gloft.casttoint(null);if((N&1)!=0){w=(ac-ab-1)*K;v=-K}else{w=ab*K;v=K}if(!J&&!ao){O=(O&240)<<8;for(var am=0,u=Z*ad;am<ae;++am,u+=ad){var p=(u>>8)*G;for(var al=0,o=w;al<ag;++al,o+=v){an[M++]=gloft.casttoshort((O|(q[r[p+(o>>8)]&255]&4095)))}if(--X==0){if(I){if(an==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}W+=Y;X=Y;M=0}}}else{if(!J&&ao){O=(O&240)<<8;for(var ak=0,m=Z*ad;ak<ae;++ak,m+=ad){var h=(m>>8)*G;for(var aj=0,g=w;aj<ag;++aj,g+=v){var f=gloft.casttoshort((q[r[h+(g>>8)]&255]&4095));if(f!=3855&&f!=0){an[M++]=gloft.casttoshort((O|f))}else{an[M++]=0}}if(--X==0){if(I){if(an==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}W+=Y;X=Y;M=0}}}else{for(var e=0,d=Z*ad;e<ae;++e,d+=ad){var c=(d>>8)*G;for(var a=0,ah=w;a<ag;++a,ah+=v){var af=c+(ah>>8);an[M++]=gloft.casttoshort((((q[r[af]&255]>>8&240)*O>>8&255&240)<<8|(q[r[af]&255]&4095)))}if(--X==0){if(I){if(an==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}W+=Y;X=Y;M=0}}}}if(I&&X!=Y){if(an==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}}return(I?null:an)};GLLib.PFX_PrepareYPerspectiveBlock_dup_aSaBaSIIIIIIIIIIIIII=function(a,o,h,K,z,y,x,w,v,u,t,s,J,I,H,G,F){var E=w>>8;var D=0;var O=J+(1<<8-1)>>8;var C=I+(1<<8-1)>>8;for(var N=v;N<u;++N){if(C>=t){if(O<s){if(false){var B=(N-v)*z;for(var M=s-C-1;M>=0;--M){a[B++]=0}D=B+z;for(var L=O-t-1;L>=0;--L){a[--D]=0}--D}else{var A=N-v;for(var r=O-t-1;r>=0;--r){a[A]=0;A+=K}var q=(z-1)*K+N-v;for(var p=s-C-1;p>=0;--p){a[q]=0;q-=K}}if(O<C){if(!false){D=N-v}var m=0;var g=0;var f=gloft.casttoint((x<<8)/(C-O));if(O<t){m+=f*(t-O);O=t}else{if(!false){D+=K*(O-t)}}if(C>s){C=s}var d=gloft.casttoshort(null);if(false){var e=gloft.casttoint(E/y);d=h[o[(E-e*y)*x+(x-1-e)]&255]}else{d=h[o[E]&255]}while(O<C){var c=m>>8;if(g!=c){E+=(c-g)*y;if(false){var b=gloft.casttoint(E/y);d=h[o[(E-b*y)*x+(x-1-b)]&255]}else{d=h[o[E]&255]}g=c}a[D]=d;if(false){--D}else{D+=K}m+=f;++O}}J+=G;I+=F;w+=H;O=J>>8;C=I>>8;E=w>>8;if(E<0){E=0;w=0}else{if(E>=y){E=y-1;w=E<<8}}}}}return w};GLLib.PFX_BlurLBlock_dup_IaSII=function(a,k,j,h){var g=h&3855;var f=h&240;j>>=4;for(var e=a-1;e>=0;--e){var d=k[e];var c=gloft.casttoshort((d&3855));var b=gloft.casttoshort((d&240));g=(c+((g-c)*j>>3)&3855);f=(b+((f-b)*j>>3)&240);k[e]=gloft.casttoshort((61440|g|f))}return gloft.casttoshort((g|f))};GLLib.PFX_BlurRBlock_dup_IaSII=function(a,k,j,h){var g=h&3855;var f=h&240;j>>=4;for(var e=0;e<a;++e){var d=k[e];var c=gloft.casttoshort((d&3855));var b=gloft.casttoshort((d&240));g=(c+((g-c)*j>>3)&3855);f=(b+((f-b)*j>>3)&240);k[e]=gloft.casttoshort((61440|g|f))}return gloft.casttoshort((g|f))};GLLib.PFX_ProcessAdditive_dup_aSIIIaSIIIIII=function(h,w,p,m,D,k,f,d,c,b,a){var v=0;var u=(a&15)<<12;for(var y=k;y!=d;y+=f){var t=w+p;for(var x=c;x>=0;--x){var s=h[t];var r=D[v];var q=gloft.casttoshort((s&3840));var o=gloft.casttoshort((s&240));var l=gloft.casttoshort((s&15));var g=gloft.casttoshort((r&3840));var e=gloft.casttoshort((r&240));var C=gloft.casttoshort((r&15));var B=q+g;if(B>3840){B=3840}var A=o+e;if(A>240){A=240}var z=l+C;if(z>15){z=15}D[v]=gloft.casttoshort((u|B|A|z));t+=b;++v}w+=m}};GLLib.PFX_ProcessMultiplicative_dup_aSIIIaSIIIIII=function(h,w,p,m,D,k,f,d,c,b,a){var v=0;var u=(a&15)<<12;for(var y=k;y!=d;y+=f){var t=w+p;for(var x=c;x>=0;--x){var s=h[t];var r=D[v];var q=(s&3840)>>8;var o=(s&240)>>4;var l=gloft.casttoshort((s&15));var g=(r&3840)>>8;var e=(r&240)>>4;var C=gloft.casttoshort((r&15));var B=(q*g>>3)+g;if(B>15){B=15}var A=(o*e>>3)+e;if(A>15){A=15}var z=(l*C>>3)+C;if(z>15){z=15}D[v]=gloft.casttoshort((u|B<<8|A<<4|z));t+=b;++v}w+=m}};GLLib.PFX_AdditiveBlock_dup_IaSI=function(a,j,i){var h=i>>12&15728640;var g=i>>8&61440;var f=i>>4&240;while(--a>=0){var e=j[a];var d=gloft.casttoshort((e&3840));var c=gloft.casttoshort((e&240));var b=gloft.casttoshort((e&15));var m=d+h;if(m>3840){m=3840}var l=c+g;if(l>240){l=240}var k=b+f;if(k>15){k=15}j[a]=gloft.casttoshort((61440|m|l|k))}};GLLib.PFX_SubtractiveBlock_dup_IaSI=function(a,j,i){var h=(i&16711680)>>20;var g=(i&65280)>>12;var f=(i&255)>>4;while(--a>=0){var e=j[a];var d=(e&3840)>>8;var c=(e&240)>>4;var b=gloft.casttoshort((e&15));var m=d-h;if(m<0){m=0}var l=c-g;if(l>0){l=0}var k=b-f;if(k>0){k=0}j[a]=gloft.casttoshort((61440|m<<8|l<<4|k))}};GLLib.PFX_MultiplicativeBlock_dup_IaSI=function(a,k,i){var h=(i&16711680)>>20;var g=(i&65280)>>12;var f=(i&255)>>4;while(--a>=0){var e=k[a];var d=(e&3840)>>8;var c=(e&240)>>4;var b=gloft.casttoshort((e&15));var p=(h*d>>3)+d;if(p>15){p=15}var o=p<<8;var m=(g*c>>3)+c;if(m>15){m=15}var l=m<<4;var j=(f*b>>3)+b;if(j>15){j=15}k[a]=gloft.casttoshort((61440|o|l|j))}};GLLib.PFX_ProcessGrayscaleEffect_dup_aSaSIIIZZ=function(m,s,a,l,k,q,p){var h=a;if(k<0){if(l<=0){while(h!=0){--h;var j=m[h];var g=(j&3840)>>8&15;s[h]=gloft.casttoshort(((j&65280)|g<<4|g))}}else{if(l<255){while(h!=0){--h;var f=m[h];var e=(f&3840)>>8&15;s[h]=gloft.casttoshort(((f&65280)|(e+((((f&240)>>4&15)-e)*l>>8)&15)<<4|(e+(((f&15)-e)*l>>8)&15)))}}else{s=m}}}else{GLLib.s_PFX_hasAlpha=true;if(p){while(h!=0){--h;var d=(m[h]&3840)>>8&15;s[h]=gloft.casttoshort((((m[h]>>12&15)*k>>8&15)<<12|d<<8|d<<4|d))}}else{if(q){k=(k<<8&61440);while(h!=0){--h;var c=m[h];if((c&3855)!=3855){var r=c>>8&15;s[h]=gloft.casttoshort((k|r<<8|r<<4|r))}else{s[h]=0}}}else{var o=gloft.casttoint(null);for(k=(k<<8&61440);h!=0;--h,o=(m[h]>>8&15),s[h]=gloft.casttoshort((k|o<<8|o<<4|o))){}}}}return s};GLLib.PFX_ProcessGrayscaleEffect_dup_aBaSaSIIIZZ=function(i,g,f,h,e,d,a,c){GLLib.Dbg("WARNING: GRAYSCALE effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessGrayscaleEffect_dup_aSaSIIIZZ(GLLib.PFX_GetPalIndexARGB_dup_aBaSaS(i,g,f),f,h,e,d,a,c)};GLLib.PFX_ProcessGlowBlock_dup_aSaSIIIIII=function(p,E,ao,T,S,R,Q,P){var O=(GLLib.s_PFX_params[11][0]&240)<<4;var N=GLLib.s_PFX_params[11][1]&240;var M=(GLLib.s_PFX_params[11][2]&240)>>4;ao>>=4;T>>=4;var al=0;var aj=0;if(GLLib.s_PFX_params[11][3]==0){for(var at=0;at<Q;++at){var ah=at*R;var af=ah+P;for(var ar=R-1;ar>=0;--ar){var ad=p[af+ar];var ab=gloft.casttoshort((ad&3855));var Z=gloft.casttoshort((ad&240));var X=gloft.casttoshort((ad&15));if(ab>O&&Z>N&&X>M){ab=0;Z=0}al=(ab+((al-ab)*ao>>3)&3855);aj=(Z+((aj-Z)*ao>>3)&240);E[ah+ar]=gloft.casttoshort((al|aj))}for(var aq=0;aq<R;++aq){var V=E[ah+aq];var U=gloft.casttoshort((V&3855));var J=gloft.casttoshort((V&240));al=(U+((al-U)*ao>>3)&3855);aj=(J+((aj-J)*ao>>3)&240);E[ah+aq]=gloft.casttoshort((al|aj))}}}else{if(GLLib.s_PFX_params[11][3]!=1){GLLib.Dbg("PFX_ProcessGlowBlock: Unknown GLOW thresholding type!");return}for(var ap=0;ap<Q;++ap){var H=ap*R;var F=H+P;for(var C=R-1;C>=0;--C){var A=p[F+C];var y=gloft.casttoshort((A&3855));var w=gloft.casttoshort((A&240));var u=gloft.casttoshort((A&15));if(y<O&&w<N&&u<M){y=0;w=0}al=(y+((al-y)*ao>>3)&3855);aj=(w+((aj-w)*ao>>3)&240);E[H+C]=gloft.casttoshort((al|aj))}for(var s=0;s<R;++s){var r=E[H+s];var o=gloft.casttoshort((r&3855));var m=gloft.casttoshort((r&240));al=(o+((al-o)*ao>>3)&3855);aj=(m+((aj-m)*ao>>3)&240);E[H+s]=gloft.casttoshort((al|aj))}}}for(var h=0;h<R;++h){var g=h;for(var f=Q-1;f>=0;--f){var e=E[g];var d=gloft.casttoshort((e&3855));var c=gloft.casttoshort((e&240));al=(d+((al-d)*T>>3)&3855);aj=(c+((aj-c)*T>>3)&240);E[g]=gloft.casttoshort((al|aj));g+=R}var b=g-R;for(var a=0;a<Q;++a){var an=E[b];var am=gloft.casttoshort((an&3855));var ak=gloft.casttoshort((an&240));al=(am+((al-am)*T>>3)&3855);aj=(ak+((aj-ak)*T>>3)&240);E[b]=gloft.casttoshort((al|aj));b-=R}}S=S*S>>GLLib.s_PFX_params[11][14];for(var ai=0;ai<Q;++ai){var ag=ai*R;var ae=ag+P;for(var ac=R-1;ac>=0;--ac){var aa=E[ag+ac];var Y=p[ae+ac];var W=aa>>8&15;var L=aa>>4&15;var K=gloft.casttoshort((aa&15));var I=W*S>>8<<8;var G=L*S>>8<<4;var D=K*S>>8;var B=gloft.casttoshort((Y&3840));var z=gloft.casttoshort((Y&240));var x=gloft.casttoshort((Y&15));var v=I+B;if(v>3840){v=3840}var t=G+z;if(t>240){t=240}var q=D+x;if(q>15){q=15}E[ag+ac]=gloft.casttoshort((61440|v|t|q))}}};GLLib.PFX_ProcessBlend_dup_aSaSIIZZ=function(g,e,d,f,a,c){f=((f<0)?0:((f>255)?255:f));f&=255;if(c){while(d>0){--d;e[d]=gloft.casttoshort(((g[d]&4095)|((g[d]>>12&15)*f>>8&15)<<12))}}else{if(a){f=(f<<8&61440);while(d>0){--d;if((g[d]&4095)!=3855){e[d]=gloft.casttoshort(((g[d]&4095)|f))}else{e[d]=0}}}else{for(f=(f<<8&61440);d>0;--d,e[d]=gloft.casttoshort(((g[d]&4095)|f))){}}}GLLib.s_PFX_hasAlpha=true;return e};GLLib.PFX_ProcessBlend_dup_aBaSaSIIZZ=function(h,f,e,g,d,a,c){GLLib.Dbg("WARNING: BLEND effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessBlend_dup_aSaSIIZZ(GLLib.PFX_GetPalIndexARGB_dup_aBaSaS(h,f,e),e,g,d,a,c)};GLLib.PFX_ProcessBlendSimple_dup_aSII=function(d,c,b){c=(c<<8&61440);for(var a=b-1;a>=0;--a){d[a]=gloft.casttoshort((c|(d[a]&4095)))}};GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIZ=function(d,h,z,t,p,o,m,g,y){if(true){var f=GLLib.s_PFX_params[10][1];var e=GLLib.s_PFX_params[10][2];var c=GLLib.s_PFX_params[10][3]&16777215;var a=0;var s=((c&-16777216)>>16&61440)|((c&16711680)>>12&3840)|((c&65280)>>8&240)|((c&255)>>4&15);if(h==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");if(!y){for(var x=0;x<m;++x){for(var w=0;w<o;++w){var r=0;if(w>f&&w<f+e&&(h[a]&61440)!=0&&(h[a]&4095)!=0){r=255-gloft.casttoint((((w-(f+(e>>1))<0)?(-(w-(f+(e>>1)))):(w-(f+(e>>1))))<<8)/(e>>1))}z[a]=gloft.casttoshort(((r<<12&61440)|s));++a}}}else{for(var v=0;v<m;++v){for(var u=0;u<o;++u){var q=0;if(u>f&&u<f+e&&(h[a]&61440)!=0&&(h[a]&4095)!=0){q=255-gloft.casttoint((((u-(f+(e>>1))<0)?(-(u-(f+(e>>1)))):(u-(f+(e>>1))))<<8)/(e>>1))}z[a]=gloft.casttoshort((((h[a]>>12&15)*q>>8<<12&61440)|s));++a}}}GLLib.s_PFX_hasAlpha=true;return z}GLLib.Dbg("PFX_ProcessShineEffect: Shine Effect is not enabled, you must set pfx_useSpriteEffectShine to TRUE!");return null};GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIZ=function(c,h,k,j,a,g,f,e,d,i){GLLib.Dbg("WARNING: SHINE effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIZ(c,GLLib.PFX_GetPalIndexARGB_dup_aBaSaS(h,k,j),j,a,g,f,e,d,i)};GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIZZ=function(d,j,g,f,h,a,c){if(true){var e=gloft.casttoshort(h);while(f>0){--f;if((j[f]&-16777216)!=0){g[f]=e}else{g[f]=j[f]}}if((e&61440)!=61440){GLLib.s_PFX_hasAlpha=true}return g}GLLib.Dbg("PFX_ProcessStencilEffect: Stencil Effect is not enabled, you must set pfx_useSpriteEffectStencil to TRUE!");return null};GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIZZ=function(d,i,g,f,h,e,a,c){GLLib.Dbg("WARNING: STENCIL effect is NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIZZ(d,GLLib.PFX_GetPalIndexARGB_dup_aBaSaS(i,g,f),f,h,e,a,c)};GLLib.PFX_ComputeBlinkingColor_dup_ISS=function(a,j,h){var g=GLLib.Math_FixedPoint_Multiply(GLLib.s_PFX_timer*360,a)>>10;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}var i=GLLib.Math_Cos(GLLib.Math_Angle90-g);var f=gloft.casttoshort(((i<0)?(-i):i));var e=j>>12&15;var d=j>>8&15;var c=j>>4&15;var b=gloft.casttoshort((j&15));return gloft.casttoshort(((e+(((h>>12&15)-e)*f+(1<<8-1)>>8)&15)<<12|(d+(((h>>8&15)-d)*f+(1<<8-1)>>8)&15)<<8|(c+(((h>>4&15)-c)*f+(1<<8-1)>>8)&15)<<4|(b+(((h&15)-b)*f+(1<<8-1)>>8)&15)))};GLLib.PFX_GetGrayscaleColor_dup_S=function(b){var a=(b&3840)>>8&15;return gloft.casttoshort(((b&65280)|a<<4|a))};GLLib.PFX_ReadPixelData=function(g,f,e,d,c,b,a){if(g==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}if(false&&GLLib.s_PFX_customBuffer!=null){GLLib.GetRGB(GLLib.s_PFX_customBuffer,g,f,e,d,c,b,a)}else{if(true&&ASprite._customGraphics!=null){ASprite.CopyArea(ASprite._customGraphics,ASprite._customGraphicsWidth,ASprite._customGraphicsHeight,g,f,e,d,c,b,a)}else{if(GLLib.pfx_usingScreenBuffer){GLLib.GetRGB(GLLib.s_PFX_screenBuffer,g,f,e,d,c,b,a)}else{GLLib.Dbg("PFX_ReadPixelData: In MIDP2 you must enable pfx_useScreenBuffer to have this work! Or use a custom graphics (sprite_allowPixelArrayGraphics)")}}}};GLLib.PFX_WritePixelData=function(c,i,a,h,g,f,e,d,j){if(i==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}if(false){GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZIIZ(c,i,a,h,g,f,e,d,j,true,0,-1,false)}else{GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(c,i,a,h,g,f,e,d,j,true,0)}};GLLib.PFX_Init=function(){GLLib.s_PFX_type=0;GLLib.s_PFX_timer=0;GLLib.s_PFX_windowX=0;GLLib.s_PFX_windowY=0;GLLib.s_PFX_windowWidth=GLLib.s_screenWidth;GLLib.s_PFX_windowHeight=GLLib.s_screenHeight;GLLib.s_PFX_params=gloft.ArrayCreation([18],gloft.casttoint(null));if(false){GLLib.s_PFX_params[0]=gloft.ArrayCreation([5],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(0)}if(false){GLLib.s_PFX_params[1]=gloft.ArrayCreation([6],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(1)}if(true){GLLib.s_PFX_params[9]=gloft.ArrayCreation([3],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(9)}if(true){GLLib.s_PFX_params[10]=gloft.ArrayCreation([6],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(10)}if(false){GLLib.s_PFX_params[11]=gloft.ArrayCreation([20],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(11)}if(true){GLLib.s_PFX_params[12]=gloft.ArrayCreation([2],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(12)}if(true){GLLib.s_PFX_params[13]=gloft.ArrayCreation([5],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(13)}if(false){GLLib.s_PFX_params[17]=gloft.ArrayCreation([6],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(17)}if(false){GLLib.s_PFX_params[16]=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(16)}if(true){GLLib.s_PFX_params[14]=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(14)}if(true){GLLib.s_PFX_params[15]=gloft.ArrayCreation([7],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(15)}if(false){GLLib.s_PFX_params[5]=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(5)}if(false){GLLib.s_PFX_params[6]=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(6)}if(false){GLLib.s_PFX_params[7]=gloft.ArrayCreation([2],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(7)}if(false){GLLib.s_PFX_params[8]=gloft.ArrayCreation([2],gloft.casttoint(null));GLLib.PFX_SetDefaultEffectParameters(8)}if(GLLib.pfx_usingScreenBuffer){if(false||false){if(GLLib.m_imgBackBuffer==null||GLLib.m_gBackBuffer==null){GLLib.Assert(false,"PXF_Init failed to use existing Buffer!")}GLLib.s_PFX_screenBuffer=GLLib.m_imgBackBuffer;GLLib.s_PFX_screenBufferG=GLLib.m_gBackBuffer}else{if(false){var a=GLLib.s_PFX_windowWidth;GLLib.s_PFX_windowWidth=GLLib.s_PFX_windowHeight;GLLib.s_PFX_windowHeight=a}GLLib.s_PFX_screenBuffer=javax.microedition.lcdui.Image.createImage(GLLib.s_PFX_windowWidth,GLLib.s_PFX_windowHeight);GLLib.s_PFX_screenBufferG=GLLib.s_PFX_screenBuffer.getGraphics()}}GLLib.s_PFX_enableScreenBuffer=0;GLLib.s_PFX_initializd=true};GLLib.PFX_SetDefaultEffectParameters=function(a){switch(a){case 0:if(false){GLLib.s_PFX_params[0][4]=250;break}break;case 1:if(false){GLLib.s_PFX_params[1][3]=250;break}break;case 9:if(true){GLLib.s_PFX_params[9][1]=-1;GLLib.s_PFX_params[9][0]=-1;GLLib.s_PFX_params[9][2]=0;break}break;case 10:if(true){GLLib.s_PFX_params[10][1]=0;GLLib.s_PFX_params[10][2]=40;GLLib.s_PFX_params[10][3]=16777215;GLLib.s_PFX_params[10][4]=0;GLLib.s_PFX_params[10][5]=8;GLLib.s_PFX_params[10][0]=-1;break}break;case 11:if(false){GLLib.s_PFX_params[11][0]=172;GLLib.s_PFX_params[11][1]=104;GLLib.s_PFX_params[11][2]=2;GLLib.s_PFX_params[11][3]=0;GLLib.s_PFX_params[11][4]=0;GLLib.s_PFX_params[11][5]=0;GLLib.s_PFX_params[11][6]=1<<8;GLLib.s_PFX_params[11][7]=2<<8;GLLib.s_PFX_params[11][8]=4;GLLib.s_PFX_params[11][9]=4;GLLib.s_PFX_params[11][10]=16;GLLib.s_PFX_params[11][11]=112;GLLib.s_PFX_params[11][12]=64;GLLib.s_PFX_params[11][13]=72;GLLib.s_PFX_params[11][14]=3;break}break;case 12:if(true){GLLib.s_PFX_params[12][1]=255;GLLib.s_PFX_params[12][0]=-1;break}break;case 13:if(true){GLLib.s_PFX_params[13][1]=100;GLLib.s_PFX_params[13][2]=-1;GLLib.s_PFX_params[13][0]=-1;GLLib.s_PFX_params[13][3]=100;GLLib.s_PFX_params[13][4]=100;break}break;case 16:if(true){GLLib.s_PFX_params[16][0]=0;break}break;case 17:if(false){GLLib.s_PFX_params[17][1]=100;GLLib.s_PFX_params[17][2]=-1;GLLib.s_PFX_params[17][0]=-1;GLLib.s_PFX_params[17][3]=100;GLLib.s_PFX_params[17][4]=100;GLLib.s_PFX_params[17][5]=0;break}break;case 14:if(true){GLLib.s_PFX_params[14][0]=-16777216;break}break;case 15:if(true){GLLib.s_PFX_params[15][0]=0;GLLib.s_PFX_params[15][1]=-1;GLLib.s_PFX_params[15][2]=-1;GLLib.s_PFX_params[15][3]=-1;GLLib.s_PFX_params[15][4]=-1;GLLib.s_PFX_params[15][5]=-1;GLLib.s_PFX_params[15][6]=-1;break}break;case 5:if(false){GLLib.s_PFX_params[5][0]=255;break}break;case 6:if(false){GLLib.s_PFX_params[6][0]=255;break}break;case 7:if(false){GLLib.s_PFX_params[7][0]=255;GLLib.s_PFX_params[7][1]=0;break}break;case 8:if(false){GLLib.s_PFX_params[8][0]=255;break}break}};GLLib.PFX_SetDefaultSpriteEffectParameters=function(){for(var a=0;a<18;++a){if((1<<a&260064)!=0){GLLib.PFX_SetDefaultEffectParameters(a)}}};GLLib.PFX_Release=function(){GLLib.s_PFX_screenBuffer=null;GLLib.s_PFX_screenBufferG=null;for(var a=0;a<18;++a){GLLib.s_PFX_params[a]=null}GLLib.s_PFX_params=null;GLLib.s_PFX_initializd=false};GLLib.PFX_EnableEffect=function(c,a){GLLib.s_PFX_type|=1<<c;if(!GLLib.pfx_usingScreenBuffer&&!false&&!true&&(1<<c&2559)!=0){GLLib.Dbg("PFX_EnableEffect: Setting a full-screen effect when neither NokiaUI is available nor a full-screen buffer!");GLLib.s_PFX_type&=-2560}if((1<<c&31)!=0){GLLib.s_PFX_enableScreenBuffer|=1<<c}if(c==14&&!true){GLLib.Dbg("PFX_EnableEffect: Stencil Effect is not enabled, you must set pfx_useSpriteEffectStencil to TRUE!")}else{if(c==13&&!true){GLLib.Dbg("PFX_EnableEffect: Scale Effect is not enabled, you must set pfx_useSpriteEffectScale to TRUE!")}else{if(c==12&&!true){GLLib.Dbg("PFX_EnableEffect: Blend Effect is not enabled, you must set pfx_useSpriteEffectBlend to TRUE!")}else{if(c==9&&!true){GLLib.Dbg("PFX_EnableEffect: Grayscale Effect is not enabled, you must set pfx_useSpriteEffectGrayscale to TRUE!")}else{if(c==17&&!false){GLLib.Dbg("PFX_EnableEffect: Scale And Grayscale Effect is not enabled, you must set pfx_useSpriteEffectScaleAndGrayscale to TRUE!")}else{if(c==10&&!true){GLLib.Dbg("PFX_EnableEffect: Shine Effect is not enabled, you must set pfx_useSpriteEffectShine to TRUE!")}else{if(c==5&&!false){GLLib.Dbg("PFX_EnableEffect: Additive Effect is not enabled, you must set pfx_useSpriteEffectAdditive to TRUE!")}else{if(c==6&&!false){GLLib.Dbg("PFX_EnableEffect: Multiplicative Effect is not enabled, you must set pfx_useSpriteEffectMultiplicative to TRUE!")}else{if(c==7&&!false){GLLib.Dbg("PFX_EnableEffect: Overlay Effect is not enabled, you must set pfx_useSpriteEffectOverlay to TRUE!")}else{if(c==8&&!false){GLLib.Dbg("PFX_EnableEffect: Color Dodge Effect is not enabled, you must set pfx_useSpriteEffectColorDodge to TRUE!")}else{if(c==15&&!true){GLLib.Dbg("PFX_EnableEffect: Perspective Effect is not enabled, you must set pfx_useSpriteEffectPerspective to TRUE!")}}}}}}}}}}}if(a){GLLib.PFX_SetDefaultEffectParameters(c)}};GLLib.PFX_DisableEffect=function(c,a){if(false&&c==0&&GLLib.s_PFX_params[0][3]!=3){if(GLLib.s_PFX_params[0][3]<2){GLLib.s_PFX_params[0][3]=2}}else{GLLib.s_PFX_type&=~(1<<c);if((1<<c&31)!=0){GLLib.s_PFX_enableScreenBuffer&=~(1<<c)}if(false&&c==1){GLLib.s_PFX_screenIsBuffered=false}}if(a){GLLib.PFX_SetDefaultEffectParameters(c)}};GLLib.PFX_SetParam=function(c,b,a){if(c<0||c>=18){GLLib.Assert(false,"PFX_SetParam: Invalid effect ID: "+c)}if(GLLib.s_PFX_params==null){GLLib.Assert(false,"PFX_SetParam: Parameters are null, did you call PFX_Init?")}if(GLLib.s_PFX_params[c]==null){GLLib.Assert(false,"PFX_SetParam: Parameters for this effect are null, did you call PFX_Init? Did you enable this effect in GLLibConfig?")}GLLib.s_PFX_params[c][b]=a};GLLib.PFX_Update=function(a){if(false&&(GLLib.s_PFX_type&1<<0)!=0){var h=GLLib.s_PFX_params[0][2];if(GLLib.s_PFX_params[0][3]==0){if(h<GLLib.s_PFX_params[0][1]){var g=h+GLLib.s_PFX_params[0][4]*a;if(g>=GLLib.s_PFX_params[0][1]){g=GLLib.s_PFX_params[0][1];GLLib.s_PFX_params[0][3]=1}GLLib.s_PFX_params[0][2]=g}}else{if(GLLib.s_PFX_params[0][3]==2&&h>0){var f=h-GLLib.s_PFX_params[0][4]*a;if(f<=0){f=0;GLLib.s_PFX_params[0][3]=3;GLLib.PFX_DisableEffect(0,false)}GLLib.s_PFX_params[0][2]=f}}}if(false&&(GLLib.s_PFX_type&1<<1)!=0){if(GLLib.s_PFX_params[1][5]!=0){if(GLLib.s_PFX_params[1][5]>0){var i=GLLib.s_PFX_params[1];var e=5;--i[e]}GLLib.s_PFX_screenIsBuffered=false;GLLib.s_PFX_enableScreenBufferThisFrame=1}else{GLLib.s_PFX_screenIsBuffered=true}var d=GLLib.s_PFX_params[1][1];if(GLLib.s_PFX_params[1][2]==0){if(d<GLLib.s_PFX_params[1][0]){var c=d+GLLib.s_PFX_params[1][3]*a;if(c>=GLLib.s_PFX_params[1][0]){c=GLLib.s_PFX_params[1][0];GLLib.PFX_DisableEffect(GLLib.s_PFX_params[1][2]=1,false)}GLLib.s_PFX_params[1][1]=c}}else{if(GLLib.s_PFX_params[1][2]==2&&d>0){var b=d-GLLib.s_PFX_params[1][3]*a;if(b<=0){b=0;GLLib.s_PFX_params[1][2]=3;GLLib.PFX_DisableEffect(1,false)}GLLib.s_PFX_params[1][1]=b}}}if((GLLib.s_PFX_enableScreenBufferThisFrame!=0||GLLib.s_PFX_enableScreenBuffer!=0)&&GLLib.pfx_usingScreenBuffer){GLLib.g=(GLLib.s_lastPaintGraphics=GLLib.s_PFX_screenBufferG)}GLLib.s_PFX_timer+=a};GLLib.PFX_SetFullScreenEffectWindow=function(b,a,e,d){if(false||false){GLLib.s_PFX_windowX=b;GLLib.s_PFX_windowY=a;GLLib.s_PFX_windowWidth=e;GLLib.s_PFX_windowHeight=d;if(false){var c=GLLib.s_PFX_windowX;GLLib.s_PFX_windowX=ASprite._graphicsHeight-GLLib.s_PFX_windowY-GLLib.s_PFX_windowHeight;GLLib.s_PFX_windowY=c;var f=GLLib.s_PFX_windowWidth;GLLib.s_PFX_windowWidth=GLLib.s_PFX_windowHeight;GLLib.s_PFX_windowHeight=f}}else{GLLib.Dbg("PFX_SetFullScreenEffectWindow: No full-screen pixel effects are enabled!")}};GLLib.PFX_SetBlurEffect=function(c,b,a){if(false){if(GLLib.s_PFX_params==null){GLLib.Dbg("PFX_SetBlurEffect: PFX have not been initialized! Call PFX_Init() first!")}GLLib.s_PFX_params[0][0]=a;GLLib.s_PFX_params[0][1]=((b<0)?0:((b>128)?128:b))<<10;GLLib.s_PFX_params[0][2]=((c<0)?0:((c>128)?128:c))<<10;GLLib.s_PFX_params[0][3]=0}else{GLLib.Dbg("PFX_SetBlurEffect: Effect is not enabled, please set pfx_useFullScreenEffectBlur to TRUE!")}};GLLib.PFX_ApplyFullScreenBlur_dup_javaxmicroeditionlcduiGraphics=function(a){if(false){if((GLLib.s_PFX_type&1)==0){return}GLLib.PFX_ApplyFullScreenBlur_dup_javaxmicroeditionlcduiGraphicsaI(a,ASprite.GetPixelBuffer_int_dup_aI(null))}};GLLib.PFX_SetBlendEffect=function(c,b,a){if(false){if(GLLib.s_PFX_params==null){GLLib.Dbg("PFX_SetBlendEffect: PFX have not been initialized! Call PFX_Init() first!")}c=((c<0)?0:((c>255)?255:c))<<10;b=((b<0)?0:((b>255)?255:b))<<10;GLLib.s_PFX_params[1][1]=c;GLLib.s_PFX_params[1][0]=b;GLLib.s_PFX_params[1][2]=((b>c)?0:2);GLLib.s_PFX_params[1][5]=a}else{GLLib.Dbg("PFX_SetBlendEffect: Effect is not enabled, please set pfx_useFullScreenEffectBlend to TRUE!")}};GLLib.PFX_PaintFullScreenBlend_dup_javaxmicroeditionlcduiGraphicsjavaxmicroeditionlcduiImage=function(a,b){if(false){if((GLLib.s_PFX_type&2)==0){return}GLLib.PFX_PaintFullScreenBlend_dup_javaxmicroeditionlcduiGraphicsjavaxmicroeditionlcduiImageaIZ(a,b,ASprite.GetPixelBuffer_int_dup_aI(null),false)}};GLLib.PFX_ApplyFullScreenAdditive_dup_javaxmicroeditionlcduiGraphicsI=function(a,b){if(false){if((GLLib.s_PFX_type&4)==0){return}GLLib.PFX_ApplyFullScreenAdditive_dup_javaxmicroeditionlcduiGraphicsIaI(a,b,ASprite.GetPixelBuffer_int_dup_aI(null))}else{GLLib.Dbg("PFX_ApplyFullScreenAdditive: Effect is not enabled, you must set pfx_useFullScreenEffectAdditive to TRUE!")}};GLLib.PFX_ApplyFullScreenSubtractive_dup_javaxmicroeditionlcduiGraphicsI=function(a,b){if(false){if((GLLib.s_PFX_type&8)==0){return}GLLib.PFX_ApplyFullScreenSubtractive_dup_javaxmicroeditionlcduiGraphicsIaI(a,b,ASprite.GetPixelBuffer_int_dup_aI(null))}else{GLLib.Dbg("PFX_ApplyFullScreenSubtractive: Effect is not enabled, you must set pfx_useFullScreenEffectSubtractive to TRUE!")}};GLLib.PFX_ApplyFullScreenMultiplicative_dup_javaxmicroeditionlcduiGraphicsI=function(a,b){if(false){if((GLLib.s_PFX_type&16)==0){return}GLLib.PFX_ApplyFullScreenMultiplicative_dup_javaxmicroeditionlcduiGraphicsIaI(a,b,ASprite.GetPixelBuffer_int_dup_aI(null))}else{GLLib.Dbg("PFX_ApplyFullScreenMultiplicative: Effect is not enabled, you must set pfx_useFullScreenEffectMultiplicative to TRUE!")}};GLLib.PFX_ComputeBlinkingValue=function(h,e,d){var c=GLLib.Math_FixedPoint_Multiply(GLLib.s_PFX_timer*360,h)>>10;var b=d-e>>1;var a=e+b;var g=b;var f=c;if(GLLib.s_math_cosTable==null){GLLib.Assert(false,"!!ERROR!! Math_Sin.s_math_cosTable is null, call Math_Init first")}return a+(g*GLLib.Math_Cos(GLLib.Math_Angle90-f)+(1<<8-1)>>8)};GLLib.PFX_InitGlowArea_dup_IIII=function(d,c,b,a){if(false){GLLib.s_PFX_params[11][15]=d-GLLib.s_PFX_params[11][4];GLLib.s_PFX_params[11][16]=c-GLLib.s_PFX_params[11][5];GLLib.s_PFX_params[11][17]=b+(GLLib.s_PFX_params[11][4]<<1);GLLib.s_PFX_params[11][18]=a+(GLLib.s_PFX_params[11][5]<<1);if(false){GLLib.s_PFX_params[11][19]=GLLib.s_PFX_params[11][17]*GLLib.s_PFX_params[11][18];if(GLLib.s_PFX_params[11][17]*GLLib.s_PFX_params[11][18]>gloft.casttoint(35000/2)){GLLib.Assert(false,"PFX_InitGlowArea: Area size is too large! W*H > (TMP_BUFFER_SIZE/2), either increase buffer or set pfx_glowUseOneBuffer to FALSE!")}}else{if(GLLib.s_PFX_params[11][17]*GLLib.s_PFX_params[11][18]>35000){GLLib.Assert(false,"PFX_InitGlowArea: Area size is too large! W*H > TMP_BUFFER_SIZE, increase buffer or decrease area!")}if(-1>=0&&GLLib.s_PFX_params[11][17]*GLLib.s_PFX_params[11][18]>-1){GLLib.Assert(false,"PFX_InitGlowArea: Area size is too large! W*H > TMP_ALT_BUFFER_SIZE, increase buffer or decrease area!")}}GLLib.PFX_InitGlowArea_dup_aI(ASprite.GetPixelBuffer_int_dup_aI(null))}else{GLLib.Dbg("PFX_InitGlowArea: Glow Effect is not enabled, you must set pfx_useEffectGlow to TRUE!")}};GLLib.PFX_ApplyGlow_dup_javaxmicroeditionlcduiGraphics=function(a){if(false){GLLib.PFX_ApplyGlow_dup_javaxmicroeditionlcduiGraphicsIIIaI(a,GLLib.PFX_ComputeBlinkingValue(GLLib.s_PFX_params[11][7],GLLib.s_PFX_params[11][8],GLLib.s_PFX_params[11][11]),GLLib.PFX_ComputeBlinkingValue(GLLib.s_PFX_params[11][6],GLLib.s_PFX_params[11][9],GLLib.s_PFX_params[11][12]),GLLib.PFX_ComputeBlinkingValue(GLLib.s_PFX_params[11][6],GLLib.s_PFX_params[11][10],GLLib.s_PFX_params[11][13]),ASprite.GetPixelBuffer_int_dup_aI(null))}else{GLLib.Dbg("PFX_PaintGlowEffect: Glow Effect is not enabled, you must set pfx_useEffectGlow to TRUE!")}};GLLib.PFX_Rotate_GetRotatedPoint=function(e,c,b,a,d){d[0]=b*c-a*e+(1<<8-1)>>8;d[1]=a*c+b*e+(1<<8-1)>>8};GLLib.PFX_Rotate_GetRotatedRectSize=function(a,i,h,g,j){GLLib.PFX_Rotate_GetRotatedPoint(a,i,0,g,ASprite.s_rc);var f=ASprite.s_rc[0];var e=ASprite.s_rc[1];GLLib.PFX_Rotate_GetRotatedPoint(a,i,h,g,ASprite.s_rc);var d=ASprite.s_rc[0];var c=ASprite.s_rc[1];var b=0;var m=0;GLLib.PFX_Rotate_GetRotatedPoint(a,i,h,0,ASprite.s_rc);var l=ASprite.s_rc[0];var k=ASprite.s_rc[1];j[0]=java.lang.Math.max(java.lang.Math.abs(d-b),java.lang.Math.abs(l-f));j[1]=java.lang.Math.max(java.lang.Math.abs(c-m),java.lang.Math.abs(k-e))};GLLib.PFX_ProcessSpriteEffects_dup_javaxmicroeditionlcduiGraphicsjavaxmicroeditionlcduiImageIIIIIZZ=function(c,h,a,g,f,e,d,j,i){if(h==null){GLLib.Assert(false,"PFX_ProcessSpriteEffects: img parameter is null!")}var k=ASprite.GetPixelBuffer_int_dup_aI(null);GLLib.GetRGB(h,k,0,f,0,0,f,e);return GLLib.PFX_ProcessSpriteEffects_dup_javaxmicroeditionlcduiGraphicsaIIIIIIZZZ(c,k,a,g,f,e,d,j,i,true)};GLLib.PFX_ProcessSpriteEffects_dup_javaxmicroeditionlcduiGraphicsaIIIIIIZZZ=function(j,k,D,v,h,f,t,E,I,l){GLLib.s_PFX_hasAlpha=E;GLLib.s_PFX_sizeX=h;GLLib.s_PFX_sizeY=f;GLLib.s_PFX_newSizeX=h;GLLib.s_PFX_newSizeY=f;if((GLLib.s_PFX_type&22016)!=0){if((t&4)!=0){GLLib.s_PFX_sizeX=f;GLLib.s_PFX_sizeY=h;h=GLLib.s_PFX_sizeX;f=GLLib.s_PFX_sizeY}k=ASprite.TransformRGB_dup_aIIIIaI(k,h,f,t,null)}var F=ASprite.GetPixelBuffer_int_dup_aIII(k,h,f);if((GLLib.s_PFX_type&8192)!=0){if(true){var r=GLLib.s_PFX_params[13][0];var i=r!=1&&(r==2||I);var q=k;var J=F;var o=h;var m=f;var g=GLLib.s_PFX_params[13][1];var e=(g!=100)?g:GLLib.s_PFX_params[13][3];var c=GLLib.s_PFX_params[13][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIZZIZ(j,q,J,D,v,o,m,e,(c!=100)?c:GLLib.s_PFX_params[13][4],GLLib.s_PFX_params[13][2],E,i,t,l)}}else{if((GLLib.s_PFX_type&131072)!=0){if(false){var C=GLLib.s_PFX_params[17][0];var d=C!=1&&(C==2||I);var a=GLLib.PFX_ProcessGrayscaleEffect_dup_aIaIIIIZZ(k,F,h*f,GLLib.s_PFX_params[17][5],-1,E,d);var x=ASprite.GetPixelBuffer_int_dup_aIII(a,h,f);var H=a;var G=x;var B=h;var A=f;var z=GLLib.s_PFX_params[17][1];var y=(z!=100)?z:GLLib.s_PFX_params[17][3];var w=GLLib.s_PFX_params[17][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIZZIZ(j,H,G,D,v,B,A,y,(w!=100)?w:GLLib.s_PFX_params[17][4],GLLib.s_PFX_params[17][2],E,d,t,l)}}else{if((GLLib.s_PFX_type&65536)!=0){if(false){return GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIZ(j,k,F,D,v,h,f,GLLib.s_PFX_params[16][0],t,l)}}else{if((GLLib.s_PFX_type&4096)!=0){if(true){var u=GLLib.s_PFX_params[12][0];return GLLib.PFX_ProcessBlend_dup_aIaIIIZZ(k,F,h*f,GLLib.s_PFX_params[12][1],E,u!=1&&(u==2||I))}}else{if((GLLib.s_PFX_type&512)!=0){if(true){var s=GLLib.s_PFX_params[9][0];return GLLib.PFX_ProcessGrayscaleEffect_dup_aIaIIIIZZ(k,F,h*f,GLLib.s_PFX_params[9][2],GLLib.s_PFX_params[9][1],E,s!=1&&(s==2||I))}}else{if((GLLib.s_PFX_type&1024)!=0){if(true){var p=GLLib.s_PFX_params[10][0];return GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIZ(j,k,F,D,v,h,f,t,p!=1&&(p==2||I))}}else{if((GLLib.s_PFX_type&32)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIIZ(j,k,F,D,v,h,f,t,GLLib.s_PFX_type&480,GLLib.s_PFX_params[5][0],0,true)}}else{if((GLLib.s_PFX_type&64)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIIZ(j,k,F,D,v,h,f,t,GLLib.s_PFX_type&480,GLLib.s_PFX_params[6][0],0,true)}}else{if((GLLib.s_PFX_type&128)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIIZ(j,k,F,D,v,h,f,t,GLLib.s_PFX_type&480,GLLib.s_PFX_params[7][0],GLLib.s_PFX_params[7][1],true)}}else{if((GLLib.s_PFX_type&256)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIIZ(j,k,F,D,v,h,f,t,GLLib.s_PFX_type&480,GLLib.s_PFX_params[8][0],0,true)}}else{if((GLLib.s_PFX_type&16384)!=0){if(true){return GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIZZ(j,k,F,h*f,GLLib.s_PFX_params[14][0],E,I)}}else{if((GLLib.s_PFX_type&32768)!=0&&true){if(GLLib.s_PFX_params[15][0]==1){GLLib.Dbg("PFX_ProcessXPerspective not implemented yet!")}else{if(GLLib.s_PFX_params[15][0]==2){return GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIII(j,k,F,D,v,h,f,GLLib.s_PFX_params[15][1],GLLib.s_PFX_params[15][2],GLLib.s_PFX_params[15][4],GLLib.s_PFX_params[15][6],t)}GLLib.Dbg("PFX_ProcessSpriteEffects Perspective transformation used but type not set!")}}}}}}}}}}}}}return null};GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIII=function(Q,m,A,aa,M,L,J,I,H,G,F,E){var Z=0;var o=ASprite._graphicsWidth;var u=ASprite._graphicsHeight;if(false){var Y=L;L=J;J=Y;var X=M;M=u-aa-J;aa=X}if(I<=aa||F<M||G<H){return null}if(I<=Z||aa>=o){return null}var V=gloft.casttoint(null);var W=V=I-aa;var U=L<<8;var T=gloft.casttoint(U/V);var p=0;if((E&1)!=0){p=U-GLLib.s_math_F_1;T=-T}var S=gloft.casttoint((H-M<<8)/V);var R=gloft.casttoint((G-F<<8)/V);var P=0;if(H!=M){P=gloft.casttoint((V<<8)/java.lang.Math.abs(H-M))}var D=M<<8;var C=F<<8;if(aa<Z){var B=Z-aa;W-=B;p+=T*B;if(p<0||p>=U){return null}var z=D+S*B;C+=R*B;M=z+(1<<8-1)>>8;F=C+(1<<8-1)>>8;aa=Z}var y=p+(1<<8-1)>>8;if(y<0||y>=L||W<=0){return null}if(I>o){var x=I-o;W-=x;H=(H<<8)-S*x+(1<<8-1)>>8;G=(G<<8)-R*x+(1<<8-1)>>8;I=o}if(M>=u){var w=(M-u+1)*P+(1<<8-1)>>8;W-=w;aa+=w;p+=T*w;if(p<0||p>=U){return null}F=C+R*w+(1<<8-1)>>8;M=u-1}if(H>=u){var v=(H-u+1)*P+(1<<8-1)>>8;W-=v;I=aa+W;G=(G<<8)-R*v+(1<<8-1)>>8;H=u-1}if(W<=0){return null}var K=java.lang.Math.min(M,H);var f=java.lang.Math.max(G,F);if(f>u){f=u}var t=f-K;if(t<=0){return null}var s=gloft.casttoint(A.length/t);var l=gloft.casttoint((I-aa)/s);var k=M;var j=F;for(var ab=0;ab<l;++ab){var h=M+gloft.casttoint((H-M)*s*(ab+1)/W);var g=F+gloft.casttoint((G-F)*s*(ab+1)/W);var O=java.lang.Math.min(k,h);var r=java.lang.Math.max(g,j);if(r>u){r=u}var e=r-O;p=GLLib.PFX_PrepareYPerspectiveBlock_dup_aIaIIIIIIIIIIIIIII(A,m,s,e,L,J,p,aa+s*ab,aa+s*(ab+1),O,r,k<<8,j<<8,T,S,R);if(false){GLLib.PFX_WritePixelData(Q,A,0,e,u-O-s,aa+s*ab,e,s,true)}else{GLLib.PFX_WritePixelData(Q,A,0,s,aa+s*ab,O,s,e,true)}k=h;j=g}var d=W-s*l;if(d>0){var c=H;var b=G;var N=java.lang.Math.min(k,c);var q=java.lang.Math.max(b,j);if(q>u){q=u}var a=q-N;GLLib.PFX_PrepareYPerspectiveBlock_dup_aIaIIIIIIIIIIIIIII(A,m,d,a,L,J,p,aa+s*l,I,N,q,k<<8,j<<8,T,S,R);if(false){GLLib.PFX_WritePixelData(Q,A,0,a,u-N-a,aa+s*l,a,d,true)}else{GLLib.PFX_WritePixelData(Q,A,0,d,aa+s*l,N,d,a,true)}}return null};GLLib.PFX_ProcessSpriteEffects_dup_javaxmicroeditionlcduiGraphicsaBaIIIIIIZZZ=function(i,B,o,D,t,g,e,r,E,J,k){GLLib.s_PFX_hasAlpha=E;GLLib.s_PFX_sizeX=g;GLLib.s_PFX_sizeY=e;GLLib.s_PFX_newSizeX=g;GLLib.s_PFX_newSizeY=e;if((GLLib.s_PFX_type&22016)!=0){if((r&4)!=0){GLLib.s_PFX_sizeX=e;GLLib.s_PFX_sizeY=g;g=GLLib.s_PFX_sizeX;e=GLLib.s_PFX_sizeY}B=ASprite.TransformRGB_dup_aBIIIaB(B,g,e,r,null)}var F=ASprite.GetPixelBuffer_int_dup_aIII(null,g,e);if((GLLib.s_PFX_type&8192)!=0){if(true){var p=GLLib.s_PFX_params[13][0];var h=p!=1&&(p==2||J);var K=B;var I=F;var l=g;var j=e;var f=GLLib.s_PFX_params[13][1];var d=(f!=100)?f:GLLib.s_PFX_params[13][3];var a=GLLib.s_PFX_params[13][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIZZIZ(i,K,o,I,D,t,l,j,d,(a!=100)?a:GLLib.s_PFX_params[13][4],GLLib.s_PFX_params[13][2],E,h,r,k)}}else{if((GLLib.s_PFX_type&131072)!=0){if(false){var A=GLLib.s_PFX_params[17][0];var c=A!=1&&(A==2||J);var C=GLLib.PFX_ProcessGrayscaleEffect_dup_aBaIaIIIIZZ(B,o,F,g*e,GLLib.s_PFX_params[17][5],-1,E,c);var v=ASprite.GetPixelBuffer_int_dup_aIII(C,g,e);var H=C;var G=v;var z=g;var y=e;var x=GLLib.s_PFX_params[17][1];var w=(x!=100)?x:GLLib.s_PFX_params[17][3];var u=GLLib.s_PFX_params[17][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIZZIZ(i,H,G,D,t,z,y,w,(u!=100)?u:GLLib.s_PFX_params[17][4],GLLib.s_PFX_params[17][2],E,c,r,k)}}else{if((GLLib.s_PFX_type&65536)!=0){if(false){return GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIZ(i,B,o,F,D,t,g,e,GLLib.s_PFX_params[16][0],r,k)}}else{if((GLLib.s_PFX_type&4096)!=0){if(true){var s=GLLib.s_PFX_params[12][0];return GLLib.PFX_ProcessBlend_dup_aBaIaIIIZZ(B,o,F,g*e,GLLib.s_PFX_params[12][1],E,s!=1&&(s==2||J))}}else{if((GLLib.s_PFX_type&512)!=0){if(true){var q=GLLib.s_PFX_params[9][0];return GLLib.PFX_ProcessGrayscaleEffect_dup_aBaIaIIIIZZ(B,o,F,g*e,GLLib.s_PFX_params[9][2],GLLib.s_PFX_params[9][1],E,q!=1&&(q==2||J))}}else{if((GLLib.s_PFX_type&1024)!=0){if(true){var m=GLLib.s_PFX_params[10][0];return GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIZ(i,B,o,F,D,t,g,e,r,m!=1&&(m==2||J))}}else{if((GLLib.s_PFX_type&32)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIIZ(i,B,o,F,D,t,g,e,r,GLLib.s_PFX_type&480,GLLib.s_PFX_params[5][0],0,true)}}else{if((GLLib.s_PFX_type&64)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIIZ(i,B,o,F,D,t,g,e,r,GLLib.s_PFX_type&480,GLLib.s_PFX_params[6][0],0,true)}}else{if((GLLib.s_PFX_type&128)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIIZ(i,B,o,F,D,t,g,e,r,GLLib.s_PFX_type&480,GLLib.s_PFX_params[7][0],GLLib.s_PFX_params[7][1],true)}}else{if((GLLib.s_PFX_type&256)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIIZ(i,B,o,F,D,t,g,e,r,GLLib.s_PFX_type&480,GLLib.s_PFX_params[8][0],0,true)}}else{if((GLLib.s_PFX_type&16384)!=0){if(true){return GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIZZ(i,B,o,F,g*e,GLLib.s_PFX_params[14][0],E,J)}}else{if((GLLib.s_PFX_type&32768)!=0&&true){if(GLLib.s_PFX_params[15][0]==1){GLLib.Dbg("PFX_ProcessXPerspective not implemented yet!")}else{if(GLLib.s_PFX_params[15][0]==2){return GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIII(i,B,o,F,D,t,g,e,GLLib.s_PFX_params[15][1],GLLib.s_PFX_params[15][2],GLLib.s_PFX_params[15][4],GLLib.s_PFX_params[15][6],r)}GLLib.Dbg("PFX_ProcessSpriteEffects Perspective transformation used but type not set!")}}}}}}}}}}}}}return null};GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIII=function(R,m,B,z,ab,N,M,K,J,I,H,G,F){var aa=0;var o=ASprite._graphicsWidth;var u=ASprite._graphicsHeight;if(false){var Z=M;M=K;K=Z;var Y=N;N=u-ab-K;ab=Y}if(J<=ab||G<N||H<I){return null}if(J<=aa||ab>=o){return null}var W=gloft.casttoint(null);var X=W=J-ab;var V=M<<8;var U=gloft.casttoint(V/W);var p=0;if((F&1)!=0){p=V-GLLib.s_math_F_1;U=-U}var T=gloft.casttoint((I-N<<8)/W);var S=gloft.casttoint((H-G<<8)/W);var Q=0;if(I!=N){Q=gloft.casttoint((W<<8)/java.lang.Math.abs(I-N))}var E=N<<8;var D=G<<8;if(ab<aa){var C=aa-ab;X-=C;p+=U*C;if(p<0||p>=V){return null}var A=E+T*C;D+=S*C;N=A+(1<<8-1)>>8;G=D+(1<<8-1)>>8;ab=aa}var y=p+(1<<8-1)>>8;if(y<0||y>=M||X<=0){return null}if(J>o){var x=J-o;X-=x;I=(I<<8)-T*x+(1<<8-1)>>8;H=(H<<8)-S*x+(1<<8-1)>>8;J=o}if(N>=u){var w=(N-u+1)*Q+(1<<8-1)>>8;X-=w;ab+=w;p+=U*w;if(p<0||p>=V){return null}G=D+S*w+(1<<8-1)>>8;N=u-1}if(I>=u){var v=(I-u+1)*Q+(1<<8-1)>>8;X-=v;J=ab+X;H=(H<<8)-S*v+(1<<8-1)>>8;I=u-1}if(X<=0){return null}var L=java.lang.Math.min(N,I);var f=java.lang.Math.max(H,G);if(f>u){f=u}var t=f-L;if(t<=0){return null}var s=gloft.casttoint(z.length/t);var l=gloft.casttoint((J-ab)/s);var k=N;var j=G;for(var ac=0;ac<l;++ac){var h=N+gloft.casttoint((I-N)*s*(ac+1)/X);var g=G+gloft.casttoint((H-G)*s*(ac+1)/X);var P=java.lang.Math.min(k,h);var r=java.lang.Math.max(g,j);if(r>u){r=u}var e=r-P;p=GLLib.PFX_PrepareYPerspectiveBlock_dup_aIaBaIIIIIIIIIIIIIII(z,m,B,s,e,M,K,p,ab+s*ac,ab+s*(ac+1),P,r,k<<8,j<<8,U,T,S);if(false){GLLib.PFX_WritePixelData(R,z,0,e,u-P-s,ab+s*ac,e,s,true)}else{GLLib.PFX_WritePixelData(R,z,0,s,ab+s*ac,P,s,e,true)}k=h;j=g}var d=X-s*l;if(d>0){var c=I;var b=H;var O=java.lang.Math.min(k,c);var q=java.lang.Math.max(b,j);if(q>u){q=u}var a=q-O;GLLib.PFX_PrepareYPerspectiveBlock_dup_aIaBaIIIIIIIIIIIIIII(z,m,B,d,a,M,K,p,ab+s*l,J,O,q,k<<8,j<<8,U,T,S);if(false){GLLib.PFX_WritePixelData(R,z,0,a,u-O-a,ab+s*l,a,d,true)}else{GLLib.PFX_WritePixelData(R,z,0,d,ab+s*l,O,d,a,true)}}return null};GLLib.PFX_GetPalIndexARGB_dup_aBaIaI=function(e,c,b){var a=ASprite.GetPixelBuffer_int_dup_aI(b);if(a.length<e.length){GLLib.Assert(false,"PFX_GetPalIndexARGB error: temporal buffer is too small "+a.length+" . At least "+e.length+" is needed")}var d=e.length;while(--d>=0){a[d]=c[e[d]&255]}return a};GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIIZ=function(F,c,o,P,D,C,B,A,z,y,x,R){var w=0;var O=0;var u=C;var r=B;var v=GLLib.GetClipX(F,true);var t=GLLib.GetClipY(F,true);var e=GLLib.GetClipWidth(F,true);var d=GLLib.GetClipHeight(F,true);if(false){var N=v;v=ASprite._graphicsHeight-t-d;t=N;var M=e;e=d;d=M}if((A&4)!=0){u=B;r=C}var L=u;var K=r;if(D+K>d+t){K=d+t-D}if(P+L>e+v){L=e+v-P}if(P<v){w=v-P;L-=w;P+=v-P}if(D<t){O=t-D;K-=O;D+=t-D}if(u<=0||L<=0){return c}if(r<=0||K<=0){return c}if(R){GLLib.PFX_ReadPixelData(o,0,L,P,D,L,K)}if(L!=u||K!=r){for(var Q=K-1;Q>=0;--Q){java.lang.System.arraycopy(o,Q*L,o,w+(Q+O)*u,L)}}if((A&4)!=0){var J=0;var I=r;var H=1;if((A&1)!=0){J=r-1;I=-1;H=-1}var G=u-1;var E=-r;var s=(u-1)*r;if((A&2)!=0){E=r;s=0}var q=H;var p=J;if((z&32)!=0){GLLib.PFX_ProcessAdditive_dup_aIIIIaIIIIIII(c,p,s,q,o,J,H,I,G,E,y)}if((z&64)!=0){GLLib.PFX_ProcessMultiplicative_dup_aIIIIaIIIIIII(c,p,s,q,o,J,H,I,G,E,y)}if((z&128)!=0){GLLib.PFX_ProcessOverlay_dup_aIIIIaIIIIIIII(c,p,s,q,o,J,H,I,G,E,y,x)}if((z&256)!=0){GLLib.PFX_ProcessColorDodge_dup_aIIIIaIIIIIII(c,p,s,q,o,J,H,I,G,E,y)}}else{var m=0;var l=r;var k=1;if((A&2)!=0){m=r-1;l=-1;k=-1}var j=u-1;var h=1;var g=0;if((A&1)!=0){h=-1;g=u-1}var f=k*C;var a=m*C;if((z&32)!=0){GLLib.PFX_ProcessAdditive_dup_aIIIIaIIIIIII(c,a,g,f,o,m,k,l,j,h,y)}if((z&64)!=0){GLLib.PFX_ProcessMultiplicative_dup_aIIIIaIIIIIII(c,a,g,f,o,m,k,l,j,h,y)}if((z&128)!=0){GLLib.PFX_ProcessOverlay_dup_aIIIIaIIIIIIII(c,a,g,f,o,m,k,l,j,h,y,x)}if((z&256)!=0){GLLib.PFX_ProcessColorDodge_dup_aIIIIaIIIIIII(c,a,g,f,o,m,k,l,j,h,y)}}GLLib.s_PFX_sizeX=u;GLLib.s_PFX_sizeY=r;GLLib.s_PFX_hasAlpha=(y<255);return o};GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaIaIIIIIIIIIZ=function(f,k,o,m,a,j,i,h,g,e,d,c,l){GLLib.Dbg("WARNING: ADDITIVE/MULTIPLICATIVE/OVERLAY effects are NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaIaIIIIIIIIIZ(f,GLLib.PFX_GetPalIndexARGB_dup_aBaIaI(k,o,m),m,a,j,i,h,g,e,d,c,l)};GLLib.PFX_ApplyFullScreenBlur_dup_javaxmicroeditionlcduiGraphicsaI=function(g,q){if(false){if(q==null){return}var m=GLLib.s_PFX_windowX;var k=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var e=GLLib.s_PFX_windowHeight;var b=GLLib.s_PFX_params[0][0];var p=GLLib.s_PFX_params[0][2]>>10;var o=gloft.casttoint(q.length/a);var l=0;var j=0;var h=0;if(b==0){var f=o-1;while(j==0){if(e-l<o){j=1;f=e-l}GLLib.PFX_ReadPixelData(q,0,a,m,k+l,a,f);if(l==0){h=q[0]}h=GLLib.PFX_BlurRBlock_dup_IaIII(a*f,q,p,h);GLLib.PFX_WritePixelData(g,q,0,a,m,k+l,a,f,false);l+=f}}else{if(b==1){var d=e-(o-1);var c=o-1;while(j==0){if(d<0){c=o-1+d;d=0;j=1}GLLib.PFX_ReadPixelData(q,0,a,m,k+d,a,c);if(d==e-(o-1)){h=q[a*c-1]}h=GLLib.PFX_BlurLBlock_dup_IaIII(a*c,q,p,h);GLLib.PFX_WritePixelData(g,q,0,a,m,k+d,a,c,false);d-=c}}}}};GLLib.PFX_PaintFullScreenBlend_dup_javaxmicroeditionlcduiGraphicsjavaxmicroeditionlcduiImageaIZ=function(e,o,m,p){if(false){var j=GLLib.s_PFX_windowX;var g=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var d=GLLib.s_PFX_windowHeight;if(o!=null&&!p){e.drawImage(o,0,0,0)}var l=gloft.casttoint(null);var c=l=gloft.casttoint(m.length/a);var f=d;var k=l*a;var h=GLLib.s_PFX_params[1][1]>>10;while(f>0){if(f<c){l=f;f=0;k=l*a}GLLib.PFX_ReadPixelData(m,0,a,j,g,a,l);GLLib.PFX_ProcessBlendSimple_dup_aIII(m,h,k);if(p){e.drawRegion(o,j,g,a,l,0,j,g,0)}GLLib.PFX_WritePixelData(e,m,0,a,j,g,a,l,true);f-=l;g+=l}GLLib.s_PFX_params[1][4]=1}else{GLLib.Dbg("PFX_PaintFullScreenBlend: Effect is not enabled, you must set pfx_useFullScreenEffectBlend to TRUE!")}};GLLib.PFX_ApplyFullScreenAdditive_dup_javaxmicroeditionlcduiGraphicsIaI=function(d,b,l){if(false){var h=GLLib.s_PFX_windowX;var f=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var c=GLLib.s_PFX_windowHeight;var k=gloft.casttoint(l.length/a);var j=0;var e=0;while(e==0){var g=c-j;if(g>k){g=k-1}else{e=1}GLLib.PFX_ReadPixelData(l,0,a,h,f+j,a,g);GLLib.PFX_AdditiveBlock_dup_IaII(a*g,l,b);GLLib.PFX_WritePixelData(d,l,0,a,h,f+j,a,g,false);j+=g}}else{GLLib.Dbg("PFX_ApplyFullScreenAdditive: Effect is not enabled, you must set pfx_useFullScreenEffectAdditive to TRUE!")}};GLLib.PFX_ApplyFullScreenSubtractive_dup_javaxmicroeditionlcduiGraphicsIaI=function(d,b,l){if(false){var h=GLLib.s_PFX_windowX;var f=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var c=GLLib.s_PFX_windowHeight;var k=gloft.casttoint(l.length/a);var j=0;var e=0;while(e==0){var g=c-j;if(g>k){g=k-1}else{e=1}GLLib.PFX_ReadPixelData(l,0,a,h,f+j,a,g);GLLib.PFX_SubtractiveBlock_dup_IaII(a*g,l,b);GLLib.PFX_WritePixelData(d,l,0,a,h,f+j,a,g,false);j+=g}}else{GLLib.Dbg("PFX_ApplyFullScreenSubtractive: Effect is not enabled, you must set pfx_useFullScreenEffectSubtractive to TRUE!")}};GLLib.PFX_ApplyFullScreenMultiplicative_dup_javaxmicroeditionlcduiGraphicsIaI=function(d,b,l){if(false){var h=GLLib.s_PFX_windowX;var f=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var c=GLLib.s_PFX_windowHeight;var k=gloft.casttoint(l.length/a);var j=0;var e=0;while(e==0){var g=c-j;if(g>k){g=k-1}else{e=1}GLLib.PFX_ReadPixelData(l,0,a,h,f+j,a,g);GLLib.PFX_MultiplicativeBlock_dup_IaII(a*g,l,b);GLLib.PFX_WritePixelData(d,l,0,a,h,f+j,a,g,false);j+=g}}else{GLLib.Dbg("PFX_ApplyFullScreenMultiplicative: Effect is not enabled, you must set pfx_useFullScreenEffectMultiplicative to TRUE!")}};GLLib.PFX_InitGlowArea_dup_aI=function(a){if(false){GLLib.PFX_ReadPixelData(a,false?GLLib.s_PFX_params[11][19]:0,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][15],GLLib.s_PFX_params[11][16],GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18])}else{GLLib.Dbg("PFX_InitGlowArea: Glow Effect is not enabled, you must set pfx_useEffectGlow to TRUE!")}};GLLib.PFX_ApplyGlow_dup_javaxmicroeditionlcduiGraphicsIIIaI=function(a,f,c,b,e){if(false){var d=null;if(false){d=e;GLLib.PFX_ProcessGlowBlock_dup_aIaIIIIIII(e,d,f,c,b,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18],GLLib.s_PFX_params[11][19])}else{d=ASprite.GetPixelBuffer_int_dup_aIII(e,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18]);GLLib.PFX_ProcessGlowBlock_dup_aIaIIIIIII(e,d,f,c,b,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18],0)}GLLib.PFX_WritePixelData(a,d,0,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][15],GLLib.s_PFX_params[11][16],GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18],false)}};GLLib.PFX_ProcessOverlay_dup_aIIIIaIIIIIIII=function(g,P,E,D,t,C,B,A,z,y,x,O){var N=0;if(O==0){for(var T=C;T!=A;T+=B){var M=P+E;for(var S=z;S>=0;--S){var L=t[N];var K=g[M];var J=(L&16711680)>>16;var I=(L&65280)>>8;var H=L&255;var G=(K&16711680)>>16;var F=(K&65280)>>8;var w=K&255;var v=gloft.casttoint(null);if(G<128){v=G*J>>7}else{v=255-((255-G)*(255-J)>>7)}var u=gloft.casttoint(null);if(F<128){u=F*I>>7}else{u=255-((255-F)*(255-I)>>7)}var s=gloft.casttoint(null);if(w<128){s=w*H>>7}else{s=255-((255-w)*(255-H)>>7)}t[N]=(x<<24|v<<16|u<<8|s);M+=y;++N}P+=D}}else{for(var R=C;R!=A;R+=B){var r=P+E;for(var Q=z;Q>=0;--Q){var q=g[r];var p=t[N];var o=(q&16711680)>>16;var m=(q&65280)>>8;var h=q&255;var f=(p&16711680)>>16;var e=(p&65280)>>8;var d=p&255;var c=gloft.casttoint(null);if(f<128){c=f*o>>7}else{c=255-((255-f)*(255-o)>>7)}var b=gloft.casttoint(null);if(e<128){b=e*m>>7}else{b=255-((255-e)*(255-m)>>7)}var a=gloft.casttoint(null);if(d<128){a=d*h>>7}else{a=255-((255-d)*(255-h)>>7)}t[N]=(x<<24|c<<16|b<<8|a);r+=y;++N}P+=D}}};GLLib.PFX_ProcessColorDodge_dup_aIIIIaIIIIIII=function(h,w,p,m,C,k,f,d,c,b,a){var v=0;for(var y=k;y!=d;y+=f){var u=w+p;for(var x=c;x>=0;--x){var t=C[v];var s=h[u];var r=(t&16711680)>>16;var q=(t&65280)>>8;var o=t&255;var l=(s&16711680)>>16;var g=(s&65280)>>8;var e=s&255;var B=gloft.casttoint(null);if(l==255){B=255}else{B=gloft.casttoint((r<<8)/(255-l));if(B>255){B=255}}var A=gloft.casttoint(null);if(g==255){A=255}else{A=gloft.casttoint((q<<8)/(255-g));if(A>255){A=255}}var z=gloft.casttoint(null);if(e==255){z=255}else{z=gloft.casttoint((o<<8)/(255-e));if(z>255){z=255}}C[v]=(a<<24|B<<16|A<<8|z);u+=b;++v}w+=m}};GLLib.PFX_ProcessSpriteEffects_dup_javaxmicroeditionlcduiGraphicsaSIIIIIZZZ=function(j,t,D,v,h,f,s,E,I,k){GLLib.s_PFX_hasAlpha=E;GLLib.s_PFX_sizeX=h;GLLib.s_PFX_sizeY=f;GLLib.s_PFX_newSizeX=h;GLLib.s_PFX_newSizeY=f;if((GLLib.s_PFX_type&22016)!=0){if((s&4)!=0){GLLib.s_PFX_sizeX=f;GLLib.s_PFX_sizeY=h;h=GLLib.s_PFX_sizeX;f=GLLib.s_PFX_sizeY}t=ASprite.TransformRGB_dup_aSIIIaS(t,h,f,s,null)}var y=ASprite.GetPixelBuffer_short_dup_aSII(t,h,f);if((GLLib.s_PFX_type&8192)!=0){if(true){var q=GLLib.s_PFX_params[13][0];var i=q!=1&&(q==2||I);var p=t;var J=y;var m=h;var l=f;var g=GLLib.s_PFX_params[13][1];var e=(g!=100)?g:GLLib.s_PFX_params[13][3];var c=GLLib.s_PFX_params[13][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIZZIZ(j,p,J,D,v,m,l,e,(c!=100)?c:GLLib.s_PFX_params[13][4],GLLib.s_PFX_params[13][2],E,i,s,k)}}else{if((GLLib.s_PFX_type&131072)!=0){if(false){var C=GLLib.s_PFX_params[17][0];var d=C!=1&&(C==2||I);var H=GLLib.PFX_ProcessGrayscaleEffect_dup_aSaSIIIZZ(t,y,h*f,GLLib.s_PFX_params[17][5],-1,E,d);var a=ASprite.GetPixelBuffer_short_dup_aSII(H,h,f);var G=H;var F=a;var B=h;var A=f;var z=GLLib.s_PFX_params[17][1];var x=(z!=100)?z:GLLib.s_PFX_params[17][3];var w=GLLib.s_PFX_params[17][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIZZIZ(j,G,F,D,v,B,A,x,(w!=100)?w:GLLib.s_PFX_params[17][4],GLLib.s_PFX_params[17][2],E,d,s,k)}}else{if((GLLib.s_PFX_type&65536)!=0){if(false){return GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIZ(j,t,y,D,v,h,f,GLLib.s_PFX_params[16][0],s,k)}}else{if((GLLib.s_PFX_type&4096)!=0){if(true){var u=GLLib.s_PFX_params[12][0];return GLLib.PFX_ProcessBlend_dup_aSaSIIZZ(t,y,h*f,GLLib.s_PFX_params[12][1],E,u!=1&&(u==2||I))}}else{if((GLLib.s_PFX_type&512)!=0){if(true){var r=GLLib.s_PFX_params[9][0];return GLLib.PFX_ProcessGrayscaleEffect_dup_aSaSIIIZZ(t,y,h*f,GLLib.s_PFX_params[9][2],GLLib.s_PFX_params[9][1],E,r!=1&&(r==2||I))}}else{if((GLLib.s_PFX_type&1024)!=0){if(true){var o=GLLib.s_PFX_params[10][0];return GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIZ(j,t,y,D,v,h,f,s,o!=1&&(o==2||I))}}else{if((GLLib.s_PFX_type&32)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIIZ(j,t,y,D,v,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[5][0],0,true)}}else{if((GLLib.s_PFX_type&64)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIIZ(j,t,y,D,v,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[6][0],0,true)}}else{if((GLLib.s_PFX_type&128)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIIZ(j,t,y,D,v,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[7][0],GLLib.s_PFX_params[7][1],true)}}else{if((GLLib.s_PFX_type&256)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIIZ(j,t,y,D,v,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[8][0],0,true)}}else{if((GLLib.s_PFX_type&16384)!=0){if(true){return GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIZZ(j,t,y,h*f,GLLib.s_PFX_params[14][0],E,I)}}else{if((GLLib.s_PFX_type&32768)!=0&&true){if(GLLib.s_PFX_params[15][0]==1){GLLib.Dbg("PFX_ProcessXPerspective not implemented yet!")}else{if(GLLib.s_PFX_params[15][0]==2){return GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIII(j,t,y,D,v,h,f,GLLib.s_PFX_params[15][1],GLLib.s_PFX_params[15][2],GLLib.s_PFX_params[15][4],GLLib.s_PFX_params[15][6],s)}GLLib.Dbg("PFX_ProcessSpriteEffects Perspective transformation used but type not set!")}}}}}}}}}}}}}return null};GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIII=function(O,k,y,Y,K,J,H,G,F,E,D,C){var X=0;var l=ASprite._graphicsWidth;var s=ASprite._graphicsHeight;if(false){var W=J;J=H;H=W;var V=K;K=s-Y-H;Y=V}if(G<=Y||D<K||E<F){return null}if(G<=X||Y>=l){return null}var T=gloft.casttoint(null);var U=T=G-Y;var S=J<<8;var R=gloft.casttoint(S/T);var m=0;if((C&1)!=0){m=S-GLLib.s_math_F_1;R=-R}var Q=gloft.casttoint((F-K<<8)/T);var P=gloft.casttoint((E-D<<8)/T);var N=0;if(F!=K){N=gloft.casttoint((T<<8)/java.lang.Math.abs(F-K))}var B=K<<8;var A=D<<8;if(Y<X){var z=X-Y;U-=z;m+=R*z;if(m<0||m>=S){return null}var x=B+Q*z;A+=P*z;K=x+(1<<8-1)>>8;D=A+(1<<8-1)>>8;Y=X}var w=m+(1<<8-1)>>8;if(w<0||w>=J||U<=0){return null}if(G>l){var v=G-l;U-=v;F=(F<<8)-Q*v+(1<<8-1)>>8;E=(E<<8)-P*v+(1<<8-1)>>8;G=l}if(K>=s){var u=(K-s+1)*N+(1<<8-1)>>8;U-=u;Y+=u;m+=R*u;if(m<0||m>=S){return null}D=A+P*u+(1<<8-1)>>8;K=s-1}if(F>=s){var t=(F-s+1)*N+(1<<8-1)>>8;U-=t;G=Y+U;E=(E<<8)-P*t+(1<<8-1)>>8;F=s-1}if(U<=0){return null}var I=java.lang.Math.min(K,F);var d=java.lang.Math.max(E,D);if(d>s){d=s}var r=d-I;if(r<=0){return null}var q=gloft.casttoint(y.length/r);var j=gloft.casttoint((G-Y)/q);var h=K;var g=D;for(var Z=0;Z<j;++Z){var f=K+gloft.casttoint((F-K)*q*(Z+1)/U);var e=D+gloft.casttoint((E-D)*q*(Z+1)/U);var M=java.lang.Math.min(h,f);var p=java.lang.Math.max(e,g);if(p>s){p=s}m=GLLib.PFX_PrepareYPerspectiveBlock_dup_aSaSIIIIIIIIIIIIII(y,k,q,p-M,J,H,m,Y+q*Z,Y+q*(Z+1),M,p,h<<8,g<<8,R,Q,P);if(false){if(y==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}else{if(y==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}h=f;g=e}var c=U-q*j;if(c>0){var b=F;var a=E;var L=java.lang.Math.min(h,b);var o=java.lang.Math.max(a,g);if(o>s){o=s}GLLib.PFX_PrepareYPerspectiveBlock_dup_aSaSIIIIIIIIIIIIII(y,k,c,o-L,J,H,m,Y+q*j,G,L,o,h<<8,g<<8,R,Q,P);if(false){if(y==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}else{if(y==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}}return null};GLLib.PFX_ProcessSpriteEffects_dup_javaxmicroeditionlcduiGraphicsaBaSIIIIIZZZ=function(j,C,p,D,u,h,f,s,E,J,l){GLLib.s_PFX_hasAlpha=E;GLLib.s_PFX_sizeX=h;GLLib.s_PFX_sizeY=f;GLLib.s_PFX_newSizeX=h;GLLib.s_PFX_newSizeY=f;if((GLLib.s_PFX_type&22016)!=0){if((s&4)!=0){GLLib.s_PFX_sizeX=f;GLLib.s_PFX_sizeY=h;h=GLLib.s_PFX_sizeX;f=GLLib.s_PFX_sizeY}C=ASprite.TransformRGB_dup_aBIIIaB(C,h,f,s,null)}var x=ASprite.GetPixelBuffer_short_dup_aSII(null,h,f);if((GLLib.s_PFX_type&8192)!=0){if(true){var q=GLLib.s_PFX_params[13][0];var i=q!=1&&(q==2||J);var K=C;var I=x;var m=h;var k=f;var g=GLLib.s_PFX_params[13][1];var e=(g!=100)?g:GLLib.s_PFX_params[13][3];var c=GLLib.s_PFX_params[13][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIZZIZ(j,K,p,I,D,u,m,k,e,(c!=100)?c:GLLib.s_PFX_params[13][4],GLLib.s_PFX_params[13][2],E,i,s,l)}}else{if((GLLib.s_PFX_type&131072)!=0){if(false){var B=GLLib.s_PFX_params[17][0];var d=B!=1&&(B==2||J);var F=GLLib.PFX_ProcessGrayscaleEffect_dup_aBaSaSIIIZZ(C,p,x,h*f,GLLib.s_PFX_params[17][5],-1,E,d);var a=ASprite.GetPixelBuffer_short_dup_aSII(F,h,f);var H=F;var G=a;var A=h;var z=f;var y=GLLib.s_PFX_params[17][1];var w=(y!=100)?y:GLLib.s_PFX_params[17][3];var v=GLLib.s_PFX_params[17][1];return GLLib.PFX_ProcessScaling_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIZZIZ(j,H,G,D,u,A,z,w,(v!=100)?v:GLLib.s_PFX_params[17][4],GLLib.s_PFX_params[17][2],E,d,s,l)}}else{if((GLLib.s_PFX_type&65536)!=0){if(false){return GLLib.PFX_ProcessRotating_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIZ(j,C,p,x,D,u,h,f,GLLib.s_PFX_params[16][0],s,l)}}else{if((GLLib.s_PFX_type&4096)!=0){if(true){var t=GLLib.s_PFX_params[12][0];return GLLib.PFX_ProcessBlend_dup_aBaSaSIIZZ(C,p,x,h*f,GLLib.s_PFX_params[12][1],E,t!=1&&(t==2||J))}}else{if((GLLib.s_PFX_type&512)!=0){if(true){var r=GLLib.s_PFX_params[9][0];return GLLib.PFX_ProcessGrayscaleEffect_dup_aBaSaSIIIZZ(C,p,x,h*f,GLLib.s_PFX_params[9][2],GLLib.s_PFX_params[9][1],E,r!=1&&(r==2||J))}}else{if((GLLib.s_PFX_type&1024)!=0){if(true){var o=GLLib.s_PFX_params[10][0];return GLLib.PFX_ProcessShineEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIZ(j,C,p,x,D,u,h,f,s,o!=1&&(o==2||J))}}else{if((GLLib.s_PFX_type&32)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIIZ(j,C,p,x,D,u,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[5][0],0,true)}}else{if((GLLib.s_PFX_type&64)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIIZ(j,C,p,x,D,u,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[6][0],0,true)}}else{if((GLLib.s_PFX_type&128)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIIZ(j,C,p,x,D,u,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[7][0],GLLib.s_PFX_params[7][1],true)}}else{if((GLLib.s_PFX_type&256)!=0){if(false){return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIIZ(j,C,p,x,D,u,h,f,s,GLLib.s_PFX_type&480,GLLib.s_PFX_params[8][0],0,true)}}else{if((GLLib.s_PFX_type&16384)!=0){if(true){return GLLib.PFX_ProcessStencilEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIZZ(j,C,p,x,h*f,GLLib.s_PFX_params[14][0],E,J)}}else{if((GLLib.s_PFX_type&32768)!=0&&true){if(GLLib.s_PFX_params[15][0]==1){GLLib.Dbg("PFX_ProcessXPerspective not implemented yet!")}else{if(GLLib.s_PFX_params[15][0]==2){return GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIII(j,C,p,x,D,u,h,f,GLLib.s_PFX_params[15][1],GLLib.s_PFX_params[15][2],GLLib.s_PFX_params[15][4],GLLib.s_PFX_params[15][6],s)}GLLib.Dbg("PFX_ProcessSpriteEffects Perspective transformation used but type not set!")}}}}}}}}}}}}}return null};GLLib.PFX_ProcessYPerspective_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIII=function(P,k,z,x,Z,L,K,I,H,G,F,E,D){var Y=0;var m=ASprite._graphicsWidth;var s=ASprite._graphicsHeight;if(false){var X=K;K=I;I=X;var W=L;L=s-Z-I;Z=W}if(H<=Z||E<L||F<G){return null}if(H<=Y||Z>=m){return null}var U=gloft.casttoint(null);var V=U=H-Z;var T=K<<8;var S=gloft.casttoint(T/U);var l=0;if((D&1)!=0){l=T-GLLib.s_math_F_1;S=-S}var R=gloft.casttoint((G-L<<8)/U);var Q=gloft.casttoint((F-E<<8)/U);var O=0;if(G!=L){O=gloft.casttoint((U<<8)/java.lang.Math.abs(G-L))}var C=L<<8;var B=E<<8;if(Z<Y){var A=Y-Z;V-=A;l+=S*A;if(l<0||l>=T){return null}var y=C+R*A;B+=Q*A;L=y+(1<<8-1)>>8;E=B+(1<<8-1)>>8;Z=Y}var w=l+(1<<8-1)>>8;if(w<0||w>=K||V<=0){return null}if(H>m){var v=H-m;V-=v;G=(G<<8)-R*v+(1<<8-1)>>8;F=(F<<8)-Q*v+(1<<8-1)>>8;H=m}if(L>=s){var u=(L-s+1)*O+(1<<8-1)>>8;V-=u;Z+=u;l+=S*u;if(l<0||l>=T){return null}E=B+Q*u+(1<<8-1)>>8;L=s-1}if(G>=s){var t=(G-s+1)*O+(1<<8-1)>>8;V-=t;H=Z+V;F=(F<<8)-Q*t+(1<<8-1)>>8;G=s-1}if(V<=0){return null}var J=java.lang.Math.min(L,G);var d=java.lang.Math.max(F,E);if(d>s){d=s}var r=d-J;if(r<=0){return null}var q=gloft.casttoint(x.length/r);var j=gloft.casttoint((H-Z)/q);var h=L;var g=E;for(var aa=0;aa<j;++aa){var f=L+gloft.casttoint((G-L)*q*(aa+1)/V);var e=E+gloft.casttoint((F-E)*q*(aa+1)/V);var N=java.lang.Math.min(h,f);var p=java.lang.Math.max(e,g);if(p>s){p=s}l=GLLib.PFX_PrepareYPerspectiveBlock_dup_aSaBaSIIIIIIIIIIIIII(x,k,z,q,p-N,K,I,l,Z+q*aa,Z+q*(aa+1),N,p,h<<8,g<<8,S,R,Q);if(false){if(x==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}else{if(x==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}h=f;g=e}var c=V-q*j;if(c>0){var b=G;var a=F;var M=java.lang.Math.min(h,b);var o=java.lang.Math.max(a,g);if(o>s){o=s}GLLib.PFX_PrepareYPerspectiveBlock_dup_aSaBaSIIIIIIIIIIIIII(x,k,z,c,o-M,K,I,l,Z+q*j,H,M,o,h<<8,g<<8,S,R,Q);if(false){if(x==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}else{if(x==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}}return null};GLLib.PFX_GetPalIndexARGB_dup_aBaSaS=function(e,c,a){var b=ASprite.GetPixelBuffer_short_dup_aS(a);if(b.length<e.length){GLLib.Assert(false,"PFX_GetPalIndexARGB error: temporal buffer is too small "+b.length+" . At least "+e.length+" is needed")}var d=e.length;while(--d>=0){b[d]=c[e[d]&255]}return b};GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIIZ=function(F,c,o,P,D,C,B,A,z,y,x,R){var w=0;var O=0;var u=C;var r=B;var v=GLLib.GetClipX(F,true);var t=GLLib.GetClipY(F,true);var e=GLLib.GetClipWidth(F,true);var d=GLLib.GetClipHeight(F,true);if(false){var N=v;v=ASprite._graphicsHeight-t-d;t=N;var M=e;e=d;d=M}if((A&4)!=0){u=B;r=C}var L=u;var K=r;if(D+K>d+t){K=d+t-D}if(P+L>e+v){L=e+v-P}if(P<v){w=v-P;L-=w;P+=v-P}if(D<t){O=t-D;K-=O;D+=t-D}if(u<=0||L<=0){return c}if(r<=0||K<=0){return c}if(R){if(o==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])")}if(L!=u||K!=r){for(var Q=K-1;Q>=0;--Q){java.lang.System.arraycopy(o,Q*L,o,w+(Q+O)*u,L)}}if((A&4)!=0){var J=0;var I=r;var H=1;if((A&1)!=0){J=r-1;I=-1;H=-1}var G=u-1;var E=-r;var s=(u-1)*r;if((A&2)!=0){E=r;s=0}var q=H;var p=J;if((z&32)!=0){GLLib.PFX_ProcessAdditive_dup_aSIIIaSIIIIII(c,p,s,q,o,J,H,I,G,E,y)}if((z&64)!=0){GLLib.PFX_ProcessMultiplicative_dup_aSIIIaSIIIIII(c,p,s,q,o,J,H,I,G,E,y)}if((z&128)!=0){GLLib.PFX_ProcessOverlay_dup_aSIIIaSIIIIIII(c,p,s,q,o,J,H,I,G,E,y,x)}if((z&256)!=0){GLLib.PFX_ProcessColorDodge_dup_aSIIIaSIIIIII(c,p,s,q,o,J,H,I,G,E,y)}}else{var m=0;var l=r;var k=1;if((A&2)!=0){m=r-1;l=-1;k=-1}var j=u-1;var h=1;var g=0;if((A&1)!=0){h=-1;g=u-1}var f=k*C;var a=m*C;if((z&32)!=0){GLLib.PFX_ProcessAdditive_dup_aSIIIaSIIIIII(c,a,g,f,o,m,k,l,j,h,y)}if((z&64)!=0){GLLib.PFX_ProcessMultiplicative_dup_aSIIIaSIIIIII(c,a,g,f,o,m,k,l,j,h,y)}if((z&128)!=0){GLLib.PFX_ProcessOverlay_dup_aSIIIaSIIIIIII(c,a,g,f,o,m,k,l,j,h,y,x)}if((z&256)!=0){GLLib.PFX_ProcessColorDodge_dup_aSIIIaSIIIIII(c,a,g,f,o,m,k,l,j,h,y)}}GLLib.s_PFX_sizeX=u;GLLib.s_PFX_sizeY=r;GLLib.s_PFX_hasAlpha=(y<255);return o};GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaBaSaSIIIIIIIIZ=function(f,k,o,m,a,j,i,h,g,e,d,c,l){GLLib.Dbg("WARNING: ADDITIVE/MULTIPLICATIVE/OVERLAY effects are NOT OPTIMIZED yet for Palette Index Cache. It will get the ARGB array first and then apply the effect");return GLLib.PFX_ProcessPixelEffect_dup_javaxmicroeditionlcduiGraphicsaSaSIIIIIIIIZ(f,GLLib.PFX_GetPalIndexARGB_dup_aBaSaS(k,o,m),m,a,j,i,h,g,e,d,c,l)};GLLib.PFX_ApplyFullScreenBlur_dup_javaxmicroeditionlcduiGraphicsaS=function(g,q){if(false){if(q==null){return}var m=GLLib.s_PFX_windowX;var k=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var e=GLLib.s_PFX_windowHeight;var b=GLLib.s_PFX_params[0][0];var p=GLLib.s_PFX_params[0][2]>>10;var o=gloft.casttoint(q.length/a);var l=0;var j=0;var h=0;if(b==0){var f=o-1;while(j==0){if(e-l<o){j=1;f=e-l}if(q==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])");if(l==0){h=q[0]}h=GLLib.PFX_BlurRBlock_dup_IaSII(a*f,q,p,h);if(q==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");l+=f}}else{if(b==1){var d=e-(o-1);var c=o-1;while(j==0){if(d<0){c=o-1+d;d=0;j=1}if(q==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])");if(d==e-(o-1)){h=q[a*c-1]}h=GLLib.PFX_BlurLBlock_dup_IaSII(a*c,q,p,h);if(q==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");d-=c}}}}};GLLib.PFX_PaintFullScreenBlend_dup_javaxmicroeditionlcduiGraphicsjavaxmicroeditionlcduiImageaSZ=function(e,o,m,p){if(false){var j=GLLib.s_PFX_windowX;var g=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var d=GLLib.s_PFX_windowHeight;if(o!=null&&!p){e.drawImage(o,0,0,0)}var l=gloft.casttoint(null);var c=l=gloft.casttoint(m.length/a);var f=d;var k=l*a;var h=GLLib.s_PFX_params[1][1]>>10;while(f>0){if(f<c){l=f;f=0;k=l*a}if(m==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])");GLLib.PFX_ProcessBlendSimple_dup_aSII(m,h,k);if(p){e.drawRegion(o,j,g,a,l,0,j,g,0)}if(m==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");f-=l;g+=l}GLLib.s_PFX_params[1][4]=1}else{GLLib.Dbg("PFX_PaintFullScreenBlend: Effect is not enabled, you must set pfx_useFullScreenEffectBlend to TRUE!")}};GLLib.PFX_ApplyFullScreenAdditive_dup_javaxmicroeditionlcduiGraphicsIaS=function(d,b,l){if(false){var h=GLLib.s_PFX_windowX;var f=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var c=GLLib.s_PFX_windowHeight;var k=gloft.casttoint(l.length/a);var j=0;var e=0;while(e==0){var g=c-j;if(g>k){g=k-1}else{e=1}if(l==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])");GLLib.PFX_AdditiveBlock_dup_IaSI(a*g,l,b);if(l==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");j+=g}}else{GLLib.Dbg("PFX_ApplyFullScreenAdditive: Effect is not enabled, you must set pfx_useFullScreenEffectAdditive to TRUE!")}};GLLib.PFX_ApplyFullScreenSubtractive_dup_javaxmicroeditionlcduiGraphicsIaS=function(d,b,l){if(false){var h=GLLib.s_PFX_windowX;var f=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var c=GLLib.s_PFX_windowHeight;var k=gloft.casttoint(l.length/a);var j=0;var e=0;while(e==0){var g=c-j;if(g>k){g=k-1}else{e=1}if(l==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])");GLLib.PFX_SubtractiveBlock_dup_IaSI(a*g,l,b);if(l==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");j+=g}}else{GLLib.Dbg("PFX_ApplyFullScreenSubtractive: Effect is not enabled, you must set pfx_useFullScreenEffectSubtractive to TRUE!")}};GLLib.PFX_ApplyFullScreenMultiplicative_dup_javaxmicroeditionlcduiGraphicsIaS=function(d,b,l){if(false){var h=GLLib.s_PFX_windowX;var f=GLLib.s_PFX_windowY;var a=GLLib.s_PFX_windowWidth;var c=GLLib.s_PFX_windowHeight;var k=gloft.casttoint(l.length/a);var j=0;var e=0;while(e==0){var g=c-j;if(g>k){g=k-1}else{e=1}if(l==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])");GLLib.PFX_MultiplicativeBlock_dup_IaSI(a*g,l,b);if(l==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])");j+=g}}else{GLLib.Dbg("PFX_ApplyFullScreenMultiplicative: Effect is not enabled, you must set pfx_useFullScreenEffectMultiplicative to TRUE!")}};GLLib.PFX_InitGlowArea_dup_aS=function(g){if(false){var f=false?GLLib.s_PFX_params[11][19]:0;var e=GLLib.s_PFX_params[11][17];var d=GLLib.s_PFX_params[11][15];var c=GLLib.s_PFX_params[11][16];var b=GLLib.s_PFX_params[11][17];var a=GLLib.s_PFX_params[11][18];if(g==null){GLLib.Assert(false,"Error in PFX_ReadPixelData: destination buffer is null!")}GLLib.Dbg("PFX_ReadPixelData: In MIDP2 (without Nokia) you are trying to read a short[]!!! (not implemented, would require manual conversion to int[])")}else{GLLib.Dbg("PFX_InitGlowArea: Glow Effect is not enabled, you must set pfx_useEffectGlow to TRUE!")}};GLLib.PFX_ApplyGlow_dup_javaxmicroeditionlcduiGraphicsIIIaS=function(e,a,i,h,j){if(false){var l=null;if(false){l=j;GLLib.PFX_ProcessGlowBlock_dup_aSaSIIIIII(j,l,a,i,h,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18],GLLib.s_PFX_params[11][19])}else{l=ASprite.GetPixelBuffer_short_dup_aSII(j,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18]);GLLib.PFX_ProcessGlowBlock_dup_aSaSIIIIII(j,l,a,i,h,GLLib.s_PFX_params[11][17],GLLib.s_PFX_params[11][18],0)}var k=l;var g=GLLib.s_PFX_params[11][17];var f=GLLib.s_PFX_params[11][15];var d=GLLib.s_PFX_params[11][16];var c=GLLib.s_PFX_params[11][17];var b=GLLib.s_PFX_params[11][18];if(k==null){GLLib.Assert(false,"Error in PFX_WritePixelData: source buffer is null!")}GLLib.Dbg("PFX_WritePixelData: In MIDP2 (without Nokia) you are trying to write a short[] to screen!!! (not implemented, would require manual conversion to int[])")}};GLLib.PFX_ProcessOverlay_dup_aSIIIaSIIIIIII=function(g,P,E,D,t,C,B,A,z,y,x,O){var N=0;if(O==0){for(var T=C;T!=A;T+=B){var M=P+E;for(var S=z;S>=0;--S){var L=t[N];var K=g[M];var J=(L&3840)>>8;var I=(L&240)>>4;var H=gloft.casttoshort((L&15));var G=(K&3840)>>8;var F=(K&240)>>4;var w=gloft.casttoshort((K&15));var v=gloft.casttoint(null);if(G<8){v=G*J>>3}else{v=15-((15-G)*(15-J)>>3)}var u=gloft.casttoint(null);if(F<8){u=F*I>>3}else{u=15-((15-F)*(15-I)>>3)}var s=gloft.casttoint(null);if(w<8){s=w*H>>3}else{s=15-((15-w)*(15-H)>>3)}t[N]=gloft.casttoshort((x<<12|v<<8|u<<4|s));M+=y;++N}P+=D}}else{for(var R=C;R!=A;R+=B){var r=P+E;for(var Q=z;Q>=0;--Q){var q=g[r];var p=t[N];var o=(q&3840)>>8;var m=(q&240)>>4;var h=gloft.casttoshort((q&15));var f=(p&3840)>>8;var e=(p&240)>>4;var d=gloft.casttoshort((p&15));var c=gloft.casttoint(null);if(f<8){c=f*o>>3}else{c=15-((15-f)*(15-o)>>3)}var b=gloft.casttoint(null);if(e<8){b=e*m>>3}else{b=15-((15-e)*(15-m)>>3)}var a=gloft.casttoint(null);if(d<8){a=d*h>>3}else{a=15-((15-d)*(15-h)>>3)}t[N]=gloft.casttoshort((x<<12|c<<8|b<<4|a));r+=y;++N}P+=D}}};GLLib.PFX_ProcessColorDodge_dup_aSIIIaSIIIIII=function(h,w,p,m,C,k,f,d,c,b,a){var v=0;for(var y=k;y!=d;y+=f){var u=w+p;for(var x=c;x>=0;--x){var t=C[v];var s=h[u];var r=(t&3840)>>8;var q=(t&240)>>4;var o=gloft.casttoshort((t&15));var l=(s&3840)>>8;var g=(s&240)>>4;var e=gloft.casttoshort((s&15));var B=gloft.casttoint(null);if(l==15){B=15}else{B=gloft.casttoint((r<<4)/(15-l));if(B>15){B=15}}var A=gloft.casttoint(null);if(g==15){A=15}else{A=gloft.casttoint((q<<4)/(15-g));if(A>15){A=15}}var z=gloft.casttoint(null);if(e==15){z=15}else{z=gloft.casttoint((o<<4)/(15-e));if(z>15){z=15}}C[v]=gloft.casttoshort((a<<12|B<<8|A<<4|z));u+=b;++v}w+=m}};GLLib.DrawGradientRect_dup_IIIIIII=function(g,e,d,c,b,a,f){GLLib.DrawGradientRect_dup_javaxmicroeditionlcduiGraphicsIIIIIII(GLLib.g,g,e,d,c,b,a,f)};GLLib.DrawGradientRect_dup_javaxmicroeditionlcduiGraphicsIIIIIII=function(G,Q,E,D,C,B,A,z){var y=B>>16&255;var x=B>>8&255;var P=B>>0&255;var O=A>>16&255;var N=A>>8&255;var M=A>>0&255;var L=O-y;var K=N-x;var J=M-P;var I=Q+D-1;var H=E+C-1;var F=y<<16;var w=x<<16;var v=P<<16;if(z==4){var u=I-Q;var t=gloft.casttoint((L<<16)/u);var s=gloft.casttoint((K<<16)/u);var r=gloft.casttoint((J<<16)/u);for(var U=I;U>=Q;--U){GLLib.SetColor(G,F>>16,w>>16,v>>16);GLLib.DrawLine(G,U,E,U,H);F+=t;w+=s;v+=r}}else{if(z==8){var q=I-Q;var p=gloft.casttoint((L<<16)/q);var o=gloft.casttoint((K<<16)/q);var m=gloft.casttoint((J<<16)/q);for(var T=Q;T<=I;++T){GLLib.SetColor(G,F>>16,w>>16,v>>16);GLLib.DrawLine(G,T,E,T,H);F+=p;w+=o;v+=m}}else{if(z==16){var h=H-E;var g=gloft.casttoint((L<<16)/h);var f=gloft.casttoint((K<<16)/h);var e=gloft.casttoint((J<<16)/h);for(var S=H;S>=E;--S){GLLib.SetColor(G,F>>16,w>>16,v>>16);GLLib.DrawLine(G,Q,S,I,S);F+=g;w+=f;v+=e}}else{if(z==32){var d=H-E;var c=gloft.casttoint((L<<16)/d);var b=gloft.casttoint((K<<16)/d);var a=gloft.casttoint((J<<16)/d);for(var R=E;R<=H;++R){GLLib.SetColor(G,F>>16,w>>16,v>>16);GLLib.DrawLine(G,Q,R,I,R);F+=c;w+=b;v+=a}}}}}};GLLib.DrawAlphaGradientRect=function(x,o,l,h,f,d,c){if(c!=4&&c!=8&&c!=16&&c!=32){GLLib.Assert(false,"DrawAlphaGradientRect: direction parameter is not valid: "+c)}var b=l;var E=h;if(c==16||c==32){b=h;E=l}if(c==4||c==16){var a=f;f=d;d=a}var v=ASprite.GetPixelBuffer_int_dup_aI(null);var u=(E<gloft.casttoint(v.length/b))?E:(gloft.casttoint(v.length/b));var t=f>>24&255;var s=f>>16&255;var r=f>>8&255;var q=f>>0&255;var p=d>>24&255;var m=d>>16&255;var k=d>>8&255;var g=d>>0&255;--b;var e=gloft.casttoint((p-t<<16)/b);var I=gloft.casttoint((m-s<<16)/b);var H=gloft.casttoint((k-r<<16)/b);var G=gloft.casttoint((g-q<<16)/b);++b;var F=t<<16;var D=s<<16;var C=r<<16;var A=q<<16;var z=gloft.casttoint(null);var y=gloft.casttoint(null);if(c==4||c==8){z=l;y=-(l*u)+1}else{z=1;y=0}var w=0;for(var B=0;B<b;++B){while(--u>=0){v[w]=f;w+=z}F+=e;D+=I;C+=H;A+=G;f=((F<<8&-16777216)|(D&16711680)|(C>>8&65280)|(A>>16&255));w+=y}if(c==4||c==8){while(E>0){GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(GLLib.g,v,0,l,x,o,l,(u<E)?u:E,true,true,0);o+=u;E-=u}}else{if(c==16||c==32){while(E>0){GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(GLLib.g,v,0,u,x,o,(u<E)?u:E,h,true,true,0);x+=u;E-=u}}}};GLLib.Pointer_SetCurrentPointer=function(a){if(true&&1>1){if(a>=1){GLLib.Assert(false,"Pointer_SetCurrentPointer: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}GLLib.s_currentPointer=a}};GLLib.Pointer_GetNumPointers=function(){return 1};GLLib.Pointer_Init=function(){if(true){GLLib.s_pointerState=0;if(1>1){if(GLLib.s_isPointerPressedSystem_multi==null){GLLib.s_pointerX_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_pointerY_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_prevPointerX_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_prevPointerY_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_tmpPrevPointerX_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_tmpPrevPointerY_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_pointerState_multi=gloft.ArrayCreation([1],gloft.casttoint(null));GLLib.s_isPointerPressedSystem_multi=gloft.ArrayCreation([1],gloft.casttoboolean(null));GLLib.s_isPointerReleasedSystem_multi=gloft.ArrayCreation([1],gloft.casttoboolean(null));GLLib.s_isPointerDraggedSystem_multi=gloft.ArrayCreation([1],gloft.casttoboolean(null))}for(var a=0;a<1;++a){GLLib.s_pointerState_multi[a]=0}}}};GLLib.Pointer_Update=function(){if(true){if(GLLib.s_isPointerPressedSystem){GLLib.Pointer_SwitchState_dup_I(1);GLLib.s_isPointerPressedSystem=false}else{if(GLLib.s_isPointerReleasedSystem){GLLib.Pointer_SwitchState_dup_I(2);GLLib.s_isPointerReleasedSystem=false;GLLib.s_isPointerDraggedSystem=false}else{if(GLLib.s_isPointerDraggedSystem){GLLib.Pointer_SwitchState_dup_I(3);GLLib.s_isPointerDraggedSystem=false}}}GLLib.s_tmpPrevPointerX=GLLib.s_pointerX;GLLib.s_tmpPrevPointerY=GLLib.s_pointerY;if(1>1){for(var a=0;a<1;++a){if(GLLib.s_isPointerPressedSystem_multi[a]){GLLib.Pointer_SwitchState_dup_II(a,1);GLLib.s_isPointerPressedSystem_multi[a]=false}else{if(GLLib.s_isPointerReleasedSystem_multi[a]){GLLib.Pointer_SwitchState_dup_II(a,2);GLLib.s_isPointerReleasedSystem_multi[a]=false;GLLib.s_isPointerDraggedSystem_multi[a]=false}else{if(GLLib.s_isPointerDraggedSystem_multi[a]){GLLib.Pointer_SwitchState_dup_II(a,3);GLLib.s_isPointerDraggedSystem_multi[a]=false}}}GLLib.s_tmpPrevPointerX_multi[a]=GLLib.s_pointerX_multi[a];GLLib.s_tmpPrevPointerY_multi[a]=GLLib.s_pointerY_multi[a]}}}};GLLib.Pointer_Reset=function(){if(true){switch(GLLib.s_pointerState){case 1:GLLib.Pointer_SwitchState_dup_I(4);break;case 2:GLLib.Pointer_SwitchState_dup_I(0);break}GLLib.s_prevPointerX=GLLib.s_tmpPrevPointerX;GLLib.s_prevPointerY=GLLib.s_tmpPrevPointerY;if(1>1){for(var a=0;a<1;++a){switch(GLLib.s_pointerState_multi[a]){case 1:GLLib.Pointer_SwitchState_dup_II(a,4);break;case 2:GLLib.Pointer_SwitchState_dup_II(a,0);break}GLLib.s_prevPointerX_multi[a]=GLLib.s_tmpPrevPointerX_multi[a];GLLib.s_prevPointerY_multi[a]=GLLib.s_tmpPrevPointerY_multi[a]}}}};GLLib.Pointer_GetState=function(a){if(!true){return -1}if(a>=1){GLLib.Assert(false,"Pointer_GetState: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerState_multi[a]}return GLLib.s_pointerState};GLLib.Pointer_ChangeStateCallback_dup_II=function(b,a){if(true&&1>1){GLLib.Pointer_ChangeStateCallback_dup_III(0,b,a)}};GLLib.Pointer_ChangeStateCallback_dup_III=function(c,b,a){if(true){if(c>=1){GLLib.Assert(false,"Pointer_ChangeStateCallback: pointer ID "+c+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1<=1){GLLib.Pointer_ChangeStateCallback_dup_II(b,a)}}};GLLib.Pointer_SwitchState_dup_I=function(a){GLLib.Pointer_SwitchState_dup_II(0,a)};GLLib.Pointer_SwitchState_dup_II=function(b,a){if(true){if(b>=1){GLLib.Assert(false,"Pointer_SwitchState: pointer ID "+b+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){GLLib.Pointer_ChangeStateCallback_dup_III(b,GLLib.s_pointerState_multi[b],a);GLLib.s_pointerState_multi[b]=a;if(b==0){GLLib.s_pointerState=a}}else{GLLib.Pointer_ChangeStateCallback_dup_II(GLLib.s_pointerState,a);GLLib.s_pointerState=a}}};GLLib.Pointer_AdjustToRotatedCoordinates_dup_=function(){GLLib.Pointer_AdjustToRotatedCoordinates_dup_I(0)};GLLib.Pointer_AdjustToRotatedCoordinates_dup_I=function(c){if(true){if(c>=1){GLLib.Assert(false,"Pointer_AdjustToRotatedCoordinates: pointer ID "+c+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){var a=GLLib.s_pointerY_multi[c];GLLib.s_pointerY_multi[c]=GLLib.s_screenHeight-GLLib.s_pointerX_multi[c];GLLib.s_pointerX_multi[c]=a}if(c==0){var b=GLLib.s_pointerY;GLLib.s_pointerY=GLLib.s_screenHeight-GLLib.s_pointerX;GLLib.s_pointerX=b}}};GLLib.Pointer_IsReleased=function(a){if(!true){return false}if(a>=1){GLLib.Assert(false,"Pointer_IsReleased: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerState_multi[a]==2}return GLLib.s_pointerState==2};GLLib.Pointer_IsPressed=function(a){if(!true){return false}if(a>=1){GLLib.Assert(false,"Pointer_IsPressed: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerState_multi[a]==1}return GLLib.s_pointerState==1};GLLib.Pointer_IsDragged=function(a){if(!true){return false}if(a>=1){GLLib.Assert(false,"Pointer_IsDragged: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerState_multi[a]==3}return GLLib.s_pointerState==3};GLLib.Pointer_IsIdle=function(a){if(!true){return false}if(a>=1){GLLib.Assert(false,"Pointer_IsIdle: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerState_multi[a]==0}return GLLib.s_pointerState==0};GLLib.Pointer_IsDown=function(a){if(!true){return false}if(a>=1){GLLib.Assert(false,"Pointer_IsDown: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerState_multi[a]==4}return GLLib.s_pointerState==4};GLLib.Pointer_IsHeldDown=function(b){if(!true){return false}if(b>=1){GLLib.Assert(false,"Pointer_IsHeldDown: pointer ID "+b+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){var a=GLLib.s_pointerState_multi[b];return a==4||a==1||a==3}return GLLib.s_pointerState==4||GLLib.s_pointerState==1||GLLib.s_pointerState==3};GLLib.Pointer_GetX=function(a){if(!true){return -1}if(a>=1){GLLib.Assert(false,"Pointer_GetX: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerX_multi[a]}return GLLib.s_pointerX};GLLib.Pointer_GetY=function(a){if(!true){return -1}if(a>=1){GLLib.Assert(false,"Pointer_GetY: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_pointerY_multi[a]}return GLLib.s_pointerY};GLLib.Pointer_GetPrevX=function(a){if(!true){return -1}if(a>=1){GLLib.Assert(false,"Pointer_GetPrevX: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_prevPointerX_multi[a]}return GLLib.s_prevPointerX};GLLib.Pointer_GetPrevY=function(a){if(!true){return -1}if(a>=1){GLLib.Assert(false,"Pointer_GetPrevY: pointer ID "+a+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}if(1>1){return GLLib.s_prevPointerY_multi[a]}return GLLib.s_prevPointerY};GLLib.Pointer_IsInRect_dup_aI=function(a){if(true){if(a==null){GLLib.Assert(false,"Pointer_IsInRect: rect array parameter is null")}if(a.length!=4){GLLib.Assert(false,"Pointer_IsInRect: rect array length must be 4 (rect[0] = x, rect[1] = y, rect[2] = width, rect[3] = height)")}return GLLib.Pointer_IsInRect_dup_IIII(a[0],a[1],a[2],a[3])}return false};GLLib.Pointer_IsInRect_dup_IIII=function(d,c,b,a){if(!true){return false}if(1>1){return GLLib.Pointer_IsInRect_dup_IIIIII(0,GLLib.s_pointerState_multi[0],d,c,b,a)}return GLLib.Pointer_IsInRect_dup_IIIIII(0,GLLib.s_pointerState,d,c,b,a)};GLLib.Pointer_IsInRect_dup_IIIIII=function(h,g,f,e,d,c){if(true){if(h>=1){GLLib.Assert(false,"Pointer_IsInRect: pointer ID "+h+" out of range.  Change GLLibConfig.touchScreen_numPointers.")}var a=false;if(1>1){if(GLLib.s_pointerX_multi[h]>f&&GLLib.s_pointerX_multi[h]<f+d&&GLLib.s_pointerY_multi[h]>e&&GLLib.s_pointerY_multi[h]<e+c){switch(g){case 0:a=GLLib.Pointer_IsIdle(h);break;case 1:a=GLLib.Pointer_IsPressed(h);break;case 4:a=GLLib.Pointer_IsDown(h);break;case 2:a=GLLib.Pointer_IsReleased(h);break;case 3:a=GLLib.Pointer_IsDragged(h);break}}}else{if(GLLib.s_pointerX>f&&GLLib.s_pointerX<f+d&&GLLib.s_pointerY>e&&GLLib.s_pointerY<e+c){switch(g){case 0:a=GLLib.Pointer_IsIdle(0);break;case 1:a=GLLib.Pointer_IsPressed(0);break;case 4:a=GLLib.Pointer_IsDown(0);break;case 2:a=GLLib.Pointer_IsReleased(0);break;case 3:a=GLLib.Pointer_IsDragged(0);break}}}return a}return false};GLLib.String_EncodeTo6Bit=function(g){if(g==null){GLLib.Assert(false,"String_EncodeTo6Bit: input is null.")}var k=0;var h=0;var e="";var c=g.getBytes();for(var f=0;f<g.length;++f){var a=c[f];if(a<0){GLLib.Assert(false,"String_EncodeTo6Bit: input is not an ASCII-encoded string.")}for(var d=0;d<8;++d){if(h==6){e+=GLLib.getCharFrom6BitKey(k);h=0;k=0}k=GLLib.getSetBit(k,h,a&1);a>>=1;++h}}if(h!=0){e+=GLLib.getCharFrom6BitKey(k)}if(h==6){e+=GLLib.getCharFrom6BitKey(0)}return e};GLLib.String_DecodeFrom6Bit=function(d){if(d==null){GLLib.Assert(false,"String_DecodeFrom6Bit: code is null.")}var h=0;var g=0;var e="";var a=d.getBytes();for(var c=0;c<d.length;++c){var f=GLLib.get6BitKeyBinary(a[c]);if(f==-1){return e}for(var b=0;b<6;++b){if(g==8){e+=gloft.casttochar(h);g=0}h=GLLib.getSetBit(h,g,f&1);++g;f>>=1}}return e};GLLib.String_Encrypt=function(k){if(k==null){GLLib.Assert(false,"String_Encrypt: input is null.")}var j=gloft.casttobyte(GLLib.Math_Rand(0,128));var h=0;var g=j;var a=k.getBytes();var e=gloft.ArrayCreation([a.length+2],gloft.casttobyte(null));for(var c=0;c<a.length;++c){var f=a[c];if(f<0){GLLib.Assert(false,"String_Encrypt: input is not an ASCII-encoded string.")}e[c+2]=gloft.casttobyte((f^j));h+=f;j=gloft.casttobyte((j+h&127))}var d=gloft.casttobyte((h&127));e[0]=g;e[1]=d;return new java.lang.String(e)};GLLib.String_Decrypt=function(h){if(h==null){GLLib.Assert(false,"String_Decrypt: cipher is null.")}if(h.length<2){GLLib.Assert(false,"String_Decrypt: cipher is not valid.")}var e=h.getBytes();var c=e[0];var f=e[1];var d=0;var j=gloft.ArrayCreation([e.length-2],gloft.casttobyte(null));for(var g=0;g<e.length-2;++g){var a=gloft.casttobyte((e[g+2]^c));j[g]=a;d+=a;c=gloft.casttobyte((c+d&127))}if(gloft.casttobyte((d&127))!=f){GLLib.Assert(false,"String_Decrypt: cipher is not valid.");return null}return new java.lang.String(j)};GLLib.getSetBit=function(a,f,e){if(e==0){var d=-1;if(f>=0&&f<=7){d-=gloft.casttobyte((1<<f))}return gloft.casttobyte((a&d))}if(e==1){var c=0;if(f>=0&&f<=7){c=gloft.casttobyte((1<<f))}return gloft.casttobyte((a|c))}return a};GLLib.get6BitKeyBinary=function(a){if(a>=97&&a<=122){return gloft.casttobyte((a-97))}if(a>=65&&a<=90){return gloft.casttobyte((a-65+26))}if(a>=48&&a<=57){return gloft.casttobyte((a-48+52))}if(a==95){return 62}if(a==45){return 63}return -1};GLLib.getCharFrom6BitKey=function(a){if(a<0||a>63){throw new java.lang.IndexOutOfBoundsException()}if(a<26){return gloft.casttochar((97+a))}if(a<52){return gloft.casttochar((65+(a-26)))}if(a<62){return gloft.casttochar((48+(a-52)))}if(a==62){return"_"}return"-"};GLLib.DrawAAAlphaLineWidth=function(d,a,l,k,j,g,e,c,b){var h=java.lang.Math.abs(j-l);var m=java.lang.Math.abs(g-k);a>>=1;for(var f=-a;f<a;++f){if(h>m){GLLib.DrawAAAlphaLine(d,l,k+f,j,g+f,e,c,b)}else{GLLib.DrawAAAlphaLine(d,l+f,k,j+f,g,e,c,b)}}};GLLib.DrawAAAlphaLine=function(M,ag,K,J,I,G,E,D){var C=J-ag;var B=I-K;if(((C<0)?(-C):C)>((B<0)?(-B):B)){if(J<ag){var ad=ag;ag=J;J=ad;var ab=K;K=I;I=ab;var Z=E;E=D;D=Z}var X=J-ag;var V=I-K;var T=0;if(X!=0){T=gloft.casttoint((V<<16)/X)}var R=ag;var P=(K<<16)+T*(R-ag);var N=R;var L=P+T;var y=J;var x=0;if(X!=0){x=gloft.casttoint((D-E<<16)/X)}var H=ASprite.GetPixelBuffer_int_dup_aI(null);E<<=16;var w=0;var v=N;var u=(N>M.getClipX())?N:M.getClipX();var t=(y<M.getClipX()+M.getClipWidth())?y:(M.getClipX()+M.getClipWidth());var s=u-v;var r=L+T*s;E+=x*s;var q=M.getClipY()+M.getClipHeight();var d=M.getClipY();for(var ai=u;ai<t;++ai){var p=r>>16;if(p<d||p>=q){r+=T;E+=x;if(w!=0){return}}else{w=1;var o=r&65535;H[0]=(((65535-o>>8)*E&-16777216)|G);H[1]=(((o>>8)*E&-16777216)|G);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(M,H,0,1,ai,p,1,2,true,true,0);r+=T;E+=x}}}else{if(I<K){var m=ag;ag=J;J=m;var l=K;K=I;I=l;var k=E;E=D;D=k}var h=J-ag;var g=I-K;var f=0;if(g!=0){f=gloft.casttoint((h<<16)/g)}var c=K;var b=(ag<<16)+f*(c-K);var a=c;var af=b+f;var ae=I;var ac=0;if(g!=0){ac=gloft.casttoint((D-E<<16)/g)}E<<=16;var F=ASprite.temp_int;var aa=0;var Y=a;var W=(a>M.getClipY())?a:M.getClipY();var U=(ae<M.getClipY()+M.getClipHeight())?ae:(M.getClipY()+M.getClipHeight());var S=W-Y;var Q=af+f*S;E+=ac*S;var O=M.getClipX()+M.getClipWidth();var e=M.getClipX();for(var ah=W;ah<U;++ah){var A=Q>>16;if(A<e||A>=O){Q+=f;E+=ac;if(aa!=0){return}}else{aa=1;var z=Q&65535;F[0]=(((65535-z>>8)*E&-16777216)|G);F[1]=(((z>>8)*E&-16777216)|G);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(M,F,0,2,A,ah,2,1,true,true,0);Q+=f;E+=ac}}}};GLLib.DrawAACircle=function(e,a,l,k,j){var h=k*k;var g=k;var f=0;var d=0;var m=ASprite.GetPixelBuffer_int_dup_aI(null);m[0]=(-16777216|j);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a+g,l+f,1,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a-g,l+f,1,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a+f,l+g,1,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a+f,l-g,1,1,true,true,0);while(g>f+1){++f;var c=255-(GLLib.Math_Sqrt_dup_I(h-f*f<<16)&255);if(c<d){--g}var b=255-c;m[0]=(c<<24|j);m[1]=(b<<24|j);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,2,a+g-1,l+f,2,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,2,a+g-1,l-f,2,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a+f,l+g-1,1,2,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a-f,l+g-1,1,2,true,true,0);m[0]=(b<<24|j);m[1]=(c<<24|j);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,2,a-g,l+f,2,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,2,a-g,l-f,2,1,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a+f,l-g,1,2,true,true,0);GLLib.DrawRGB_dup_javaxmicroeditionlcduiGraphicsaIIIIIIIZZI(e,m,0,1,a-f,l-g,1,2,true,true,0);d=c}};GLLib.AssertConfig=function(){GLLib.s_configErrorOccured=false;var T=true||false||false||true||false||false;var E="GLLibConfig Assert: Must have at least one PixelFormat enabled, see sprite_usePixelFormat*";if(!T){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(E)}var D=false||false||true||true||true||true||true||true||true||true||false||false;var S="GLLibConfig Assert: Must have at least one EncodeFormat enabled, see sprite_useEncodeFormat*";if(!D){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(S)}var C=!true||true;var R="GLLibConfig Assert: sprite_useCacheFramesWithCustomBlit is TRUE but sprite_allowPixelArrayGraphics is FALSE!";if(!C){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(R)}var B=true||false||false;var Q="GLLibConfig Assert: No way to create module, must have one of the following be true: sprite_useCreateRGB or sprite_useNokiaUI or sprite_useDynamicPng";if(!B){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(Q)}var A=!true||true||false;var P="GLLibConfig Assert: sprite_newTextRendering is TRUE but both sprite_useMultipleModuleTypes and sprite_convertMarkersToImageTypes are FALSE! Strings will not work correctly!!";if(!A){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(P)}var z=!false||!true;var O="GLLibConfig Assert: sprite_useFMPalette is not supported when sprite_useSingleArrayForFMAF is true!";if(!z){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(O)}var y=!false||!false;var N="GLLibConfig Assert: sprite_useFMOffShort is not supported when sprite_useSingleArrayForFMAF is true!";if(!y){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(N)}var x=!false||!true;var M="GLLibConfig Assert: Using both sprite_useFMOffShort sprite_allowFMOffShort, can't be used together! Select one of them or none.";if(!x){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(M)}var w=!true||!false||false;var L="GLLibConfig Assert: Using sprite_usePrecomputedFrameRect, must either disable sprite_alwaysBsSkipFrameRc and not export any spirtes like this, or enable sprite_useOperationRect";if(!w){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(L)}var q=!false||!true;var v="GLLibConfig Assert: Using both sprite_useLoadImageWithoutTransf sprite_useTransfRot, can't be used together!";if(!q){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(v)}var o=!false||!true;var u="GLLibConfig Assert: Using both sprite_useLoadImageWithoutTransf sprite_useTransfFlip, can't be used together!";if(!o){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(u)}var m=!false||!true;var t="GLLibConfig Assert: Using both sprite_useLoadImageWithoutTransf sprite_useTransMappings, can't be used together!";if(!m){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(t)}if(true){var k=!false||true;var r="GLLibConfig Assert: sound_useRealizedPlayers is TRUE, you must set sound_useCachedPlayers to TRUE";if(!k){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(r)}var i=!false||true;var p="GLLibConfig Assert: sound_usePrefetchedPlayers is TRUE, you must set sound_useCachedPlayers to TRUE";if(!i){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(p)}}var h=!false||false||true||false;var n="GLLibConfig Assert: pfx_useFullScreenEffectBlur is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!h){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(n)}var f=!false||false||true||false;var l="GLLibConfig Assert: pfx_useFullScreenEffectBlend is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!f){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(l)}var d=!false||false||true||false;var j="GLLibConfig Assert: pfx_useFullScreenEffectAdditive is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!d){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(j)}var c=!false||false||true||false;var g="GLLibConfig Assert: pfx_useFullScreenEffectSubtractive is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!c){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(g)}var a=!false||false||true||false;var e="GLLibConfig Assert: pfx_useFullScreenEffectMultiplicative is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!a){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(e)}var H=!false||false||true||false;var K="GLLibConfig Assert: pfx_useEffectGlow is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!H){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(K)}var G=!false||false||true||false;var J="GLLibConfig Assert: pfx_useSpriteEffectAdditive is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!G){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(J)}var F=!false||false||true||false;var I="GLLibConfig Assert: pfx_useSpriteEffectMultiplicative is TRUE but no way to access screen, set pfx_useScreenBuffer to TRUE!";if(!F){if(!GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}GLLib.s_configErrorOccured=true;GLLib.Dbg(I)}if(GLLib.s_configErrorOccured){GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");GLLib.Dbg("!!!!!            GLLibConfiguration Assertions Failed                     !!!!!");GLLib.Dbg("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")}};GLLib.Bidi_ProcessChars_dup_aCI=function(b,a){return GLLib.Bidi_ProcessChars_dup_aCIZZ(b,a,true,false)};GLLib.Bidi_ProcessChars_dup_aCIZZ=function(aw,I,N,aH){if(GLLib.s_bidi_charType==null){GLLib.s_bidi_charType=GLLib.BIDI_CHARTYPE}var aF=false;for(var M=0;M<I;++M){var t=GLLib.Bidi_GetCharType(aw[M]);if(t==3||t==4){aF=true;break}}if(!aF){return false}var aq=gloft.ArrayCreation([I],gloft.casttoint(null));var ao=gloft.ArrayCreation([I],gloft.casttoint(null));var am=gloft.ArrayCreation([I],gloft.casttobyte(null));var aT=0;if(N){aT=1}else{for(var L=0;L<I;++L){var g=GLLib.Bidi_GetCharType(aw[L]);if(g==3||g==4){aT=1;break}if(g==0){break}}}var aS=aT;var aR=18;var aD=false;var aB=0;for(var K=0;K<I;++K){var f=GLLib.Bidi_GetCharType(aw[K]);if(aH){if((aw[K]==gloft.casttoint("\u0001")||(true&&!false&&aw[K]==gloft.casttoint("\\")))&&K<I-1){if(aw[K]==gloft.casttoint("\\")){aB=gloft.casttobyte((aw[K+1]-gloft.casttoint("0")))}else{aB=gloft.casttobyte(aw[K+1])}aw[K+1]=(aw[K]="\u000e");am[K+1]=(am[K]=-1);f=14}if(am[K]!=-1){am[K]=aB}}switch(f){case 5:var ak=ao;var aQ=K;var aP=aS+1|1;ak[aQ]=aP;aS=aP;ao[K]=GLLib.Bidi_SetOverrideBits(ao[K],aR);aR=18;break;case 1:var ai=ao;var aO=K;var aN=aS+2&-2;ai[aO]=aN;aS=aN;ao[K]=GLLib.Bidi_SetOverrideBits(ao[K],aR);aR=18;break;case 6:var ag=ao;var aL=K;var G=aS+1|1;ag[aL]=G;aS=G;aR=(f=3);aD=true;break;case 2:var ae=ao;var F=K;var E=aS+2&-2;ae[F]=E;aS=E;aR=(f=0);aD=true;break;case 7:var H=GLLib.Bidi_GetPreviousLevel(ao,K);if(H==-1){aS=aT;aR=18}else{aS=(H&63);var D=H&192;if((D&64)!=0){aR=3}else{if((D&128)!=0){aR=0}else{aR=18}}}ao[K]=aS;break;case 16:case 17:ao[K]=aS;f=18;if(aR!=18){f=aR;break}break;default:ao[K]=aS;if(aR!=18){f=aR;break}break}aq[K]=f}if(aD){for(var J=0;J<I;++J){ao[J]&=63}}for(var C=0;C<I;++C){switch(aq[C]){case 1:case 2:case 5:case 6:case 7:aq[C]=14;aw[C]="\u001f";break}}var B=aT;var A=0;for(var z=0;z<I;++z){if(ao[z]!=B){B=ao[z];++A}}var ad=gloft.ArrayCreation([++A],gloft.casttoint(null));var y=0;var x=0;var w=aT;for(var v=0;v<I;++v){if(ao[v]!=w){ad[y++]=x;x=v;w=ao[v]}}ad[y++]=x;var u=aT;for(var s=0;s<A;++s){var r=ad[s];var ac=ad;var q=s;var ab=ac;var p=(q==ab.length-1)?I:ab[q+1];var o=ao[r];var m=gloft.casttoint(null);if(s==A-1){m=aT}else{m=ao[ad[s+1]]}var h=java.lang.Math.max(u,o)%2;var d=java.lang.Math.max(o,m)%2;var c=h;var a=h;for(var a0=r;a0<p;++a0){if(aq[a0]==13){aq[a0]=c}if(aq[a0]==8&&a==4){aq[a0]=11}if(aq[a0]==4){a=aq[a0];aq[a0]=3}else{if(aq[a0]==3||aq[a0]==0){a=aq[a0]}}c=aq[a0]}var aZ=h;var aY=h;for(var aX=r;aX<p;++aX){var aW=(aX==p-1)?d:aq[aX+1];if(aZ==8&&aW==8){if(aq[aX]==9||aq[aX]==12){aq[aX]=aW}}else{if(aZ==11&&aW==11&&aq[aX]==12){aq[aX]=aW}}if(aq[aX]==10||aq[aX]==14){if(aZ==8){aq[aX]=aZ}else{var aV=gloft.casttoint(null);for(aV=aX+1;aV<p&&(aq[aV]==10||aq[aV]==14);++aV){}if(aV<p&&aq[aV]==8){for(var aU=aX;aU<aV;++aU){aq[aU]=8}}}}switch(aq[aX]){case 9:case 10:case 12:case 14:aq[aX]=18;break}if(aY==0&&aq[aX]==8){aq[aX]=aY}if(aq[aX]==3||aq[aX]==0||aq[aX]==4){aY=aq[aX]}aZ=aq[aX]}u=o}var aM=aT;for(var aK=0;aK<A;++aK){var aJ=ad[aK];var Z=ad;var aI=aK;var X=Z;var aG=(aI==X.length-1)?I:X[aI+1];var aE=ao[aJ];var aC=(aE%2==0)?0:3;var aA=gloft.casttoint(null);if(aK==A-1){aA=aT}else{aA=ao[ad[aK+1]]}var az=java.lang.Math.max(aM,aE)%2;var ax=java.lang.Math.max(aE,aA)%2;var av=az;var au=-1;for(var at=aJ;at<=aG;++at){var ar=-1;switch((at==aG)?ax:aq[at]){case 0:ar=0;break;case 3:case 8:case 11:ar=3;break;case 14:case 15:case 16:case 17:case 18:if(au==-1){au=at;break}break}if(ar!=-1){if(au!=-1){var ap=(av==ar)?av:aC;for(var an=au;an<at;++an){aq[an]=ap}}av=ar;au=-1}}aM=aE}for(var al=0;al<I;++al){if((ao[al]&1)==0){if(aq[al]==3){var V=ao;var aj=al;++V[aj]}else{if(aq[al]==11||aq[al]==8){var T=ao;var ah=al;T[ah]+=2}}}else{if(aq[al]==0||aq[al]==8||aq[al]==11){var R=ao;var af=al;++R[af]}}}var aa=gloft.casttoint(null);for(aa=I-1;aa>0&&GLLib.Bidi_GetCharType(aw[aa])==17;--aa){}if(aa<I-1){++aa;while(aa<I){ao[aa]=aT;++aa}}for(var Y=0;Y<I;++Y){var e=GLLib.Bidi_GetCharType(aw[Y]);if(e==17){var W=gloft.casttoint(null);for(W=Y;W<I&&GLLib.Bidi_GetCharType(aw[W])==17;++W){}if(W==I||GLLib.Bidi_GetCharType(aw[W])==15||GLLib.Bidi_GetCharType(aw[W])==16){--W;while(W>=Y){ao[W]=aT;--W}}}else{if(e==15||e==16){ao[Y]=aT}}}for(var U=0;U<I;++U){if(ao[U]%2==1){aw[U]=GLLib.Bidi_DoMirror(aw[U])}}var S=0;var Q=ao[0];while(S<I){if(ao[S]>Q){Q=ao[S]}++S}for(var P=Q;P>0;--P){GLLib.Bidi_FlipThisRun(aw,am,ao,P,Q,I)}if(aH){var ay=0;for(var O=0;O<I-1;++O){if(am[O]==-1){aw[O]="\u0001";if(O<I-2){ay=am[O+2];aw[O+1]=gloft.casttochar(ay);am[O+1]=0}else{aw[O+1]=gloft.casttochar(ay);am[O+1]=0}}}}return true};GLLib.Bidi_DoMirror=function(a){if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("\0")){switch(a){case"(":a=")";break;case")":a="(";break;case"<":a=">";break;case">":a="<";break;case"[":a="]";break;case"]":a="[";break;case"{":a="}";break;case"}":a="{";break;case"«":a="»";break;case"»":a="«";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("\u2000")){switch(a){case"‹":a="›";break;case"›":a="‹";break;case"⁅":a="⁆";break;case"⁆":a="⁅";break;case"⁽":a="⁾";break;case"⁾":a="⁽";break;case"₍":a="₎";break;case"₎":a="₍";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("∀")){switch(a){case"∈":a="∋";break;case"∉":a="∌";break;case"∊":a="∍";break;case"∋":a="∈";break;case"∌":a="∉";break;case"∍":a="∊";break;case"∕":a="⧵";break;case"∼":a="∽";break;case"∽":a="∼";break;case"≃":a="⋍";break;case"≒":a="≓";break;case"≓":a="≒";break;case"≔":a="≕";break;case"≕":a="≔";break;case"≤":a="≥";break;case"≥":a="≤";break;case"≦":a="≧";break;case"≧":a="≦";break;case"≨":a="≩";break;case"≩":a="≨";break;case"≪":a="≫";break;case"≫":a="≪";break;case"≮":a="≯";break;case"≯":a="≮";break;case"≰":a="≱";break;case"≱":a="≰";break;case"≲":a="≳";break;case"≳":a="≲";break;case"≴":a="≵";break;case"≵":a="≴";break;case"≶":a="≷";break;case"≷":a="≶";break;case"≸":a="≹";break;case"≹":a="≸";break;case"≺":a="≻";break;case"≻":a="≺";break;case"≼":a="≽";break;case"≽":a="≼";break;case"≾":a="≿";break;case"≿":a="≾";break;case"⊀":a="⊁";break;case"⊁":a="⊀";break;case"⊂":a="⊃";break;case"⊃":a="⊂";break;case"⊄":a="⊅";break;case"⊅":a="⊄";break;case"⊆":a="⊇";break;case"⊇":a="⊆";break;case"⊈":a="⊉";break;case"⊉":a="⊈";break;case"⊊":a="⊋";break;case"⊋":a="⊊";break;case"⊏":a="⊐";break;case"⊐":a="⊏";break;case"⊑":a="⊒";break;case"⊒":a="⊑";break;case"⊘":a="⦸";break;case"⊢":a="⊣";break;case"⊣":a="⊢";break;case"⊦":a="⫞";break;case"⊨":a="⫤";break;case"⊩":a="⫣";break;case"⊫":a="⫥";break;case"⊰":a="⊱";break;case"⊱":a="⊰";break;case"⊲":a="⊳";break;case"⊳":a="⊲";break;case"⊴":a="⊵";break;case"⊵":a="⊴";break;case"⊶":a="⊷";break;case"⊷":a="⊶";break;case"⋉":a="⋊";break;case"⋊":a="⋉";break;case"⋋":a="⋌";break;case"⋌":a="⋋";break;case"⋍":a="≃";break;case"⋐":a="⋑";break;case"⋑":a="⋐";break;case"⋖":a="⋗";break;case"⋗":a="⋖";break;case"⋘":a="⋙";break;case"⋙":a="⋘";break;case"⋚":a="⋛";break;case"⋛":a="⋚";break;case"⋜":a="⋝";break;case"⋝":a="⋜";break;case"⋞":a="⋟";break;case"⋟":a="⋞";break;case"⋠":a="⋡";break;case"⋡":a="⋠";break;case"⋢":a="⋣";break;case"⋣":a="⋢";break;case"⋤":a="⋥";break;case"⋥":a="⋤";break;case"⋦":a="⋧";break;case"⋧":a="⋦";break;case"⋨":a="⋩";break;case"⋩":a="⋨";break;case"⋪":a="⋫";break;case"⋫":a="⋪";break;case"⋬":a="⋭";break;case"⋭":a="⋬";break;case"⋰":a="⋱";break;case"⋱":a="⋰";break;case"⋲":a="⋺";break;case"⋳":a="⋻";break;case"⋴":a="⋼";break;case"⋶":a="⋽";break;case"⋷":a="⋾";break;case"⋺":a="⋲";break;case"⋻":a="⋳";break;case"⋼":a="⋴";break;case"⋽":a="⋶";break;case"⋾":a="⋷";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("⌀")){switch(a){case"⌈":a="⌉";break;case"⌉":a="⌈";break;case"⌊":a="⌋";break;case"⌋":a="⌊";break;case"〈":a="〉";break;case"〉":a="〈";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("\u2700")){switch(a){case"❨":a="❩";break;case"❩":a="❨";break;case"❪":a="❫";break;case"❫":a="❪";break;case"❬":a="❭";break;case"❭":a="❬";break;case"❮":a="❯";break;case"❯":a="❮";break;case"❰":a="❱";break;case"❱":a="❰";break;case"❲":a="❳";break;case"❳":a="❲";break;case"❴":a="❵";break;case"❵":a="❴";break;case"⟕":a="⟖";break;case"⟖":a="⟕";break;case"⟝":a="⟞";break;case"⟞":a="⟝";break;case"⟢":a="⟣";break;case"⟣":a="⟢";break;case"⟤":a="⟥";break;case"⟥":a="⟤";break;case"⟦":a="⟧";break;case"⟧":a="⟦";break;case"⟨":a="⟩";break;case"⟩":a="⟨";break;case"⟪":a="⟫";break;case"⟫":a="⟪";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("⤀")){switch(a){case"⦃":a="⦄";break;case"⦄":a="⦃";break;case"⦅":a="⦆";break;case"⦆":a="⦅";break;case"⦇":a="⦈";break;case"⦈":a="⦇";break;case"⦉":a="⦊";break;case"⦊":a="⦉";break;case"⦋":a="⦌";break;case"⦌":a="⦋";break;case"⦍":a="⦐";break;case"⦎":a="⦏";break;case"⦏":a="⦎";break;case"⦐":a="⦍";break;case"⦑":a="⦒";break;case"⦒":a="⦑";break;case"⦓":a="⦔";break;case"⦔":a="⦓";break;case"⦕":a="⦖";break;case"⦖":a="⦕";break;case"⦗":a="⦘";break;case"⦘":a="⦗";break;case"⦸":a="⊘";break;case"⧀":a="⧁";break;case"⧁":a="⧀";break;case"⧄":a="⧅";break;case"⧅":a="⧄";break;case"⧏":a="⧐";break;case"⧐":a="⧏";break;case"⧑":a="⧒";break;case"⧒":a="⧑";break;case"⧔":a="⧕";break;case"⧕":a="⧔";break;case"⧘":a="⧙";break;case"⧙":a="⧘";break;case"⧚":a="⧛";break;case"⧛":a="⧚";break;case"⧵":a="∕";break;case"⧸":a="⧹";break;case"⧹":a="⧸";break;case"⧼":a="⧽";break;case"⧽":a="⧼";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("⨀")){switch(a){case"⨫":a="⨬";break;case"⨬":a="⨫";break;case"⨭":a="⨬";break;case"⨮":a="⨭";break;case"⨴":a="⨵";break;case"⨵":a="⨴";break;case"⨼":a="⨽";break;case"⨽":a="⨼";break;case"⩤":a="⩥";break;case"⩥":a="⩤";break;case"⩹":a="⩺";break;case"⩺":a="⩹";break;case"⩽":a="⩾";break;case"⩾":a="⩽";break;case"⩿":a="⪀";break;case"⪀":a="⩿";break;case"⪁":a="⪂";break;case"⪂":a="⪁";break;case"⪃":a="⪄";break;case"⪄":a="⪃";break;case"⪋":a="⪌";break;case"⪌":a="⪋";break;case"⪑":a="⪒";break;case"⪒":a="⪑";break;case"⪓":a="⪔";break;case"⪔":a="⪓";break;case"⪕":a="⪖";break;case"⪖":a="⪕";break;case"⪗":a="⪘";break;case"⪘":a="⪗";break;case"⪙":a="⪚";break;case"⪚":a="⪙";break;case"⪛":a="⪜";break;case"⪜":a="⪛";break;case"⪡":a="⪢";break;case"⪢":a="⪡";break;case"⪦":a="⪧";break;case"⪧":a="⪦";break;case"⪨":a="⪩";break;case"⪩":a="⪨";break;case"⪪":a="⪫";break;case"⪫":a="⪪";break;case"⪬":a="⪭";break;case"⪭":a="⪬";break;case"⪯":a="⪰";break;case"⪰":a="⪯";break;case"⪳":a="⪴";break;case"⪴":a="⪳";break;case"⪻":a="⪼";break;case"⪼":a="⪻";break;case"⪽":a="⪾";break;case"⪾":a="⪽";break;case"⪿":a="⫀";break;case"⫀":a="⪿";break;case"⫁":a="⫂";break;case"⫂":a="⫁";break;case"⫃":a="⫄";break;case"⫄":a="⫃";break;case"⫅":a="⫆";break;case"⫆":a="⫅";break;case"⫍":a="⫎";break;case"⫎":a="⫍";break;case"⫏":a="⫐";break;case"⫐":a="⫏";break;case"⫑":a="⫒";break;case"⫒":a="⫑";break;case"⫓":a="⫔";break;case"⫔":a="⫓";break;case"⫕":a="⫖";break;case"⫖":a="⫕";break;case"⫞":a="⊦";break;case"⫣":a="⊩";break;case"⫤":a="⊨";break;case"⫥":a="⊫";break;case"⫬":a="⫭";break;case"⫭":a="⫬";break;case"⫷":a="⫸";break;case"⫸":a="⫷";break;case"⫹":a="⫺";break;case"⫺":a="⫹";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("\u3000")){switch(a){case"〈":a="〉";break;case"〉":a="〈";break;case"《":a="》";break;case"》":a="《";break;case"「":a="」";break;case"」":a="「";break;case"『":a="』";break;case"』":a="『";break;case"【":a="】";break;case"】":a="【";break;case"〔":a="〕";break;case"〕":a="〔";break;case"〖":a="〗";break;case"〗":a="〖";break;case"〘":a="〙";break;case"〙":a="〘";break;case"〚":a="〛";break;case"〛":a="〚";break}}else{if((gloft.casttoint(a)&gloft.casttoint("\uff00"))==gloft.casttoint("\uff00")){switch(a){case"（":a="）";break;case"）":a="（";break;case"＜":a="＞";break;case"＞":a="＜";break;case"［":a="］";break;case"］":a="［";break;case"｛":a="｝";break;case"｝":a="｛";break;case"｟":a="｠";break;case"｠":a="｟";break;case"｢":a="｣";break;case"｣":a="｢";break}}}}}}}}}}return a};GLLib.Bidi_SetOverrideBits=function(b,a){if(a==18){return b}if(a==3){return b|64}if(a==0){return b|128}return b};GLLib.Bidi_GetPreviousLevel=function(c,b){if(b<=0){return -1}for(var a=c[--b];b>=0&&c[b]==a;--b){}if(b>=0){return c[b]}return -1};GLLib.Bidi_FlipThisRun=function(j,o,m,d,h,g){var a=0;var f=0;while(a<g&&f<g){for(f=(a=GLLib.Bidi_FindIndexOfRun(m,a,g,d,h));a<g&&h>=m[a]&&d<=m[a];++a){}for(var e=a-1;e>f;--e,++f){var k=j[e];j[e]=j[f];j[f]=k;var l=o[e];o[e]=o[f];o[f]=l}}};GLLib.Bidi_FindIndexOfRun=function(f,e,d,b,a){for(var c=e;c<d;++c){if(f[c]>=b&&f[c]<=a){return c}}return d};GLLib.Bidi_GetCharType=function(d){var b=-1;var c=GLLib.s_bidi_charType.length;while(c-b>1){var a=gloft.casttoint((b+c)/2);if(d<GLLib.s_bidi_charType[a][GLLib.k_charTypeIndexFirst]){c=a}else{if(d<=GLLib.s_bidi_charType[a][GLLib.k_charTypeIndexLast]){return GLLib.s_bidi_charType[a][GLLib.k_charTypeIndexType]}b=a}}return 18};GLLib.Arabic_ShapeChars=function(l,a){var k=3;for(var g=0;g<a;++g){var m=l[g];var f=(l[g]>=gloft.casttoint("ء")&&l[g]<=GLLib.SHAPE_LAST)?GLLib.s_ar_shapeType[l[g]-gloft.casttoint("ء")][0]:"\u0003";if(gloft.casttoint(f)!=gloft.casttoint("\u0005")){var d="\0";var h=3;for(var e=g+1;e<a;++e){if(((l[e]>=gloft.casttoint("ء")&&l[e]<=GLLib.SHAPE_LAST)?GLLib.s_ar_shapeType[l[e]-gloft.casttoint("ء")][0]:"\u0003")!=gloft.casttoint("\u0005")){d=l[e];h=((l[e]>=gloft.casttoint("ء")&&l[e]<=GLLib.SHAPE_LAST)?GLLib.s_ar_shapeType[l[e]-gloft.casttoint("ء")][0]:"\u0003");break}}switch(f){case 4:case 1:if(k==0||k==2||k==4){l[g]=gloft.casttochar((GLLib.s_ar_shapeType[gloft.casttoint(m)-gloft.casttoint("ء")][1]+gloft.casttoint("\u0001")));break}l[g]=GLLib.s_ar_shapeType[gloft.casttoint(m)-gloft.casttoint("ء")][1];break;case 2:if(gloft.casttoint(m)==gloft.casttoint("ل")){var o=false;if(g<a+1){switch(d){case 1570:o=true;if(k==0||k==2||k==4){l[g]="ﻶ";break}l[g]="ﻵ";break;case 1571:o=true;if(k==0||k==2||k==4){l[g]="ﻸ";break}l[g]="ﻷ";break;case 1573:o=true;if(k==0||k==2||k==4){l[g]="ﻺ";break}l[g]="ﻹ";break;case 1575:o=true;if(k==0||k==2||k==4){l[g]="ﻼ";break}l[g]="ﻻ";break}}if(o){l[g+1]="\u001f";break}}if(k==0||k==2||k==4){if(h==1||h==2||h==4){l[g]=gloft.casttochar((GLLib.s_ar_shapeType[gloft.casttoint(m)-gloft.casttoint("ء")][1]+gloft.casttoint("\u0003")));break}l[g]=gloft.casttochar((GLLib.s_ar_shapeType[gloft.casttoint(m)-gloft.casttoint("ء")][1]+gloft.casttoint("\u0001")));break}else{if(h==1||h==2||h==4){l[g]=gloft.casttochar((GLLib.s_ar_shapeType[gloft.casttoint(m)-gloft.casttoint("ء")][1]+gloft.casttoint("\u0002")));break}l[g]=GLLib.s_ar_shapeType[gloft.casttoint(m)-gloft.casttoint("ء")][1];break}break}k=f}}};GLLib.g=null;GLLib.s_lastPaintGraphics=null;GLLib.s_screenGraphics=null;GLLib.s_screenWidth=640;GLLib.s_screenHeight=360;GLLib.m_FPSLimiter=gloft.casttoint(1000/14);GLLib.m_customSleepTime=-1;GLLib.m_imgBackBuffer=null;GLLib.m_gBackBuffer=null;GLLib.m_bBackBufferEnabled=true;GLLib.s_bPlatformRequestPending=false;GLLib.s_urlPlatformRequest=null;GLLib.s_keyLastKeyPressUntranslatedCode=-9999;GLLib.m_last_key_pressed=-9999;GLLib.s_nbKey=25;GLLib.s_dbg_console_logSlotsSize=500;GLLib.s_dbg_console_nbVisibleSlots=5;GLLib.s_dbg_console_fontColor=65280;GLLib.s_dbg_console_fontBackgroundColor=0;GLLib.s_dbg_console_recordLogCurrentTime=false;GLLib.s_dbg_console_forceFocusNextAvailableSlot=true;GLLib.s_dbg_console_currentAction=-1;GLLib.s_math_F_1=1<<8;GLLib.s_math_F_05=GLLib.s_math_F_1>>1;GLLib.Math_AngleMUL=1<<8;GLLib.Math_Angle90=gloft.casttoint(90*GLLib.Math_AngleMUL/360);GLLib.Math_Angle180=gloft.casttoint(180*GLLib.Math_AngleMUL/360);GLLib.Math_Angle270=gloft.casttoint(270*GLLib.Math_AngleMUL/360);GLLib.Math_Angle360=gloft.casttoint(360*GLLib.Math_AngleMUL/360);GLLib.Math_FixedPoint_PI=1686629713>>29-8;GLLib.Math_FixedPoint_E=1459366444>>29-8;GLLib.ratioRadiansToDegrees=GLLib.Math_FixedPoint_Divide(180<<8,GLLib.Math_FixedPoint_PI);GLLib.ratioDegreesToAngleFixedPoint=GLLib.Math_FixedPoint_Divide(1<<8,360);GLLib.s_Math_intersectPoints=gloft.ArrayCreation([2,2],gloft.casttoint(null));GLLib.s_dlc_state=-1;GLLib.s_dlc_version_count=0;GLLib.Stream_readOffset=0;GLLib.text_encoding="UTF-8";GLLib.PROFILER_MAX_EVENTS=200;GLLib.s_profiler_emulator=(java.lang.System.getProperty("EMU://EndNamedEvent")!=null);GLLib.pfx_usingScreenBuffer=(false&&(false||false||false||false||false||false||false||false));GLLib.pfx_useSpriteEffects=(false||false||true||true||true||true||false||false);GLLib.s_PFX_initializd=false;GLLib.s_PFX_type=0;GLLib.s_PFX_params=null;GLLib.s_PFX_screenBuffer=null;GLLib.s_PFX_screenBufferG=null;GLLib.s_PFX_customBuffer=null;GLLib.s_PFX_enableScreenBuffer=0;GLLib.s_PFX_enableScreenBufferThisFrame=0;GLLib.s_PFX_screenIsBuffered=false;GLLib.s_configErrorOccured=false;GLLib.BIDI_CHARTYPE=[[0,8,14],[9,9,16],[10,10,15],[11,11,16],[12,12,17],[13,13,15],[14,27,14],[28,30,15],[31,31,16],[32,32,17],[35,37,10],[43,43,9],[44,44,12],[45,45,9],[46,47,12],[48,57,8],[58,58,12],[65,90,0],[97,122,0],[127,132,14],[133,133,15],[134,159,14],[160,160,12],[162,165,10],[170,170,0],[173,173,14],[176,177,10],[178,179,8],[181,181,0],[185,185,8],[186,186,0],[192,214,0],[216,246,0],[248,566,0],[592,696,0],[699,705,0],[720,721,0],[736,740,0],[750,750,0],[768,855,13],[861,879,13],[890,890,0],[902,902,0],[904,906,0],[908,908,0],[910,929,0],[931,974,0],[976,1013,0],[1015,1019,0],[1024,1154,0],[1155,1158,13],[1160,1161,13],[1162,1230,0],[1232,1269,0],[1272,1273,0],[1280,1295,0],[1329,1366,0],[1369,1375,0],[1377,1415,0],[1417,1417,0],[1425,1441,13],[1443,1465,13],[1467,1469,13],[1470,1470,3],[1471,1471,13],[1472,1472,3],[1473,1474,13],[1475,1475,3],[1476,1476,13],[1488,1514,3],[1520,1524,3],[1536,1539,4],[1548,1548,12],[1549,1549,4],[1552,1557,13],[1563,1563,4],[1567,1567,4],[1569,1594,4],[1600,1610,4],[1611,1624,13],[1632,1641,11],[1642,1642,10],[1643,1644,11],[1645,1647,4],[1648,1648,13],[1649,1749,4],[1750,1756,13],[1757,1757,4],[1758,1764,13],[1765,1766,4],[1767,1768,13],[1770,1773,13],[1774,1775,4],[1776,1785,8],[1786,1805,4],[1807,1807,14],[1808,1808,4],[1809,1809,13],[1810,1839,4],[1840,1866,13],[1869,1871,4],[1920,1957,4],[1958,1968,13],[1969,1969,4],[2305,2306,13],[2307,2361,0],[2364,2364,13],[2365,2368,0],[2369,2376,13],[2377,2380,0],[2381,2381,13],[2384,2384,0],[2385,2388,13],[2392,2401,0],[2402,2403,13],[2404,2416,0],[2433,2433,13],[2434,2435,0],[2437,2444,0],[2447,2448,0],[2451,2472,0],[2474,2480,0],[2482,2482,0],[2486,2489,0],[2492,2492,13],[2493,2496,0],[2497,2500,13],[2503,2504,0],[2507,2508,0],[2509,2509,13],[2519,2519,0],[2524,2525,0],[2527,2529,0],[2530,2531,13],[2534,2545,0],[2546,2547,10],[2548,2554,0],[2561,2562,13],[2563,2563,0],[2565,2570,0],[2575,2576,0],[2579,2600,0],[2602,2608,0],[2610,2611,0],[2613,2614,0],[2616,2617,0],[2620,2620,13],[2622,2624,0],[2625,2626,13],[2631,2632,13],[2635,2637,13],[2649,2652,0],[2654,2654,0],[2662,2671,0],[2672,2673,13],[2674,2676,0],[2689,2690,13],[2691,2691,0],[2693,2701,0],[2703,2705,0],[2707,2728,0],[2730,2736,0],[2738,2739,0],[2741,2745,0],[2748,2748,13],[2749,2752,0],[2753,2757,13],[2759,2760,13],[2761,2761,0],[2763,2764,0],[2765,2765,13],[2768,2768,0],[2784,2785,0],[2786,2787,13],[2790,2799,0],[2801,2801,10],[2817,2817,13],[2818,2819,0],[2821,2828,0],[2831,2832,0],[2835,2856,0],[2858,2864,0],[2866,2867,0],[2869,2873,0],[2876,2876,13],[2877,2878,0],[2879,2879,13],[2880,2880,0],[2881,2883,13],[2887,2888,0],[2891,2892,0],[2893,2893,13],[2902,2902,13],[2903,2903,0],[2908,2909,0],[2911,2913,0],[2918,2929,0],[2946,2946,13],[2947,2947,0],[2949,2954,0],[2958,2960,0],[2962,2965,0],[2969,2970,0],[2972,2972,0],[2974,2975,0],[2979,2980,0],[2984,2986,0],[2990,2997,0],[2999,3001,0],[3006,3007,0],[3008,3008,13],[3009,3010,0],[3014,3016,0],[3018,3020,0],[3021,3021,13],[3031,3031,0],[3047,3058,0],[3065,3065,10],[3073,3075,0],[3077,3084,0],[3086,3088,0],[3090,3112,0],[3114,3123,0],[3125,3129,0],[3134,3136,13],[3137,3140,0],[3142,3144,13],[3146,3149,13],[3157,3158,13],[3168,3169,0],[3174,3183,0],[3202,3203,0],[3205,3212,0],[3214,3216,0],[3218,3240,0],[3242,3251,0],[3253,3257,0],[3260,3260,13],[3261,3268,0],[3270,3272,0],[3274,3275,0],[3276,3277,13],[3285,3286,0],[3294,3294,0],[3296,3297,0],[3302,3311,0],[3330,3331,0],[3333,3340,0],[3342,3344,0],[3346,3368,0],[3370,3385,0],[3390,3392,0],[3393,3395,13],[3398,3400,0],[3402,3404,0],[3405,3405,13],[3415,3415,0],[3424,3425,0],[3430,3439,0],[3458,3459,0],[3461,3478,0],[3482,3505,0],[3507,3515,0],[3517,3517,0],[3520,3526,0],[3530,3530,13],[3535,3537,0],[3538,3540,13],[3542,3542,13],[3544,3551,0],[3570,3572,0],[3585,3632,0],[3633,3633,13],[3634,3635,0],[3636,3642,13],[3647,3647,10],[3648,3654,0],[3655,3662,13],[3663,3675,0],[3713,3714,0],[3716,3716,0],[3719,3720,0],[3722,3722,0],[3725,3725,0],[3732,3735,0],[3737,3743,0],[3745,3747,0],[3749,3749,0],[3751,3751,0],[3754,3755,0],[3757,3760,0],[3761,3761,13],[3762,3763,0],[3764,3769,13],[3771,3772,13],[3773,3773,0],[3776,3780,0],[3782,3782,0],[3784,3789,13],[3792,3801,0],[3804,3805,0],[3840,3863,0],[3864,3865,13],[3866,3892,0],[3893,3893,13],[3894,3894,0],[3895,3895,13],[3896,3896,0],[3897,3897,13],[3902,3911,0],[3913,3946,0],[3953,3966,13],[3967,3967,0],[3968,3972,13],[3973,3973,0],[3974,3975,13],[3976,3979,0],[3984,3991,13],[3993,4028,13],[4030,4037,0],[4038,4038,13],[4039,4044,0],[4047,4047,0],[4096,4129,0],[4131,4135,0],[4137,4138,0],[4140,4140,0],[4141,4144,13],[4145,4145,0],[4146,4146,13],[4150,4151,13],[4152,4152,0],[4153,4153,13],[4160,4183,0],[4184,4185,13],[4256,4293,0],[4304,4344,0],[4347,4347,0],[4352,4441,0],[4447,4514,0],[4520,4601,0],[4608,4614,0],[4616,4678,0],[4680,4680,0],[4682,4685,0],[4688,4694,0],[4696,4696,0],[4698,4701,0],[4704,4742,0],[4744,4744,0],[4746,4749,0],[4752,4782,0],[4784,4784,0],[4786,4789,0],[4792,4798,0],[4800,4800,0],[4802,4805,0],[4808,4814,0],[4816,4822,0],[4824,4846,0],[4848,4878,0],[4880,4880,0],[4882,4885,0],[4888,4894,0],[4896,4934,0],[4936,4954,0],[4961,4988,0],[5024,5108,0],[5121,5750,0],[5760,5760,17],[5761,5786,0],[5792,5872,0],[5888,5900,0],[5902,5905,0],[5906,5908,13],[5920,5937,0],[5938,5940,13],[5941,5942,0],[5952,5969,0],[5970,5971,13],[5984,5996,0],[5998,6000,0],[6002,6003,13],[6016,6070,0],[6071,6077,13],[6078,6085,0],[6086,6086,13],[6087,6088,0],[6089,6099,13],[6100,6106,0],[6107,6107,10],[6108,6108,0],[6109,6109,13],[6112,6121,0],[6155,6157,13],[6158,6158,17],[6160,6169,0],[6176,6263,0],[6272,6312,0],[6313,6313,13],[6400,6428,0],[6432,6434,13],[6435,6438,0],[6439,6443,13],[6448,6449,0],[6450,6450,13],[6451,6456,0],[6457,6459,13],[6470,6509,0],[6512,6516,0],[7424,7531,0],[7680,7835,0],[7840,7929,0],[7936,7957,0],[7960,7965,0],[7968,8005,0],[8008,8013,0],[8016,8023,0],[8025,8025,0],[8027,8027,0],[8029,8029,0],[8031,8061,0],[8064,8116,0],[8118,8124,0],[8126,8126,0],[8130,8132,0],[8134,8140,0],[8144,8147,0],[8150,8155,0],[8160,8172,0],[8178,8180,0],[8182,8188,0],[8192,8202,17],[8203,8205,14],[8206,8206,0],[8207,8207,3],[8232,8232,17],[8233,8233,15],[8234,8234,1],[8235,8235,5],[8236,8236,7],[8237,8237,2],[8238,8238,6],[8239,8239,17],[8240,8244,10],[8260,8260,12],[8287,8287,17],[8288,8291,14],[8298,8303,14],[8304,8304,8],[8305,8305,0],[8308,8313,8],[8314,8315,10],[8319,8319,0],[8320,8329,8],[8330,8331,10],[8352,8369,10],[8400,8426,13],[8450,8450,0],[8455,8455,0],[8458,8467,0],[8469,8469,0],[8473,8477,0],[8484,8484,0],[8486,8486,0],[8488,8488,0],[8490,8493,0],[8494,8494,10],[8495,8497,0],[8499,8505,0],[8509,8511,0],[8517,8521,0],[8544,8579,0],[8722,8723,10],[9014,9082,0],[9109,9109,0],[9352,9371,8],[9372,9449,0],[10240,10495,0],[12288,12288,17],[12293,12295,0],[12321,12329,0],[12330,12335,13],[12337,12341,0],[12344,12348,0],[12353,12438,0],[12441,12442,13],[12445,12447,0],[12449,12538,0],[12540,12543,0],[12549,12588,0],[12593,12686,0],[12688,12727,0],[12784,12828,0],[12832,12867,0],[12896,12923,0],[12927,12976,0],[12992,13003,0],[13008,13054,0],[13056,13174,0],[13179,13277,0],[13280,13310,0],[13312,19893,0],[19968,40869,0],[40960,42124,0],[44032,55203,0],[55296,64045,0],[64048,64106,0],[64256,64262,0],[64275,64279,0],[64285,64285,3],[64286,64286,13],[64287,64296,3],[64297,64297,10],[64298,64310,3],[64312,64316,3],[64318,64318,3],[64320,64321,3],[64323,64324,3],[64326,64335,3],[64336,64433,4],[64467,64829,4],[64848,64911,4],[64914,64967,4],[65008,65020,4],[65024,65039,13],[65056,65059,13],[65104,65104,12],[65106,65106,12],[65109,65109,12],[65119,65119,10],[65122,65123,10],[65129,65130,10],[65136,65140,4],[65142,65276,4],[65279,65279,14],[65283,65285,10],[65291,65291,10],[65292,65292,12],[65293,65293,10],[65294,65294,12],[65295,65295,9],[65296,65305,8],[65306,65306,12],[65313,65338,0],[65345,65370,0],[65382,65470,0],[65474,65479,0],[65482,65487,0],[65490,65495,0],[65498,65500,0],[65504,65505,10],[65509,65510,10],[65536,65547,0],[65549,65574,0],[65576,65594,0],[65596,65597,0],[65599,65613,0],[65616,65629,0],[65664,65786,0],[65792,65792,0],[65794,65794,0],[65799,65843,0],[65847,65855,0],[66304,66334,0],[66336,66339,0],[66352,66378,0],[66432,66461,0],[66463,66463,0],[66560,66717,0],[66720,66729,0],[67584,67589,3],[67592,67592,3],[67594,67637,3],[67639,67640,3],[67644,67644,3],[67647,67647,3],[118784,119029,0],[119040,119078,0],[119082,119142,0],[119143,119145,13],[119146,119154,0],[119155,119162,14],[119163,119170,13],[119171,119172,0],[119173,119179,13],[119180,119209,0],[119210,119213,13],[119214,119261,0],[119808,119892,0],[119894,119964,0],[119966,119967,0],[119970,119970,0],[119973,119974,0],[119977,119980,0],[119982,119993,0],[119995,119995,0],[119997,120003,0],[120005,120069,0],[120071,120074,0],[120077,120084,0],[120086,120092,0],[120094,120121,0],[120123,120126,0],[120128,120132,0],[120134,120134,0],[120138,120144,0],[120146,120483,0],[120488,120777,0],[120782,120831,8],[131072,173782,0],[194560,195101,0],[917505,917505,14],[917536,917631,14],[917760,917999,13],[983040,1048573,0],[1048576,1114109,0]];GLLib.k_charTypeIndexFirst=0;GLLib.k_charTypeIndexLast=1;GLLib.k_charTypeIndexType=2;GLLib.s_ar_shapeType=[["\u0003","ﺀ"],["\u0001","ﺁ"],["\u0001","ﺃ"],["\u0001","ﺅ"],["\u0001","ﺇ"],["\u0002","ﺉ"],["\u0001","ﺍ"],["\u0002","ﺏ"],["\u0001","ﺓ"],["\u0002","ﺕ"],["\u0002","ﺙ"],["\u0002","ﺝ"],["\u0002","ﺡ"],["\u0002","ﺥ"],["\u0001","ﺩ"],["\u0001","ﺫ"],["\u0001","ﺭ"],["\u0001","ﺯ"],["\u0002","ﺱ"],["\u0002","ﺵ"],["\u0002","ﺹ"],["\u0002","ﺽ"],["\u0002","ﻁ"],["\u0002","ﻅ"],["\u0002","ﻉ"],["\u0002","ﻍ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0004","\0"],["\u0002","ﻑ"],["\u0002","ﻕ"],["\u0002","ﻙ"],["\u0002","ﻝ"],["\u0002","ﻡ"],["\u0002","ﻥ"],["\u0002","ﻩ"],["\u0001","ﻭ"],["\u0001","ﻯ"],["\u0002","ﻱ"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0005","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0005","\0"],["\u0001","ﭐ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﭦ"],["\u0002","ﭞ"],["\u0002","ﭒ"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﭖ"],["\u0002","ﭢ"],["\u0002","ﭚ"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﭶ"],["\u0002","ﭲ"],["\u0003","\0"],["\u0002","ﭺ"],["\u0002","ﭾ"],["\u0001","ﮈ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0001","ﮄ"],["\u0001","ﮂ"],["\u0001","ﮆ"],["\u0003","\0"],["\u0003","\0"],["\u0001","ﮌ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0001","ﮊ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﭪ"],["\u0003","\0"],["\u0002","ﭮ"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﮎ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﯓ"],["\u0003","\0"],["\u0002","ﮒ"],["\u0003","\0"],["\u0002","ﮚ"],["\u0003","\0"],["\u0002","ﮖ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0001","ﮞ"],["\u0002","ﮠ"],["\u0003","\0"],["\u0003","\0"],["\u0002","ﮪ"],["\u0003","\0"],["\u0001","ﮤ"],["\u0002","ﮦ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0001","ﯠ"],["\u0001","ﯙ"],["\u0001","ﯗ"],["\u0001","ﯛ"],["\u0001","ﯢ"],["\u0003","\0"],["\u0001","ﯞ"],["\u0002","ﯼ"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0003","\0"],["\u0001","ﮮ"]];GLLib.SHAPE_LAST=1569+GLLib.s_ar_shapeType.length-1;